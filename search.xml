<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c语言程序设计</title>
      <link href="/2020/05/11/c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
      <url>/2020/05/11/c%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>简单的c语言程序介绍<br>#include&lt;stdio.h&gt;                                                          /<em>文件包含</em>/<br>void main()                                                                     /<em>主函数</em>/<br>{                                                                                      /<em>函数体开始</em>/<br>printf(“hello world\n”);                                                /<em>输出语句 , &quot;\n&quot;是换行符</em>/<br>}                                                                                     /<em>函数体结束</em>/<br>说明：main-主函数名，void-函数类型</p><ul><li>每个c程序必须有一个主函数main</li><li>{}是函数开始和结束的标志，不可省</li><li>每个C语句以分号结束</li><li>使用标准库函数时应在程序开头一行写：<br>#include &lt;stdio.h&gt;</li></ul>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql数据库原理与设计</title>
      <link href="/2020/04/25/sql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E8%AE%BE%E8%AE%A1/"/>
      <url>/2020/04/25/sql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-设计数据库">第一章 设计数据库</h2><h3 id="center-1-1-课程要求-center"><center>1.1 课程要求<center></h3><p>1、掌握数据库基础知识。</p><p>2、熟练掌握sql语句的书写。</p><p>3、能用SQL server 2012进行数据库设计。</p><h3 id="center-1-2-数据库基础知识-center"><center>1.2 数据库基础知识</center></h3><p>1、数据库的地位</p><ol><li><p>数据库技术产生于六十年代末，是数据管理的最新技术，是计算机科学的重要分支。</p></li><li><p>数据库技术是信息系统的核心和基础，它的出现极大地促进了计算机应用向各行各业的渗透。</p></li><li><p>数据库的建设规模、数据库信息量的大小和使用频度已成为衡量一个国家信息化程度的重要标志。</p></li></ol><p>2、《数据库原理与设计》课程地位</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/98288c90fde430e8a25df5b0dff375d9.png" alt=""><br>3、数据库技术的产生与发展<br><img src="https://p.ananas.chaoxing.com/star3/origin/79fcedaaf62c6d37d10771aa41529ea8.png" alt=""><br>4、在数据管理技术的发展过程中，经历了人工管理阶段、文件系统阶段和数据库系统阶段。在这几个阶段中，数据独立性最高的是<font color="red"><b>数据库系统</b></font>阶段。<br>5、数据库系统一般由<font color="red"><b>数据库、应用系统、数据库管理系统、数据库管理员</b></font>和<font color="red"><b>用户</b></font>构成。</p><h3 id="center-1-3-数据库应用-center"><center>1.3 数据库应用</center></h3><p><strong>1、数据库应用</strong></p><blockquote><p>数据库的应用已越来越广泛。从小型的单项事务处理系统到大型复杂的信息系统大都用先进的数据库技术来保持系统数据的整体性、完整性和共享性。</p></blockquote><p><font color="red"><b>举例：</b></font><br><font color="greng"><b>(1)电脑抽奖</b></font>：采用数据库技术，不必修改程序，只变更奖项设置，即可应用于不同的抽奖活动。<br><font color="greng"><b>(2)招生考试</b></font>：通过对数据库排序和索引，完成考生按志愿从高分到低分排序，根据学校招生计划录取，录满为止。<br><font color="greng"><b>(3)银行储存</b></font>：为每个用户建立能够唯一识别的账户，同时记录用户的往来明细，做到储存量大，运算速度快，准确程度高。</p><p><strong>2、数据库的结构</strong></p><blockquote><p>数据库系统的结构——<font color="red"><b>三级模式</b></font>与<font color="red"><b>二级印象</b></font></p></blockquote><p>(1)<font color="red"><b>内模式</b></font>也称存储模式数据库物理结构和存储方式的描述，它定义所有内部记录类型、索引和文件的组织形式，以及数据控制方面的细节，<font color="red"><b>一个数据库只有一个内模式。</b></font><br>(2)<font color="red"><b>外模式</b></font>,也称子模式或用户模式<br>数据库用户（包括应用程序员和最终用户）能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图，是与某一应用相关的数据的逻辑表示。<br>(3)<font color="red"><b>模式</b></font>,也称逻辑模式或概念模式<br>对数据库中全局数据逻辑结构的描述，是全体用户公共的数据视图。这种描述是一种抽象描述，不涉及具体硬件环境与平台。</p><p><font color="red"><strong>两级映像：</strong></font></p><p>(1)<font color="red"><b>外模式/模式映像</b></font><br>数据库的每一个外模式都有一个外模式/模式映 像<br>为了保证数据的逻辑独立性，应用程序一般是依据 模式编写的，因此应用程序也不必修改。</p><p>(2)<font color="red"><b>模式/内模式映像</b></font><br>模式/内模式映像是唯一的<br>为了保证数据的物理独立性，当数据库的存储结构 改变时，由数据库管理员对模式/内模式映像做 相应改变，可以使模式保持不变，应用程序也不必改变。</p><p><strong>3、<font color="red">数据模型</font></strong></p><blockquote><p>1、<font color="red"><b>数据模型的三要:</b></font><br>数据模型是对数据特征的抽象，是严格 定义的概念集合。数据模型包括数据库数据的结 构部分、数据库数据的操作部分和数据库数据的 约束条件。</p></blockquote><p>即数据模型所描述的三个部分：<br>(1)<font color="red"><b>数据结构</b></font><br>(2)<font color="red"><b>数据操作</b></font><br>基本的数据操作包括两大类：<br><font color="red"><b>检索</b></font>：数据查询<br><font color="red"><b>更新</b></font>：数据的插入、删除和更新等操作<br>(3)<font color="red"><b>数据的完整性约束</b></font></p><ul><li><p>在数据库中用<font color="red"><b>数据模型</b></font>的概念描述数据库的结 构与语意。通俗地讲数据模型就是现实世界的 模拟。</p></li><li><p>数据模型应满足三方面要求：<br>-能比较<font color="red"><b>真实</b></font>地模拟现实世界<br>-容<font color="red"><b>易</b></font>为人所<font color="red"><b>理解</b></font><br>-便于在计算机上<font color="red"><b>实现</b></font></p></li><li><p>模型分为两个不同的层次</p></li></ul><ol><li><font color="red"><b>概念模型</b></font>独立于计算机系统,按用户的观点<br>来对数据和信息建模。eg:E-R图</li><li><font color="red"><b>逻辑模型</b></font>主要包括网状模型、层次模型、关系模型等，它是按计算机系统的观点对数据建模.</li></ol><p><strong>4、练习</strong><br>1【单选题】<br>数据库（DB）、数据库管理系统（DBMS）、数据库系统（DBS）之间的关系是什么（<font color="red"> <b>A </b></font>）</p><p><font color="red"><b>A、<br>DBS 包括 DB和 DBMS</b></font></p><p>B、<br>DBMS 包括 DB和 DBS</p><p>C、<br>DB 包括 DBMS和 DBS</p><p>D、<br>DB 与 DBMS与DBS一样</p><p>2【单选题】<br>数据库三级模式中，用户与数据库系统的接口是（ <font color="red"><b>B</b></font> ）</p><p>A、<br>模式</p><p><font color="red"><b>B、<br>外模式</b></font></p><p>C、<br>内模式</p><p>D、<br>逻辑模式</p><p>3【单选题】<br>数据库是长期存储在计算机内、有组织的、统一管理的相关（<font color="red"><b> B</b> </font>）</p><p>A、<br>文件的集合</p><p><font color="red"><b>B、<br>数据的集合</b></font></p><p>C、<br>命令的集合</p><p>D、<br>程序的集合</p><p>4<br>【单选题】<br>使用二维表格结构表达实体及实体间联系的数据模型是（ <font color="red"><b>C</b></font>）</p><p>A、<br>层次模型</p><p>B、<br>网状模型</p><p><font color="red"><b>C、<br>关系模型</b></font></p><p>D、<br>联系模型</p><h3 id="center-1-4-sql-server安装与使用-center"><center>1.4 sql server安装与使用 </center></h3><blockquote><p>SQL Server是美国微软公司的旗舰产品，是一种典型的关系型数据库解决方案。<font color="red"><b>Microsoft SQL Server 2012</b></font>是微软发布的新一代数据平台产品，全面支持云技术与平台，并且能够快速构建相应的解决方案实现私有云与公有云之间数据的扩展与应用的迁移。SQL Server 2012是可用于大规模联机事务处理、数据仓库和电子商务应用的数据库和数据分析平台。</p></blockquote><p><strong>一、SQL Server 2012（64位）下载地址：</strong></p><p>链接：<a href="https://pan.baidu.com/s/1mi7Biq12Ps3rbZMUq1w6_Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1mi7Biq12Ps3rbZMUq1w6_Q</a></p><p>提取码：<font color="greng"><b>7k87</b></font></p><p><strong>二、安装教程</strong></p><p>1、安装前准备：检查操作系统类型，请确认你的系统支持 SQL Server 的运行，并确认系统是 32 位的还是 64 位的。</p><p>64位系统安装要求：1.4 GHz或速度更快的处理器，内存最低1GB (建议使用2GB或更大)，7GB可用硬盘空间。</p><p>2、在安装SQL Server2012之前，首先需要安装Windows Installer <a href="http://4.xn--5-se9a.Net" target="_blank" rel="noopener">4.5和.Net</a> Framework3.5以上。如果当前系统中没有安装这些软件，SQL Server2012 安装程序会自动进行安装。</p><h2 id="第二章-创建数据库">第二章 创建数据库</h2><h3 id="center-2-1-数据库文件-center"><center>2.1 数据库文件</center></h3><p><strong>一、SQL Server数据库简介</strong></p><p><strong>1．数据库文件</strong></p><p>SQL Server 2012用文件来存放数据库，即将数据库映射到操作系统文件上。</p><p>SQL Server 2012中的文件通常有两种类型：<font color="red"><b>逻辑文件名</b></font>和<font color="red"><b>物理文件名</b></font>。逻辑文件名是在所有T-SQL语句中引用物理文件时所使用的名称。逻辑文件名必须符合标识符的命令规则，而且数据库中的逻辑文件名必须是唯一的。物理文件名是包括目录路径的物理文件名。它必须符合操作系统的命名规则。逻辑文件名和物理文件名是一一对应的，其对应关系由SQL Server系统来维护。</p><p><strong>2、SQL Server 2012<font color="red">数据库文件有3类：</font></strong></p><p>（1）主<font color="red"><b>数据文件</b></font>（也称主文件）：主数据文件主要用来存储数据库的启动信息、部分或全部数据，是数据库的关键文件。主数据文件是数据库的起点，包含指向数据库中其他文件的指针。每个数据库都有一个主数据库文件。主数据库文件推荐扩展名为<font color="red"><b>.mdf</b></font>。</p><p>（2）<font color="red"><b>次要数据文件</b></font>（也称辅助数据文件）：除主数据文件以外的所有其他数据文件都是次要数据文件。用于存储主数据文件中未存储的剩余数据和数据库对象。一个数据库可以没有，也可以有多个次要数据文件。次要数据文件推荐扩展名为<font color="red"><b> .ndf</b></font>。</p><p>（3）<font color="red"><b>事务日志文件</b></font>（简称日志文件）：存放用来恢复数据库所需的事务日志信息，每个数据库必须有一个或多个日志文件。事务日志文件推荐扩展名为<font color="red"><b>.ldf</b></font>。</p><blockquote><p>3、一般情况下，一个数据库可以只有一个主数据库文件和一个事务日志文件组成，如果数据库很大，则可以设置多个次要数据文件和多个日志文件，并将它们放在不同的磁盘上，以便提高数据存取和处理的效率。</p></blockquote><p><img src="https://p.ananas.chaoxing.com/star3/origin/4c11b926f08940dbd4d80139e9538f90.png" alt=""></p><blockquote><p>4、SQLServer 2012数据库分为：系统数据库、实例数据库和用户数据库。<br><img src="https://p.ananas.chaoxing.com/star3/origin/a7eb72c31429ac5990116fe9ba7706dc.png" alt=""><br><strong>二、作业</strong></p></blockquote><p>1<br>【单选题】<br>SQL Server安装程序创建4个系统数据库，下列哪个不是（<font color="red"><b> D</b></font> ）</p><p>A、<br>model</p><p>B、<br>master</p><p>C、<br>tempdb</p><p><font color="red"><b>D、<br>park </b></font></p><p>2<br>【单选题】<br>下列哪个不是sql 数据库文件的后缀(<font color="red"><b> C</b> </font>)</p><p>A、<br>.mdf</p><p>B、<br>.ldf</p><p><font color="red"><b>C、<br>.tif</b></font></p><p>D、<br>.ndf</p><p>3<br>【单选题】<br>SQL Server系统中的所有服务器级系统信息存储于哪个数据库( <font color="red"><b>A</b></font> )</p><p><font color="red"><b>A、<br>master</b></font></p><p>B、<br>model</p><p>C、<br>tempdb</p><p>D、<br>msdb</p><p>4<br>【单选题】<br>数据库在磁盘上的基本组织形式是( <font color="red"><b>B</b></font>  )</p><p>A、<br>DB</p><p><font color="red"><b>B、<br>文件</b></font></p><p>C、<br>二维表</p><p>D、<br>系统目录</p><h3 id="center-2-2-T-SQL创建数据库-center"><center>2.2 T- SQL创建数据库</center></h3><p>本节重点：T-SQL语句创建、删除数据库。</p><p>本节难点：数据库物理路径的设置。</p><p>本节内容：</p><p><strong>一、 SQL语言</strong></p><p>SQL<font color="red"><b>结构化查询语言</b></font>，是<font color="red"><b>一种数据库查询</b></font>和<font color="red"><b>程序设计语言</b></font>，用于存取数据以及查询、更新和管理关系数据库系统。</p><p>SQL有两种使用方法，一种是<font color="red"><b>交互式SQL</b></font>，用户在联机条件下可直接使用；另一种是<font color="red"><b>嵌入式SQL</b></font>，可作为子语句嵌入到其他程序设计语言中使用，即嵌入到宿主语言中使用。</p><p><strong>二、T-SQL语言</strong></p><p>SQL作为国际标准语言，被大部分数据库系统采用，将其作为数据存取的标准接口，使不同的数据库系统可以相互操作，无论是大型数据库系统还是微机上使用的数据库系统。</p><p>T-SQL语言是Microsoft公司对此标准的一个实现，它同时与多种ANSISQL标准兼容，且还进行了许多扩展。</p><p><strong>三、T-SQL语句创建数据库</strong><br><img src="https://p.ananas.chaoxing.com/star3/origin/22f595a953db22d43d8f67e9078d67f2.png" alt=""><br>其中，各参数的含义如下：</p><ul><li><font color="red"><b>数据库名</b></font>：是所创建数据库的逻辑名称。数据库名称在当前服务器中必须唯一且符合标识符的命名规则，最多可以 包含128个字符；</li><li><font color="red"><b>ON</b></font>：用于指定数据文件及文件组属性，具体属性值在&lt;文件定义&gt;中指定；&lt;文件定义&gt;的详细格式如下：</li><li>&lt;文件定&gt;：：<br>（NAME=，逻辑文件名’，<br>FILENAMES’存放数掘库的物理路径和文件名’<br>[<code>,SIZE=数据文件的初始大小</code>]<br>[<code>,MAXSIZE=指定文件的最大大小1</code> ]<br>[<code>,FILEGROWTH=指定文件每次的增量</code>]）<br><font color="red"><b>LOG ON </b></font>:用于指定事务日志文件的属性。 如果在定义时没有指定ON子句和LON ON 子句，系统将默认设置，自动生成一个主 数据文件和一个事务日志文件，并将文件 存储在系统默认路径上。</li></ul><p><strong>四、使用T-SQL语句修改数据库名称</strong></p><p>命令格式：</p><p><font color="red"><b>ALTER  DATABASE &lt;旧数据库名称&gt;</p><p>Modify  Name=&lt;新数据库名称&gt; </b> </font></p><p><strong>五、使用T-SQL语句删除数据库</strong></p><p>T-SQL中提供的DROP DATABASE 语句可以删除数据库，一次可以删除多个数据库。其语法格式如下：</p><p><font color="red"><b>DROP  DATABASE  database[,…n]</b></font></p><p><strong>六、例题讲解</strong></p><p>例题1：创建一个名为TestSGMS的测试数据库，文件及其他选项均为默认。</p><p><font color="red"><b>【任务分析】</b></font>：由于没有指定数据文件名，默认的情况下，命名主数据文件为TestSGMS.MDF，事务日志文件为TestSGMS_log.LOG，同时由于按复制model数据库的方式来创建新的数据库，主数据文件和事务日志文件的大小都与model数据库的主数据文件和事务日志文件的大小一致，并且可以自由增长。实现本任务的程序为：<br><img src="https://p.ananas.chaoxing.com/star3/origin/cca4d4e71bd716955f420411b5a11b9c.png" alt=""><br>例题2：创建一个名为SGMS学生成绩管理系统数据库。要求有2个文件，其中，主数据文件为10MB，最大大小为50MB，每次增长20%；事务日志文件大小为20MB，最大大小为100MB，每次增长10MB。文件存储为D:\db路径下。</p><p><font color="red"><b>【任务分析】</b></font>：要求创建的数据库是SGMS，数据库中有2个文件，分别是主数据文件和事务日志文件，创建时每个文件都要给出逻辑文件和物理文件名称，文件的大小、最大大小、增长方式等详细信息。<br><font color="red"><b>【注意】</b></font>（1）服务器中不能存在同名的数据库名，所以类似CREATE语句均只能正确执行一次，下一次执行时，将提示该对象已存在；<br>（2）创建数据库之前，文件存储路径D:\db必须存在。<br><img src="https://p.ananas.chaoxing.com/star3/origin/f0173208fe05c03d4ba398502f100d5c.png" alt=""></p><p>例题3：将博客数据库“BlogDb”改名为“DbOfBlog”：</p><p>ALTER DATABASE BlogDb</p><p>Modify Name=DbOfBlog</p><p>例题4：删除博客数据库“DbOfBlog”</p><p><font color="red"><b> DROP  DATABASE DbOfBlog </b></font></p></br>  <p><strong>七、练习</strong></p><p></br>1、下列四项中说法不正确的是（<font color="red"><b> c </b></font> ）</p><p>A、数据库减少了数据冗余</p><p>B、数据库中的数据可以共享</p><p><font color="red"><b>C、数据库避免了一切数据的重复 </b></font></p><p>D、数据库具有较高的数据独立性</p></br>2、每个数据库有且只有一个( <font color="red"><b> A  </b></font> )<p></br><font color="red"><b>A、主要数据文件</b></font></p><p>B、次要数据文件</p><p>C、日志文件</p><p>D、索引文件</p></br>3、下列选项中可以正确创建数据库的SQL语句是（ <font color="red"><b> A </b></font>  ）<p></br><font color="red"><b>A、CREATE DATABASE database_name</b></font></p><p>B、CREATE TABLE database_name（缺少列名）</p><p>C、CREATE VIEW database_name</p><p>D、DATABASE CREATE  database_name</p></br>4、数据库恢复的主要依据是(   <font color="red"><b>D</b></font>   )<p></br>A、DBA</p><p>B、DB</p><p>C、文档</p><p><font color="red"><b>D、事务日志</b></font></p><h2 id="第三章-创建表">第三章 创建表</h2><h3 id="center-3-1-SSMS数据表-center"><center>3.1 SSMS数据表</center></h3><p><strong>一、数据表的基本概念</strong></p><p>1、表是用来存储数据和操作数据的逻辑结构。表是由行和列组成，最多可以有1024列，每行对应实体集的一个实体，也称为记录，每列代表一个属性，也称为字段。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/e26337de6a7525a41fdf11b1874efc42.png" alt=""></p><p>2、SQLServer中，表分为系统表和用户表两类。</p><p><strong>1、系统表</strong></p><ul><li>系统表主要记录所有服务器活动的信息。任何用户都不能直接修改系统表。</li></ul><p><strong>2、用户表</strong></p><ul><li>用户表是由用户自定义建立的表，用来存储用户特定的数据，又可分为永久表和临时表两种。</li></ul><p>（1）<font color="red"><b>永久表</b></font></p><ul><li>永久表存储在用户数据库中，如果用户没有删除永久表，永久表及其存储过程将永久存在。</li></ul><p>（2）<font color="red"><b>临时表</b></font></p><ul><li>临时表存储在tempdb数据库中，当不再使用时，系统会自动删除。</li></ul><p><strong>3、定义表结构</strong></p><ul><li><p>确定表的各列的列名及其<font color="red"><b>数据类型、数据长度、是否允许为空</b></font>等。</p></li><li><p>定义表结构时要注意：</p></li></ul><p>（1）允许空：决定某列在表中是否允许为空值。空值是不等于零、空白或零长度的字符串。</p><p>（2）默认值：当在表中插入该列为空值的行时，用此默认值。设置该值能够起到默认输入的作用，减少输入数据的工作量。如设置性别的默认值为“男”。</p><p><strong>二、数据类型</strong></p><p><strong>认识数据类型</strong></p><ul><li>在设计表时，需要知道每列字段的数据类型，每一种数据类型都有自己的定义和特点。SQLServer 2012 系统提供了<font color="red"><b>22种数据类型</b></font>，主要分为<font color="red"><b>精确数据类型</b></font>、<font color="red"><b>近似数字类型</b></font>、<font color="red"><b>字符数据类型</b></font>、<font color="red"><b>日期时间数据类型</b></font>等。</li><li>当为列指定数据类型时，还需要提供<font color="red"><b>长度</b></font>、<font color="red"><b>大小</b></font>，如果是数字数据，还要指定数值的<font color="red"><b>小数位</b></font>等。</li></ul><p><b>1、精确数值类型</b></p><ul><li>数字数据类型可分为精确数字类型和近似数字类型。</li></ul><table><tr><td>类别</td><td>名称</td>        <td>长度（字节）</td>        <td>说明</td></tr><tr><td rowspan="4">整数类型</td><td>bigint</td>        <td>8</td>        <td>整数数据类型中存储量最大的一种，可存储正负数</td></tr><tr><td>int</td>        <td>4</td>        <td>最常用的数据类型，可存储正负数</td></tr>    <tr><td>smallint</td>        <td>2</td>        <td>可存储正负数</td></tr>    <tr><td>tinyint</td>        <td>1</td>        <td>存储0~255范围内的所有数据</td></tr>    <tr>    <td rowspan="2">货币数据类型</td><td>money</td>        <td>8</td>        <td>数据范围为-2<sup>63</sup>~ 2<sup>63</sup>-1,其精度为19,小数为4数据范围为-2<sup>63</sup>~ 2<sup>63</sup>-1,其精度为19,小数为4</td></tr>    <tr><td>smallmoney</td>        <td>4</td>        <td>数据范围为-2<sup>31</sup>~ 2<sup>31</sup>-1,其精度为10,小数为4</td></tr>    <tr>         <td>位数据类型</td>         <td>bit</td>         <td>1</td>         <td>用于逻辑判断，表示真假、是否等于二值选择</td>    </tr></table>    </br><b>2、近似数字类型</b>  <ul><li><p>在现实计算中，还有一些数据没有精确数值，如2/3是一个无限小数，要通过系统定义精确到哪一位， 这种类型称为近似数字型.</p></li><li><p><font color="red"><b>decimal</b></font>和<font color="red"><b>numeric</b></font>类型</p></li><li><p>两种数据类型都是带固守精度和位数的数据类型，decimal和numeric两种数据类型可以说是等价的。<br>使用语法为:<font color="red"><b>decimal(p,s)</b></font>。</p></li><li><p>其中，p(取值范围1 ~ 38)表示数字的精度，s<br>(取值范围0 ~p之间的数值)表示数字的小数位数decimal数据类型的取值范围为-10<sup>38</sup>+1至10<sup>38</sup>-1</p></li><li><p><font color="red"><b>float</b></font>和<font color="red"><b>real</b></font>数据类型</p></li><li><p>这两种是<font color="red"><b>浮点数据类型</b></font>，其优点是能够存储范围非常大的数字。</p></li><li><p>float数据类型占用8个字节的存储空间，精度为1S位有效数字。</p></li><li><p>real数据类型使用4个字节，精度为7位有效数字。如果要进行科学计算，并且希望存储更大的数值，但对数据的精度要求并不是绝对严格，可考虑用这两种数据类型。</p></li></ul><p></br><b>3、字符数据类型</b></p><ul><li>字符数据类型是用来存储各种字母、数字符号和特殊符号的。主要有<font color="red"><b>char(n)、varchar(n)、varcha r ( max )text</b></font>这4种数据类型。</li><li><font color="red"><b>char(n)类型</b></font><br>每个字符使用<font color="red"><b>一个字节</b></font>的存储空间。char 类型使用固定长度来存储字符，最长可容纳8000个字符。在使用时，必须用<font color="red"><b>双引号或者单引号</b></font>将字符型常量括起来。</li><li><font color="red"><b>varchar(n)类型</b></font><br>使用方法与char类似，最长可容纳8000个字符的变长数据字符型数据。不同的地方是，<font color="red"><b>varchar数据类型存储空间随存储的字符数的不同而变化。</li><li>varchar(max) 类型</b></font><br>最长可容纳1073741824个字符的变长数据字符型数据。</li><li><font color="red"><b>text类型</b></font><br>当要存储的字符型数据非常庞大时，此时应该选择text数据类型。text数据类型专门存储数量庞大的变长字符数据，最大长度可达到2<sup>31</sup>-1个字符(2GB)。<br></br><br><b>4、unicode字符数据类型</b></li><li>unicode是一种在计算机上使用的字符编码。它为每种语言中的每个字符设定了统一并且唯一的二进制编码，以满足于跨语言、跨平台进行文本转换。</li><li>SQL Server 2012中的unicode字符数据类型包括<font color="red"><b>nchar(n)、nvarchar(n )、nvarchar( max )、ntext</b></font>这4种。<br></br><br><b>5、日期时间数据类型</b></li><li>以前的版本使用只包括<font color="red"><b>datetime</b></font>和<font color="red"><b>smalldatetime</b></font>两种日期时间数据类型，区别在于其表示的日期和时间的范围不同，时间精确度不同。<br><font color="red"><b>datetime</b></font> :表示日期从1753年1月1日至、9999年12月31日，时间精确度为3.33毫秒。<br><font color="red"><b>smalldatetime</b></font> :表示日期从1900年1月1日至2079年12月31日，时间精确度为1分<br>钟。</li><li>SQL Server 2012增加了<br><font color="red"><b>date、datetime2、time、datetimeoffset</b></font>等日期时间类型，</li><li>date仅存储时间，0001年1月1日到9999年12月31日</li><li>datetime精确到毫秒,time和datetime2精确到100纳秒</li><li>datetimeoffset与 datetime2相同，有一个时区偏移<br></br><br><b>6、二进制数据类型</b></li><li>二进制数据类型包括<font color="red"><b>binary ( n)、varbinary(n)、varbinary(max)image</b></font> 这4种，可用于存储二进制数据。<br>binary:用于存储固定长度的二进制数据。<br>varbinary: 用于存储可变长度的二进制数据。<br>image:用于存储图像信息。<br></br><br><b>7、其他数据类型</b></li><li>cursor :存储对用于数据库操作的指针的引用。</li><li>uniqueidentifier :存储全局标识符</li><li>xml :存储XML格式化数据</li><li>sql_ _variant: 存储最多8000字节不同数据类型的数据，除了text、ntext以及timestamp。</li><li>table :存储结果集。</li></ul><p><b>8、练习</b></p><p>1【单选题】<br>以下表示可变长度字符串的数据类型是(   <font color="red"><b>C</b></font>   )</p><p>A、TEXT</p><p>B、CHAR</p><p><font color="red"><b>C、VARCHAR</b></font></p><p>D、EMUM</p><p>2【单选题】<br>数据库服务器、数据库和表的关系，正确的说法是(   <font color="red"><b>B</b></font>   )</p><p>A、一个数据库服务器只能管理一个数据库，一个数据库只能包含一个表</p><p><font color="red"><b>B、一个数据库服务器可以管理多个数据库，一个数据库可以包含多个表</b></font></p><p>C、一个数据库服务器只能管理一个数据库，一个数据库可以包含多个表</p><p>D、一个数据库服务器可以管理多个数据库，一个数据库只能包含一个表</p><h3 id="center-3-2-T-SQL创建表-center"><center>3.2 T-SQL创建表</center></h3><p><strong>一、T-SQL创建表</strong></p><p>用T-SQL语句创建表比使用SSMS创建表更加直接、有效。实际的应用系统中，通常用CREATE TABEL语句创建表，其基本语法格式如下：<br><img src="https://p.ananas.chaoxing.com/star3/origin/a5b50bb79819449d6b5f4f313d749b8b.png" alt=""></p><p>上面格式中，包含参数的含义如下：</p><p><strong>表名</strong>：是所创建的表的名称，在一个数据库内表名必须唯一。</p><p><strong>列名</strong>：列名在一个表内列名必须唯一。</p><p>数据类型：可以使用系统数据类型，也可以使用用户定义的数据类型。对于需要给定数据最大长度的类型，在定义时要给出长度。<br><strong>二、使用T-SQL语句显示表信息</strong></p><blockquote><p>exec sp_help 表名<br>或sp_help 表名</p></blockquote><p><strong>三、使用T-SQL语句修改表结构</strong><br>使用ATLER TABEL语句可以对表结构进行修改，具体包括增加列、删除列以及修改列定义。</p><p>（1）<strong>增加列</strong></p><p>向表中增加列，通过ADD子句实现，其基本语法格式为：</p><blockquote></blockquote><p>ALTER TABLE 表名<br>ADD 列名 列的描述<br>参数：列的描述中要给出列的数据类型，是否为空。</p><p>（2）<strong>删除列</strong></p><p>对于一张表，要删除表中某列可以用DROP COLUMN子句实现，其基本语法格式如下：</p><blockquote><p>ALTER TABLE表名<br>DROP COLUMN列名</p></blockquote><p>（3）<strong>修改列定义</strong></p><p>修改列定义可以用ALTER COLUMN子句实现，其基本语句格式如下：</p><blockquote><p>ALTER TABLE 表名<br>ALTER COLUMN 列名 列的描述</p></blockquote><p>（4）<strong>使用T-SQL重命名表名</strong></p><p>其基本语法格式如下：</p><blockquote><p>sp_rename’old_table name’,‘new_table name’</p></blockquote><p><strong>四、使用T-SQL语句删除表</strong></p><p>其基本语法格式如下：</p><blockquote><p>DROP TABLE 表名</p></blockquote><p><strong>一、案例讲解</strong></p><p>例1：用T-sql语句创建students1表</p><pre><code>CREATE TABLE student1(sno int NOT NULL,sname nvarchar(10) NOT NULL,sex char(2),birthday smalldatetime)</code></pre><p>例2：创建表student2，学号使用标识种子值和增量值采用默认值。</p><pre><code>CREATE TABLE student2(sno int identity(2010130101,1),sname barchar(10) not null)</code></pre><p>例3：查看表student的基本信息。</p><pre><code>sp_help student</code></pre><p>例4：向student表中增加列Email列。</p><pre><code>ALTER TABLE studentADD Email varchar(20) nullgo</code></pre><p>例5：删除student表中Email列</p><pre><code>ALTER TABLE studentDROP COLUMN EmailGo</code></pre><p>例6：将student表中studentName修改为最大长度为60的nvarchar型数据，且不允许为空值。</p><pre><code>ALTER TABLE studentALTER COLUMN studentName ncarchar(60) NOT NULLgo</code></pre><p>例7：把表scsc修改表名为sc。</p><pre><code>use SGMSGO sp_rename 'scsc','sc'</code></pre><p>例8：删除SGMS数据库中的表course表。</p><pre><code>DROP TABLE coursego</code></pre><h3 id="center-3-3-创建约束-center"><center>3.3 创建约束</center></h3><p><strong>一、SQL数据表约束设置</strong></p><p>创建约束和表的创建和修改分不开，可以通过CREATE TABLE 语句在建表的时候添加约束，也可以使用ALTER TABLE 语句来为已经存在的表添加约束。</p><p>约束是一种限制，它通过对表的行或列的数据做出限制，来确保表的数据的完整性、唯一性。</p><p>SQL Server 2012中约束，分别是主键约束（PRIMARY）、外键约束（FOREIGN KEY）、唯一值约束（Unique）、默认值约束（DEFAULT）和检查约束（CHECK）。</p><p><strong>二、主键约束（<font color="red">primary key<br></font>）</strong></p><p>主键约束相当于<font color="red"><b>唯一约束</b></font>+<font color="red"><b>非空约束</b></font>组合，主键约束列<font color="red"><b>不允许重复值</b></font>，也不允许出现<font color="red"><b>空值</b></font>。</p><p>每个表最多只允许<font color="red"><b>一个主键</b></font>，建立主键约束可以在<font color="red"><b>列级</b></font>别创建，也可以在表级别创建。</p><p>当创建主键的约束时，系统默认会在所在的列和列组合上建立对应的</b></font>唯一索引。 一张表应该有主键字段，如果没有，表示该表<font color="red"><b>无效</b></font>。<br><strong>三、外键约束</strong></p><p>若有两个表A、B，id是A的<font color="red"><b>主键</b></font>，而B中也有id字段，则id就是表B的<font color="red"><b>外键</b></font>，外键约束主要用来维护两个表之间数据的一致性。A为基本表，B为信息表。</p><p>一张表可以有多个外键字段（与主键不同）。<br><strong>四、例题讲解</strong></p><p><font color="red"><b>例1：</b></font>定义数据表tb_emp 2，其主键为id，SQL语句如下：</p><pre><code>CREATE TABLE tb_emp2(id INT(11) PRIMARY KEY,name VARCHAR(25),DEPTId INT(11),salary FLOAT)</code></pre><p><font color="red"><b>例2：</b></font>定义数据表tb_emp5，并在tb_emp5表上创建外键约束。</p><p>创建一个部门表tb_dept1，SQL语句如下：</p><pre><code>CREATE TABLE tb_dept1(id int(11) primary key,name VARCHAR(22) NOT NULL,location VARCHAR(50));</code></pre><p>定义数据表tb_emp5，让它的键deptId作为外键关联到tb_dept1的主键id，SQL语句为：</p><pre><code>CREATE TABLE tb_emp5(id INT(11) PRIMARY KEY,name VARCHAR(25),deptid INT(11),salary FLOAT,CONSTRAINT fk_emp_dept1 FOREIGNKEY(deptid) REFERENCES tb_dept1(id));</code></pre><p>以上语句执行成功之后，在表tb_emp5上添加了名称为fk_emp_dept1的外键约束，外键名称为deptId，其依赖于表tb_dept1的主键id。</p><p><font color="red"><b>例3：更新</b></font>数据表student1，主键为sno，SQL语句如下：</p><pre><code>ALTER TABLE student1ADD VCONSTRAINT pa_snoPRIMARY KEY (sno)</code></pre><p><font color="red"><b>例4：更新</b></font>数据表sc，创建外键，SQL语句如下：</p><pre><code>ALTER TABLE scADD CONSTRAINT fk_snoFOREIGN KEY (SNO)REFERENCES student(sno)</code></pre><h3 id="center-3-4-约束设置-center"><center>3.4 约束设置</center></h3><p><strong>一、唯一值约束（Unique）</strong></p><p>unique约束的字段，具有唯一性，不可重复，但可以为null。</p><p>同一个表可以有多个唯一约束，多个列组合的约束。</p><p>在创建唯一约束时，如果不给唯一约束名称，就默认和列名相同。</p><p><strong>二、默认值约束（DEFAULT）</strong></p><p>创建table表，ID为非空约束，name 为非空约束且默认值为abc</p><blockquote><p>create table temp(<br>id int not null,<br>name varchar(255) not null defalt ‘abc’,<br>sex char null<br>)</p></blockquote><p><strong>三、管理表</strong></p><p><strong>SQL Server提供的约束类型</strong></p><ul><li><p>创建约束始终和表的创建和修改分不开，因为约束是关联在表的某一列或几列的组合上的，所以可以通过CREATE TABLE语句在建表的时候添加约束，也可以使用ALTER TABLE语句来为已经存在的表添加约束。</p></li><li><p>SQL Server 2012中约束，分别是主键约束(PRIMARY)、外键约束( FOREIGN<br>KEY)、唯一值约束(Unique)、默认值约束(DEFAULT)和检查约束( CHECK )</p></li></ul><p><strong>四、SQL Server约束机制</strong></p><p><strong>使用T-SQL脚本创建约束</strong></p><p><strong>3.UNIQUE约 束</strong><br>创建UNIQUE约束有两种方法:<br>(1)使用CREATE TABLE语句在创建表时添加UNIQUE约束</p><ul><li>任务 创建Cour se表时，为cour sename列添加唯一约束 ,不允许课程名重复。</li></ul><pre><code>--创建course表时，为coursename列添加唯一约束  CREATE TABLE course(courseid char(8) primary key,coursename varchar(20) unique,coursetypeid char(3), totalperiod tinyint,weekperiod tinyint,  credithour tinyint,remark varchar(50))go</code></pre><ul><li><code>[注意]</code> UNIQUE约束在列集内强制执行值的唯一性。对于UNIQUE约束中的列，不允许出项相同的值，这一点与主键约束类似。与主键约束不同的是，在UNIQUE约束的列中允许输入空值，所有空值都是作为相同的值对待的。主键也强制执行唯一性，但主键不允许出现空值。</li></ul><p>(2)使用ALTER TABLE语句向现有表添加UNIQUE约束</p><ul><li>当表已经建立好，可以通过修改表结构命令ALTER TABLE<br>来添加唯一约束，其基本语法格式如下。其参数含义与上<br>述创建主键约束的参数含义相似。</li></ul><blockquote><p>ALTER TABLE表名<br>ADD <code>[CONSTRAINT约束名]</code> UNIQUE (列名)</p></blockquote><ul><li>任务假设表course表已经建立，现在要为cour sename列添加唯一约束，不允许出现相同的课程名。</li></ul><pre><code>ALTER TABLE courseADD CONSTRAINT UN_name UNIQUE(coursename)GO</code></pre><p><strong>使用T-SQL脚本创建约束</strong><br><strong>4、DEFAULT约束</strong></p><ul><li>DEFAULT约束指为表中的<font color="red"><b>列定义默认值</b></font>。当执行数据插入操作而又没有为该列提供数据时，系统将自动以定义的默认值填充该列。</li><li>使用CREATE TABLE语句在创建表时添加DEFAULT约束</li><li>任务7-23创建student表，为sex列添 加DEFAULT,默认值为“男”</li><li>任务分析:创建表时添加默认值约束，只需要指定某列的DEFAULT及默认值就可以了。实现代码如图7-25所示。</li></ul><pre><code>CREATE TABLE student(studentID char(10),studentname varchar(10),nation char(10), sex char(2) DEFAULT '男'，birthday datetime, classid char(7),telephone varchar(16), credithour tinyint,ru_date char(4), address Varchar(50),pwd varchar(16), remark varchar(200))go</code></pre><p>(2)使用ALTER TABLE语句向现有表添加DEFAULT约束</p><ul><li>如果表已存在，则可以修改表结构时添加DEFAULT约束，<br>基本语法格式如下:</li></ul><p><font color="red"><b>ALTER TABLE表名<br>ADD CONSTRAINT 约束名<br>DEFAULT表达式FOR列名</b></font></p><ul><li><p>任务7-24在SGMS数据库中已经存在的student表，为sex列添加DEFAULT,默认值为“男”。</p></li><li><p>任务分析: student表已经存在，添加DEFAULT约束，可以通过修改表结构实现。实现代码如图7-26所示。</p></li></ul><pre><code>ALTER TABLE studentADD CONSTRAINT def_sex DEFAULT'男' for sexGO</code></pre><p><strong>5、CHECK约束</strong></p><ul><li>向表中输入数据时，CHECK约束可以确保输入数据的<br>正确性。创建方法也有两种。</li></ul><p>(1)使用CREATE TABL ,E语句在创建表时添加<br>CHECK约束</p><ul><li>任务7-25创建grade表时为grade列添加CHECK约束，<br>规定成绩取值范围为[0,100]。</li></ul><pre><code>  CREATE TABLE grade(studentID char(10) not null,courseID char(8) not null,term nvarchar (20)，grade tinyint CHECK (grade between 0 and 100))GO  </code></pre><p>(2)使用ALTERTABLE语句向现有表添加<br>CHECK约束，其语法格式如下:</p><pre><code>ALTER TABLE表名ADD CONSTRAINT约束名CHECK(表达式)</code></pre><p><strong>约束的查看和删除</strong><br>2、T-SQL .约束的查看<br>使用系统存储过程查看约束<br>Sp_ helpconstraint 表名</p><pre><code>sp_helpconstraint grade  </code></pre><p>3.约束的删除</p><p>约束的删除可以用SSMS来删除约束，也可以<br>用DROP CONSTRAINT子句实现，其基本语<br>格式如下:</p><pre><code>ALTER TABLE表名DROP CONSTRAINT约束名</code></pre><ul><li><p>任务7-34删除Class表的PK_ clas约束。</p></li><li><p>实现本任务的代码及执行结果如图7-38所示。</p></li></ul><pre><code>ALTER TABLE classDROP CONSTRAINT pk_classGO</code></pre><p><strong>二、作业：</strong><br>1【论述题】<br>根据题目中的要求完成下面练习<br>1、使用SQL代码将student表中性别的默认值设置为：“男”。</p><pre><code>use studentsgoalter table studentadd constraint der_sex default'男' for ssexgo</code></pre><p>2、使用SQL代码将sc表中成绩设置约束：0到100。</p><pre><code>use studentsgoalter table scadd constraint ck_grade check(grade&gt;=0 and grade&lt;=100)</code></pre><p>3、使用SQL代码将course表中的课程号设置为唯一性。</p><pre><code>use studentsgo alter table courseadd constraint un_cname unique(cname)</code></pre><p>4、使用SQL代码查看student表中的约束设置。</p><pre><code>use studentsgosp_helpconstraint student</code></pre><p>5、删除第1题创建的约束。</p><pre><code>use studentsgoalter table studentdrop constraint def_sex</code></pre><h3 id="center-3-5-数据操纵-center"><center>3.5 数据操纵</center></h3><p>一、数据表的插入<br><img src="https://p.ananas.chaoxing.com/star3/origin/475977ec6f86cc21a651a463ef992ed1.png" alt=""><br>二、数据库的更新<br><img src="https://p.ananas.chaoxing.com/star3/origin/df847b89034a1b25f11fdda76f6e73f6.png" alt=""><br>三、数据库的删除<br><img src="https://p.ananas.chaoxing.com/star3/origin/6ee3605cb2bae2f5a7f51da2adbf63ca.png" alt=""></p><p>四、例题讲解</p><p>例1：向student表中添加一条记录。</p><pre><code>INSERT INTO student(sno,sname,nation,ssex,birthday,sdept,class,tel,id,remark)VALUES('95009', '欧阳静','汉族','女','2000-01-01','软件','3', '13855676677', '366336200001010234','爱好唱歌');等同于INSERT INTO studentVALUES ('95009', '欧阳静', '汉族','女','2000-01-01', '软件', '3', '13855676677','366336200001010234','爱好唱歌');</code></pre><p>例2：在程序开发中，一次插入多条数据比逐次一条一条的插入数据，效率高。</p><pre><code>INSERT INTO student(sno,sname,ssex,sdept,class)VALUES(' 95011 ', '欧阳一', '女', '软件','3'),(' 95012 ', '欧阳二', '女','软件','3'),(' 95013 ', '欧阳三', '女', '软件','3'),(' 95014 ', '欧阳四', '女', '软件','3'),('95015 ', '欧阳五', '女', '软件','3')</code></pre><p>例3：将student表中学号为‘95002’的学生的专业改为“动漫”。</p><pre><code>UPDATE student  SET   sdept='动漫'WHERE sno=95002；例4：删除student表中所有记录，SQL语句如下：DELETE FROM student;</code></pre><p>五、作业</p><p>1、在学生表中增加一条记录：学号为2008，陈刚，男，通信专业。</p><pre><code>use studentsgoinsert into studentvalues('2008','陈刚','男','','通信','')</code></pre><p>2、将所有课程的学分增加1分。</p><pre><code>use studentsgo update course set ccredit=(ccredit+'1')</code></pre><p>3、将计算机专业的所有学生的选修课成绩降低5%。</p><pre><code>use studentsgoupdate sc set grade=grade*0.95where sno=95001</code></pre><p>4、删除选修课成绩低于60分的记录。</p><pre><code>use studentsgodelete from scwhere grade&lt;60</code></pre><h2 id="第四章-sql查询">第四章 sql查询</h2><h3 id="center-4-1-简单查询-center"><center>4.1 简单查询</center></h3><p>一、 SQL语言</p><p>SQL<font color="red"><b>结构化查询语言</b></font>，是一种<font color="red"><b>数据库查询</b></font>和<font color="red"><b>程序设计语言</b></font>，用于存取数据以及查询、更新和管理关系数据库系统。</p><p>SQL有两种使用方法，一种是<font color="red"><b>交互式SQL</b></font>，用户在联机条件下可直接使用；另一种是<font color="red"><b>嵌入式SQL</b></font>，可作为子语句嵌入到其他程序设计语言中使用，即嵌入到宿主语言中使用。<br>二、SQL语言简捷，易学易用<br><img src="https://p.ananas.chaoxing.com/star3/origin/9db2019d1e7b443a9bc23c05c2719236.png" alt=""></p><p>三、 SQL查询语句基本格式：</p><pre><code>   SELECT  [DISTINCT] *|{字段名1, 字段名2……}               FROM表名  [WHERE条件表达式]  [GROUPBY 字段名 [HAVING 内部函数表达式]]  [ORDERBY 字段名 [ASC|DESC]]</code></pre><p>四、本章实例采用students数据库，包括三个基本表：</p><p>◆  学生表：</p><p>Student(Sno,Sname,Ssex,Sage,Sdept,class)</p><p>◆  课程表：</p><p>course(cno,cname,cpno,ccredit)</p><p>◆学生选课表：</p><p>SC  (sno,cno,grade)</p><p>五、案例讲解</p><p><strong>查询表中所有列</strong></p><p>例1  查询全体学生的所有信息。</p><pre><code>use studentsgoselect  sno,sname,ssex,sage,sdept,classfrom studentgoselect *     from studentgo</code></pre><p><strong>查询表中指定的列</strong></p><p>例2  查询全体学生的姓名和专业。</p><pre><code>select sname,sdeptfrom studentgo</code></pre><p><strong>查询经过计算的列</strong></p><blockquote><p>SELECT子句中的目标列可以是表中存在的列，也可以是表达式。</p></blockquote><p>例3  查询全体学生的学号，姓名和出生年份。</p><pre><code>select sno,sname,2020-sagefrom studentgo</code></pre><p><strong>重新命名输出列</strong></p><blockquote><p>通过为指定的列使用别名，来从新命名查询结果列标题。</p></blockquote><p>例3 可改为</p><pre><code>select sno,sname,2020-sage as 出生年份from studentgo</code></pre><p><strong>查询前几条记录</strong><br>例4   查询前3条学生的记录。</p><pre><code>select top 3*from studentgo</code></pre><p>查询前5条学生的学号和姓名的记录。</p><pre><code>select top 5 sno,snamefrom studentgo </code></pre><p><strong>查询结果放入新表中</strong></p><p>例5  查询所有学生的姓名和性别，查询结果放入newstudent 表中。</p><pre><code>select sname,ssexinto newstudentfrom student</code></pre><h3 id="center-4-2-SQL单表查询-center"><center>4.2 SQL单表查询</center></h3><p>一、单表查询</p><blockquote><p>SELECT  [DISTINCT] *|{字段名1, 字段名2……}<br>FROM表名<br>[WHERE条件表达式]</p></blockquote><p>二、WHERE子句的查询条件<br><img src="https://p.ananas.chaoxing.com/star3/origin/3f94cbb003afee164cd373ca87d6c513.png" alt=""></p><p>三、案例讲解<br><strong>1、比较大小</strong></p><blockquote><p>例1   检索所有性别为男的学生。<br>SELECT*<br>FROM Student<br>WHERE ssex=‘男’;</p></blockquote><blockquote><p>例2    检索2001年一月一日以后出生的学生的学号姓名和性别及出生年月。<br>select sno,sname,ssex,birthday<br>from student<br>where birthday&gt;=‘2001-01-01’ ;</p></blockquote><p><strong>2、使用BETWEEN查询</strong></p><blockquote><p>例3：查询成绩在75到85之间的学生学号和课程号。<br>方法1：<br>select sno，cno<br>from sc<br>where grade <font color="red"><b>between</b></font> 75 <font color="red"><b>and</b></font> 85<br>方法2：<br>select sno，cno<br>from sc<br>where grade&gt;=75 and grade&lt;=85</p></blockquote><blockquote><p>例4：查询不在2001-01-01至2001-0101之间出生的学生的学号和姓名。<br>select sno,sname,birthday<br>from student<br>where birthday <font color="red"><b>not between</b></font>’2001-01-01’<br><font color="red"><b>and</b></font>’2002-01-01’;</p></blockquote><blockquote><p>例5：查询年龄不在18至20岁之间的学生学号和姓名。<br>方法1：<br>select sno,sname<br>from student<br>where sage not between 18 and 20<br>方法2：<br>select sno,sname<br>from student<br>where sage&gt;20 or sage&lt;18</p></blockquote><p><strong>3、使用in查询</strong></p><blockquote><p><font color="red"><b>例6：查询专业为计算机、电子、通信的所有学生信息。</b></font><br>方法1：<br>select *<br>from student<br>where sdept in(‘计算机’, ‘电子’, ‘通信’)<br>方法2：<br>select *<br>from student<br>where sdept=‘计算机’     or    sdept=‘电子’    or    sdept=‘通信’</p></blockquote><blockquote><p><font color="red"><b>例7：查询专业非计算机、电子、通信的所有学生姓名。</b></font><br>select sname<br>from student<br>where sdept not in(‘计算机’,‘电子’,‘通信’)</p></blockquote><p><strong>使用or查询</strong></p><blockquote><p>例8：查询专业为计算机、电子、通信的所有学生信息。<br>select*<br>from student<br>where sdept='计算机’or sdept=‘电子’<br>or sdept=‘通信’;</p></blockquote><p><strong>使用and查询</strong></p><blockquote><p>例9：查询专业为计算机的男学生的信息<br>select *<br>from student<br>where sdept=‘计算机’  and  ssex=‘男’</p></blockquote><p><strong>空值查询</strong></p><blockquote><p>例10：查询没有填写年龄的学生姓名。<br>select sname<br>from  student<br>where sage is null</p></blockquote><p>四、作业<br>1、查询年龄在18岁以上学生的学号、姓名和性别。</p><pre><code>select sno,sname,ssex  from student  where sage&gt;18</code></pre><p>2、查询年龄在16至19岁之间的学生学号和姓名。</p><pre><code>select sno,sname  from studentwhere sage between 16 and 19</code></pre><p>3、查询成绩不在60至80之间之间的学生的选课信息。</p><pre><code>select*from sc where grade not between 60 and 80</code></pre><p>4、查询专业为软件的女学生信息。</p><pre><code>select *from studentwhere sdep='软件' and ssex='女'</code></pre><p>5、查询专业非软件、动漫、电子的所有学生姓名。</p><pre><code>select snamefrom studentwhere sdept not in('软件','电子','动漫')</code></pre><h3 id="center-4-3-聚合函数查询-center"><center>4.3 聚合函数查询</center></h3><p><strong>一、字符匹配</strong></p><p>_      （下划线）  表示任何一个字符</p><p>%      表示任何多个字符（包括0个）</p><p>[  ]      匹配[ ]中的任意一个字符</p><p>[^ ]    不匹配[  ]中的任意一个字符</p><p><strong>二、聚合函数查询</strong></p><p>COUNT(*) 统计表中元组个数。</p><p>COUNT(属性名) 统计一列中列值的个数。</p><p>SUM 计算一列值的总和（此列必须是数值型）。</p><p>AVG 计算一列值的平均值（此列必须是数值型）。</p><p>MAX 求一列值中的最大值。</p><p>MIN 求一列值中的最小值。</p><p><strong>三、案例讲解</strong></p><p><strong>1、字符匹配</strong></p><p>例1 查询姓名中有“明”字的学生记录。</p><blockquote><p>select*<br>from student<br>where sname like ‘%明%’</p></blockquote><p>例2 查询学号后面不是2或3的学生的学号及姓名</p><blockquote><p>select sno,sname<br>from student<br>where sno not like ‘%[2,3]’</p></blockquote><p><strong>2、聚合函数</strong><br>例1：查询1号课程的平均分</p><blockquote><p>select avg(grade) from sc<br>where cno=1</p></blockquote><p>例2：统计学校共开设了多少门课程。</p><blockquote><p>select count(*)from course<br>select count(cno)from course</p></blockquote><p>问题一：count(*)与count(属性名)的区别？</p><blockquote><p>count(*)统计表中元组个数。（包括空值）<br>count(属性名)统计一列中列值得个数。（不包括空值）</p></blockquote><p>例3：统计交了学费的学生人数。</p><blockquote><p>select count(学费)<br>from student;<br>select count(*)<br>from student;</p></blockquote><p>查询聚合数据<br>例4：查询选修了课程的学生人数。</p><blockquote><p><font color="red"><b>select count(distinct sno)<br>from sc; </b></font></p></blockquote><p>注：用<font color="red"><b>distinct</b></font>以避免重复计算学生人数</p><p><strong>四、练习</strong><br>1、查询除姓王的同学以外的学生姓名和班级。</p><pre><code>select sname,class  from student  where sname not like '王%'</code></pre><p>2、在student表中添加t1字段，给每行添加t1数据，其中某一列数据中包含30%。</p><pre><code>use studentsgoupdate student set t1='21%'where sno='95001'update student set t1='22%'where sno='95002'update student set t1='23%'where sno='95003'update student set t1='24%'where sno='95004'update student set t1='25%'where sno='95005'update student set t1='26%'where sno='95006'update student set t1='27%'where sno='95007'update student set t1='28%'where sno='95008'update student set t1='29%'where sno='95009'update student set t1='30%'where sno='95010'</code></pre><p>3、查询t1字段中包含字符串“30%”的所有信息。</p><pre><code>select *from studentwhere t1 like '%30!%' escape'!'</code></pre><p>4、查询选修课成绩的最高分、最低分和平均分，（查询的列注意重命名为：最高分、最低分和平均分)。</p><pre><code>select max(grade) as 最高分 from scselect min(grade) as 最低分 from scselect avg(grade) as 平均分 from sc</code></pre><p>5、查询考试成绩有不及格学生的学号。</p><pre><code>select snofrom scwhere grade &lt;'60'</code></pre><h3 id="center-4-4-分组查询-center"><center>4.4 分组查询</center></h3><p>一、思考题</p><p><font color="red"><b>思考：</b></font>ORDER BY后面可以跟多个字段进行排序吗？<br>答：<font color="red"><b>order by 后面可以跟多个字段进行排序<br>用A1代替第一个字段，A2代表第二个字段<br>1、</b></font>order by ,A2 desc 指得是<font color="red"><b>用A1升序A2降序<br>2、</b></font>order by A1 asc, A2 desc 指得是<font color="red"><b>用A1升序A2降序<br>3、</b></font>order by A1 desc,A2 desc 指的是<font color="red"><b>用A1降序A2降序</b></font></p><p>二、GROUPBY和HAVING一起使用</p><p>HAVING子句用来指定分组后结果集的筛选条件，它的功能和WHERE子句类似，但它的操作对像是GROUP BY子句指定的已经分组的元组，而WHERE子句的操作对象是FROM子句指定的表。HAVING子句常与GROUP BY子句一起使用。<br>一、案例讲解<br>1、ORDER BY排序<br>例1  查询选修了2课程的学生的学号和成绩，查询结果按成绩降序排序。</p><blockquote><p>SELECT cno,Sno, Grade<br>FROM SC<br>WHERE Cno=2<br>ORDER BY Grade DESC;</p></blockquote><p>2、分组统计<br><strong>使用GROUP BY子句</strong><br>(1)单独使用GROUP BY<br>例7查询性别分组后的信息。</p><blockquote><p>SELECT * FROM student GROUP BY ssex;</p></blockquote><p><font color="red"><b>[注意] </b></font>:查询结果进行比较，GROUP BY关键字只显示<br>每个分组的一条记录。这说明，GROUP BY关键字单独使用<br>时，只能查询出每个分组的一条记录，这样做的意义不大。<br>因此，一般在使用<font color="red"><b>聚合函数时才使用GROUP BY关键字</b></font>。</p><p>(2) GROUP BY和聚合函数一起使用<br>例8查询各门课程的选修人数。</p><blockquote><p>SELECT Cno,COUNT(*) FROM SC<br>GROUP BY Cno</p></blockquote><p>例9:统计男女生各有多少人。<br>count():  统计</p><blockquote><p>select ssex,count(ssex) as人数<br>from student<br>Group by ssex</p></blockquote><p>例10：求各学生的总分。<br><font color="red"><b>Sum():求和</b></font><br>select sno,sum(grade)as总分<br>from Sc<br>Group by sno</p><p>(3) GROUP BY和HAVING一 起使用<br><font color="red"><b>HAVING子句</b></font>用来指定分组后结果集的筛  选条件，它的功能和WHERE子句类似，但它的操作对像是GROUP BY子句指定的已经分组的元组，而WHERE子句的操作对象是FROM子句指定的表。HAVING子句常与GROUPBY子句一起使用。</p><p>例11求选课在2门以上的学生，并统计平均成绩。</p><blockquote><p>SELECT Sno, AVG (Grade) as Average<br>FROM SC<br>GROUP BY Sno<br>HAVING COUNT (*) &gt;=2</p></blockquote><p><font color="red"><b>思考:</b></font><br>将学生的性别进行分组查询，显示记录数大于等于4的分组。</p><blockquote><p>SELECT ssex, COUNT (ssex)<br>FROM student<br>GROUP BY<br>ssex<br>HAV ING COUNT (ssex)&gt;=4;</p></blockquote><p>例12求选课在2门门以上并且成绩及格的学生，并统计平均成绩。</p><blockquote><p>SELECT Sno,AVG(Grade) as<br>Average<br>FROM SC<br>GROUP BY Sno HAVING<br>COUNT(*)&gt;=2 and MIN(grade)&gt;=60</p></blockquote><p>二、课堂练习</p><p>1、查询女学生的姓名、专业名，结果按姓名升序排序，专业名降序。<br>2、查询出所有学生的学号及所选课程的门数，按门数降序排列。<br>3、查询出每个专业的学生人数。<br>4、查询专业人数多于1人的专业名称及人数。<br>5、查询2号课程的成绩在前3名学生的学号 。</p><h3 id="center-4-5-多表查询-center"><center>4.5 多表查询</center></h3><p>一、多表查询<br>在数据库应用中，经常需要从多个相关的表中查询数据，这就需要进行表连接。<br>1、使用内部连接<br>内部连接也叫自然连接，是将两个表中的列进行比较，将两个表中满足连接条件的行组合起来作为结果，它是最常见的表连接形式。<br>内部连接有以下两种语法形式：<br><img src="https://p.ananas.chaoxing.com/star3/origin/8ceb504f4239babf482ccd5bc8120667.png" alt=""><br>2、自身连接<br>连接操作不仅可以在两个表之间进行，也可以是一个表与其自己进行连接，称为表的自身连接。<br>3、复合条件连接<br>WHERE子句中含多个连接条件时，称为复合条件连接</p><p>4、以JOIN关键字指定的连接</p><p>从多个表合并数据，并涉及多个表之间的连接。多表间的连接方式可分为内连接、外连接。被连接的表可以来自同一数据库，也可以来自不同的数据库。</p><p>（1）内连接<br>格式：SELECT  列名  FROM  &lt;数据源&gt;  JOIN  &lt;数据源&gt;  ON  连表条件<br>（2）外连接<br>一、案例讲解</p><p>例1  查询每个学生及其选修课程的情况。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/69b4475c0c87e6c92b28033e312c379a.png" alt=""></p><p>例2 查询所有学生的学号、姓名及成绩。<br><img src="https://p.ananas.chaoxing.com/star3/origin/d39379e1fb89753c07e8f8997b700278.png" alt=""></p><p>例3 查询所有比“刘晨”大的学生的姓名和年龄。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/7d8472a627fa80b48d03f0042fd04372.png" alt=""></p><p>例4 查询选修2号课程且成绩在80分以上的所有学生的学号、姓名。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/205126700097aa7fd6f7b523ceafa016.png" alt=""></p><p>三、复合条件连接<br>●<br>例五:查询2号课程的成绩在前3名学生的姓名。</p><blockquote><p>select top 3 sname as 前3名学生<br>from student,sc<br>where Student.Sno= = SC.Sno<br>And sc.cno= 2<br>ORDER BY sc,Grade DESC</p></blockquote><p>四、多表连接<br>例六:查询每 个学生的学号、姓名、选修的课程名<br>及成绩。</p><blockquote><p><font color="greng"><b>SELECT</b></font> Student.Sno， Sname， Cname,<br>Grade<br><font color="greng"><b>FROM</b></font><br>Student, SC，Course<br><font color="greng"><b>WHERE</b></font> Student.Sno = SC.Sno<br><font color="greng"><b>AND</b></font> SC .Cno = Course.Cno;</p></blockquote><p>五、以JOIN关键字指定的连接<br>例七:在学生数据库中，查询学生学号、姓名、成绩。</p><blockquote><p><font color="red"><b>SELECT</b></font> student.sno, sname, grade<br><font color="red"><b>FROM</b></font> student <font color="red"><b>JOIN</b></font> sc<br><font color="red"><b>ON</b></font> student.sno=sc.sno<br><font color="red"><b>或</b></font>给使用的表取<font color="red"><b>别名</b></font><br><font color="red"><b>SELECT</b></font> x.sno,sname,grade<br><font color="red"><b>FROM</b></font> student x <font color="red"><b>JOIN</b></font> sc y<br><font color="red"><b>ON</b></font> x.sno=y.sno</p></blockquote><ul><li>此命令等价于利用WHERE子句进行连表查询。</li></ul><blockquote><p><font color="greng"><b>SELECT</b></font> Student.Sno, Sname, grade<br><font color="greng"><b>FROM</b></font><br>Student, SC<br><font color="greng"><b>WHERE</b></font> Student.Sno = SC.Sno<br>多表内连接?</p></blockquote><p>例八:使用join连接查询每个学生的学号、姓名、选修的课程名及成绩。<br><font color="greng"><b>例题六答案: </b></font></p><blockquote><p>SEL ECT Student.Sno,Sname,Cname,Grade<br>FROM<br>Student,SC ,Course<br>WHERE Student.Sno = SC.Sno<br>AND SC.Cno = Course.Cno<br><font color="red"><b>join内连接? </b></font></p></blockquote><p>格式: <font color="red"><b>SELECT列名</b></font><br><font color="red"><b>FROM (表1 JOIN表2 ON表1.字段名=表2.字段名)<br>JOIN表3 ON表1.字段名=表3.字段名</b></font><br>例八:<br>查询每个学生的学号、姓名、选修的课程名及成绩。<br><font color="red"><b>内连接:</b></font></p><blockquote><p><font color="greng"><b>SELECT</b></font> Student.Sno,Sname,Cname,Grade<br><font color="greng"><b>FROM</b></font><br>(Student join SC on Student.Sno = SC.Sno)<br>join Course On SC .Cno = Course.Cno</p></blockquote><p>[操作演示]<br>例题九:显示所有学生的学号、姓名、考试的成绩(使用左连接的方法)。</p><blockquote><p><font color="red"><b>SELECT x.sno,sname,grade<br>FROM student X left outer JOIN SC y<br>ON x.sno=y.sno</b></font></p></blockquote><p>例题十:显示所有学生的<br>姓名、性别、考试的成绩<br>(使用右连接的方法)。</p><blockquote><p><font color="red"><b>SELECT x.sno,sname,grade<br>FROM student X right outer JOIN SC y<br>ON x.sno=y.sno</b></font></p></blockquote><p>例题十一:显示所有学<br>生的姓名、性别、考试<br>的成绩(使用全连接的<br>方法)。</p><blockquote><p><font color="red"><b>SEL .ECT x.sno,sname,grade<br>FROM student X full outer JOIN SC y<br>ON x.sno=y.sno</b></font></p></blockquote><p>二、课堂练习<br>1、用普通的内连接查询选修2号课程且成绩在90分以上的所有学生的学号、姓名。</p><p>2、用自身连接查询所有比“张立”小的学生的姓名和年龄。</p><p>3、查询1号课程的成绩在前2名学生的姓名。</p><p>4、查询选修课成绩及格的学生姓名、课程名及成绩。</p><p>5、统计男女同学选修课的平均分和最高分。</p><p>6、用join内连接查询电子专业男生的学号、姓名、课程名及成绩。</p><p>7、用外连接查询所有学生的选课情况，包括没有选课的情况。</p><h3 id="center-4-6-嵌套查询-center"><center>4.6 嵌套查询</center></h3><p>一、联合查询</p><p>1、UNION运算符</p><p>把多个SELECT语句返回的结果集组合到一个结果集。<br><img src="https://p.ananas.chaoxing.com/star3/origin/b8fd78d772ca8c82abd09254234e4959.png" alt=""></p><p>2、使用UNION运算符的注意事项<br><img src="https://p.ananas.chaoxing.com/star3/origin/7bccbd393ac659d071dce75e9d7b2979.png" alt=""></p><p>二、嵌套查询概述</p><p>一个SELECT-FROM-WHERE语句称为一个查询块。</p><p>将一个查询块嵌套在另一个查询块的WHERE子句或HAVING短语的条件中的查询称为嵌套查询。</p><p>三、引出子嵌套查询的谓词</p><p>1、带有IN谓词的子查询</p><p>2、带有比较运算符的子查询</p><p>3、带有ANY或ALL谓词的子查询</p><p>4、带有EXISTS谓词的子查询</p><p>一、案例讲解</p><p>例一：查询选修了2号课程的学生姓名。<br><img src="https://p.ananas.chaoxing.com/star3/origin/3b89dd249cabd8577ec9ff20e31bd1d6.png" alt=""></p><p>使用嵌套查询：<br><img src="https://p.ananas.chaoxing.com/star3/origin/b54eaa855d1dc14cb478e4d5515dc125.png" alt=""></p><p>例二：查询与“刘晨”在同一个专业学习的学生的学号，姓名。<br><img src="https://p.ananas.chaoxing.com/star3/origin/07f389fa2b6ff316e1febffd4de32608.png" alt=""></p><p>例三：查询选修了课程名为“信息系统”的学生学号和姓名。<br><img src="https://p.ananas.chaoxing.com/star3/origin/38959ac6e7150aad138f5ca7dc718016.png" alt=""></p><p>例四：使用比较运算符查询与“刘晨”在同一个专业学习的学生姓名。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/1a834b26ff0568a75152bcf9e0c53ea1.png" alt=""></p><p>二、联合查询<br>4、联合查询<br><font color="red"><b>准备工作: </b></font><br>(1) 创建教师表:</p><blockquote><p>CREATE TABLE teacher (<br>tno int (10) PR IMARY KEY,<br>tname varchar (10) NOT NULL) ;</p></blockquote><p>(2) 插入数据:</p><blockquote><p>Insert teacher<br>VALUES (’ 2001001’,‘曹晨’),<br>(’ 2016022’, ‘黄欢欢’) ;</p></blockquote><p><font color="red"><b>例十一:查询学校所有师生的信息。</b></font></p><blockquote><p>select sno,sname<br>from student<br>union<br>select tno,tname<br>from teacher</p></blockquote><p>师生的信息改列名，<br>否则显示union前<br>面表的列名。</p><blockquote><p>select sno编号,sname 姓名<br>from student<br>union<br>select tno,tname<br>from teacher</p></blockquote><p>三、课堂练习</p><p>1、使用UNION联合查询查询学校所有师生的信息。（在数据库中创建“teacher表”,字段有tno,tname,ssex。数据类型参考student表。“teacher表”数据自由添加5行）。</p><pre><code>use studentsgo]create table teacher(tno int primary key,tname varchar(10) not nu11,ssez varchar(10) not NULL) ;linsert teachervalues(' 2001001’，'曹晨’，’男’),(' 2016022&quot; ,'黄欢欢’，’女');select sno编号, sname as姓名,ssex as性别from studentunionselect tno, tname, ssex .from teacher  </code></pre><p>2、用嵌套查询所有比“王敏”大的学生的姓名和年龄。</p><pre><code>lselect sname姓名，sage as年龄from studentwhere sage &gt; al1(se1ect sage from student where sname=' 王敏’)</code></pre><p>3、用嵌套查询选修了3号课程的学生姓名。</p><pre><code>select sname姓名from student where sno in (select sno from sc where cno=3) ;</code></pre><p>4、用嵌套查询选修了课程名为“数学”的学生学号和姓名。</p><pre><code>select sno学号, sname as姓名from student where sno in (se1ect sno from sc where cno in (select cno from course where sdept=' 数学’))</code></pre><p>5、用嵌套查询王明同学选修了的课程名。</p><pre><code>lselect cname课程名from course where cno in (select cno from sc where sno in (select sno from student where sname=' 王明’))</code></pre><h3 id="center-4-7-子查询-center"><center>4.7  子查询</center></h3><p>一、带有ANY或ALL谓词的子查询</p><p>ANY和ALL谓词有时可以用聚合函数实现–ANY与ALL与聚合函数的对应关系<br><img src="https://p.ananas.chaoxing.com/star3/origin/f21022f7d9f14a0ce1e7d36d9730b476.png" alt=""></p><p>二、带有EXISTS谓词的子查询</p><p>带有EXISTS谓词的子查询不返回任何数据，只产生逻辑真值“true”或逻辑假值“false”。</p><p>由EXISTS引出的子查询，其目标列表达式通常都用* ，因为带EXISTS的子查询只返回真值或假值，给出列名无实际意义。<br>一、案例讲解</p><p>例1：查询其他专业中比计算机系任意一个(其中某一个)学生年龄小的学生姓名和年龄。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/2673f1d217d54cbaabff623ac4a5368b.png" alt=""></p><p>例2：用聚合函数实现[例1]查询其他专业中比计算机专业任意一个(其中某一个)学生年龄小的学生姓名和年龄。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/ac57cc35cd18983ca3a851d3b9b6e374.png" alt=""></p><p>例3：查询其他专业中比电子专业所有学生年龄都小的学生姓名及年龄。<br><img src="https://p.ananas.chaoxing.com/star3/origin/a1db75953cfec9f4c2ff756f871e936c.png" alt=""></p><p><img src="https://p.ananas.chaoxing.com/star3/origin/57c1efe8eec07d7b8612b3b80805d9c9.png" alt=""></p><p>例4：使用EXISTS谓词查询所有选修了1号课程的学生姓名。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/6df076c5e80fd26fc074a6edb4d88491.png" alt=""></p><p>例5：使用NOT EXISTS谓词查询没有选修1号课程的学生姓名。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/729dabcf3cf5e103ae95b6770fa0c64e.png" alt=""></p><p>例6：使用EXISTS谓词查询与“王明”在同一个专业学习的学生姓名。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/ae678b3221c8d280b1f93de899d92ca9.png" alt=""></p><p>二、课堂练习<br>1、用嵌套查询查询其他系中比电子系任意一个学生年龄小的学生姓名和年龄。</p><pre><code>use studentsgoselect sname, sagefrom studentwhere sage&lt;(select max(sage) from student where sdept=' 电子’)and sdept&lt;&gt;' 电子’</code></pre><p>2、用嵌套查询其他专业中比软件专业所有学生年龄都小的学生姓名及专业。</p><pre><code>select sname, sdeptfrom studentwhere sage&lt;(select min(sage) from student where sdept=' 软件’)and sdept&lt;&gt;' 软件’</code></pre><p>3、用not EXISTS嵌套查询没有选修任何课程的学生姓名。</p><pre><code>select sname from student where not exists (select * from sC where student. sno=sc. sno)</code></pre><p>4、统计各门课程的最高分与最低分相差12分以上的课程名。</p><pre><code>select cnamefrom coursewhere cno in (select cno from SC group by cnohaving max (grade) -min (grade)&gt;=12)</code></pre><p>5、查询至少被选修了二次的课程号及课程名称。</p><pre><code>select cno, cnamefrom course where cno in(se1ect cno from sc group by cno having count(*)&gt;=2)</code></pre><h2 id="第五章-索引和视图">第五章 索引和视图</h2><h3 id="center-5-1-索引-center"><center>5.1 索引</center></h3><p>一、索引的概念</p><p>如果把数据库看作一本书，那么书的目录就是人们所说的索引，索引是基本表的目录。索引是一个单独的、物理的数据结构，它与目录一样，也是单独存在的，但索引的建立是依赖于表建立的，它提供了在数据库中编排表中数据的内部方法。</p><p>二、索引的作用</p><p>1、加快数据检索速度。</p><p>2、加快表与表之间的连接速度。</p><p>3、 在使用ORDER BY和GROUP BY子句进行检索时，可以显著地减少查询中分组和排序的时间。</p><p>4、 保证数据记录的唯一性。唯一性索引的创建可以保证表中的数据记录不重复。</p><p>三、索引的类型</p><p>1、唯一索引（特殊类型：主键索引）</p><p>2、单列索引</p><p>3、复合索引</p><p>四、根据索引的顺序与数据表的物理顺序是否相同，索引可分两种类型：一是聚集索引；二是非聚集索引。</p><p>五、索引使用</p><p>1、考虑创建索引的列</p><p>（1）主键列上（默认创建一个聚集索引）；</p><p>（2）经常用在连接的列上；</p><p>（3）经常需要进行范围查询的列上；</p><p>（4）经常需要排序的列上。</p><p>2、不考虑创建索引的列</p><p>（1）很少或从来不在查询中引用的列。</p><p>（2）选择性低（重复值多）的列；</p><p>（3）小表（记录数很少的表）一般也不必创建索引；</p><p>（4）更新操作比较频繁的列上不适合创建索引。</p><p>六、使用T-SQL语句创建索引的语法<br><img src="https://p.ananas.chaoxing.com/star3/origin/0faaa1d0d89d0f96eb9a7b679f4c1f66.png" alt=""></p><p>Unique选项表示索引的列必须唯一</p><p>Clustered表示索引为聚集索引</p><p>NonClustered表示索引为非聚集索引，默认</p><p>一、案例讲解<br>1、在学生表的学号列上创建聚集索引。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/8f3284def0307257bc6523a7b00c5a27.png" alt=""></p><p>2、在学生表的姓名列上创建唯一的非聚集索引。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/b895fc883727b659346c3ee41dc93dd6.png" alt=""></p><p>3、在学生成绩表的学生编号列和课程编号列上创建组合的聚集索引。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/07e9a6d96302fde349208e2b754762e4.png" alt=""></p><p>4、删除学生表姓名列上的索引。<br><img src="https://p.ananas.chaoxing.com/star3/origin/453010792f726572b4a473093302b9b9.png" alt=""></p><p>二、课堂练习</p><p>1、UNIQUE惟一索引的作用是(  <font color="red"><b>A</b></font>    )</p><p><font color="red"><b>A、<br>保证各行在该索引上的值都不得重复</b></font></p><p>B、<br>保证各行在该索引上的值不得为NULL</p><p>C、<br>保证参加惟一索引的各列，不得再参加其他的索引</p><p>D、<br>保证惟一索引不能被删除</p><p>2、为数据表创建索引的目的是(  <font color="red"><b> A</b></font>    )</p><p><font color="red"><b>A、<br>提高查询的检索性能</b></font></p><p>B、<br>归类</p><p>C、<br>创建唯一索引</p><p>D、<br>创建主键</p><h3 id="center-5-1-视图-center"><center>5.1 视图</center></h3><p>一、视图的概念</p><p>视图是由一个或多个数据表或视图导出的<font color="red"><b>虚拟表</b></font>或<font color="red"><b>查询表</b></font>。</p><p>二、视图的优点</p><p>1、简化查询语句</p><p>日常开发中我们可以将经常使用的查询定义为视图，从而使用户避免大量重复的操作。</p><p>2、安全性</p><p>通过视图用户只能查询和修改他们所能见到的数据，数据库中的其他数据则既看不到也取不到。</p><p>3、逻辑数据独立性</p><p>视图可以帮助用户屏蔽真实表结构变化带来的影响。<br>一、案例讲解</p><p>例1  创建女同学的视图（girl_view），包括学号、姓名、性别和专业等信息。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/829859a55a830857d2a44f6a3346cfe2.png" alt=""></p><p>例2 修改例1创建的“girl _VIEW”视图的定义信息，将其改为显示所有计算机专业的女生信息。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/87dad60a614cef219934bb8fccc8e0aa.png" alt=""></p><p>例3 查看“girl _VIEW”视图的字段信息。</p><p><font color="red"><b>DESC  girl_view</b></font></p><p>例4 查看“girl _VIEW”视图的定义信息。</p><p><img src="https://p.ananas.chaoxing.com/star3/origin/90bb10e0cf28c56f007fdb3737f5b7f4.png" alt=""></p><p>例5   删除“girl _VIEW”视图</p><p>DROP VIEW girl_view<br>二、作业<br>1、在student表的姓名列上创建唯一的非聚集索引。</p><pre><code>lcreate unique nonclustered indexix_ snameon student (sname)</code></pre><p>2、查看学生表.上的索引信息。</p><pre><code>sp_ helpindex student</code></pre><p>3、 删除学生表姓名列上的索引。</p><pre><code>drop index student. 1x_ sname</code></pre><p>4、创建女同学的视图(gir1_ _view)，包括学号、姓名、性别和专业等信息。</p><pre><code>CREATE VIEW 8ix1 xiew asselect sno, sname, ssex, sdeptfrom student_where ssex=' 女</code></pre><p>5、修改任务4创建的“gir1_ _view”视图的定义信息，将其改为显示所有电子专业的女生信息。</p><pre><code>atexn yieusishwieasselect sno, sname, ssex, sdeptfrom studentwhere ssex=' 女’and sdept=' 电子'</code></pre><p>6、使用系统存储过程SP_ RENAME将视图“GIRL_ <em>VIEW&quot;改为“VIEW</em> _GIRL”。</p><pre><code>sD_ xensme gir1_ view, v1ew_ gir1</code></pre><p>7、查询视图VIEW_ _GIRL的所有信息。</p><pre><code>select * from VIEW GIRL</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言知识点</title>
      <link href="/2020/04/23/C%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2020/04/23/C%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="center-C语言知识点-center"><center>C语言知识点</center></h2><p><strong>总体上必须清楚的:</strong><br><font face="方正粗黑宋简体" ><br>(1)程序结构是三种:  <font color="greng">顺序结构 、选择结构(分支结构)、循环结构。</font></p><p>(2)读程序都要从main()入口, 然后从最上面顺序往下读(碰到循环做循环,碰到选择做选择)，有且只有一个main函数。</p><p>(3)计算机的数据在电脑中保存是以二进制的形式. 数据存放的位置就是 他的地址.</p><p>(4)bit是位 是指为0 或者1。 byte 是指字节, <font color="greng">一个字节 = 八个位.</font><br></font></p><p><strong>概念常考到的：</strong><br><font face="方正粗黑宋简体" ></p><ol><li><p>编译预处理不是C语言的一部分，不占运行时间，不要加分号。C语言编译的程序称为源程序，它以ASCII数值存放在文本文件中。</p></li><li><p>#define PI 3.1415926; 这个写法是错误的，一定不能出现分号。<br><b><font color="red"> define a 1+2          define a (1+2)<br>a=a<em>a=1+2</em>1+2=5       a=a<em>a=3</em>3=9 <br></font> </b></p></li><li><p>每个C语言程序中main函数是有且只有一个。</p></li><li><p>在函数中不可以再定义函数。</p></li><li><p>算法：可以没有输入，但是一定要有输出。</p></li><li><p>break可用于循环结构和switch语句。</p></li><li><p>逗号运算符的级别最低，赋值的级别倒数第二。<br></font></p></li></ol><h2 id="center-第一章C语言的基础知识-center"><center>第一章C语言的基础知识</center></h2><h3 id="第一节、对C语言的基础认识">第一节、对C语言的基础认识</h3></br><font face="方正粗黑宋简体" >  1、C语言编写的程序称为源程序，又称为编译单位。  <p>2、C语言书写格式是自由的，每行可以写多个语句，可以写多行。<br>3、一个C语言程序有且只有一个main函数，是程序运行的起点。<br></font></p><h3 id="第二节、熟悉vc">第二节、熟悉vc++</h3></br><font face="方正粗黑宋简体" >  1、VC是软件，用来运行写的C语言程序。<p>2、每个C语言程序写完后，都是先<font color="red">编译</font>，后<font color="red">链接</font>，最后<font color="red">运行</font>。（.c—à.obj—à.exe）这个过程中注意<font color="red">.c和.obj</font>文件时无法运行的，只有<font color="red">.exe文件才可以运行。<strong>（常考！）</strong></font><br></font></p><h3 id="第三节、标识符">第三节、标识符</h3></br><font face="方正粗黑宋简体" >  1、标识符<font color="red"><b>（必考内容）：</b></font>  </br><p><u>合法的要求是由字母，数字，下划线组成。有其它元素就错了。</p><p>并且第一个必须为字母或则是下划线。第一个为数字就错了<br></u><br>2、标识符分为关键字、预定义标识符、用户标识符。</p><p><b>关键字：</b>不可以作为用户标识符号。main define  scanf  printf 都不是关键字。迷惑你的地方If是可以做为用户标识符。因为If中的第一个字母大写了，所以不是关键字。</p><p><b>预定义标识符：</b><font color="red">背诵define scanf  printf  include。</font>记住预定义标识符可以做为用户标识符。</p><p><b>用户标识符：</b>基本上每年都考，详细请见书上习题。<br></font></p><h3 id="第四节：进制的转换">第四节：进制的转换</h3></br><font face="方正粗黑宋简体" >  十进制转换成二进制、八进制、十六进制。<p>二进制、八进制、十六进制转换成十进制。<br></font></p><h3 id="第五节：整数与实数">第五节：整数与实数</h3></br><font face="方正粗黑宋简体" >  (1)C语言只有<font color="red">八、十、十六</font>进制，没有二进制。<font color="red">但是运行时候，所有的进制都要转换成二进制来进行处理。</font>（考过两次）<p>a、C语言中的八进制规定要以0开头。018的数值是非法的，八进制是没有8的，逢8进1。 <br>b、C语言中的十六进制规定要以0x开头。</p></br>(2)小数的合法写法：C语言<font color="red">小数点两边有一个是零的话，可以不用写。</font><p>1.0在C语言中可写成1.<br>0.1在C语言中可以写成.1。</p></br>(3)实型数据的合法形式：<p>a、2.333e-1 就是合法的，且数据是2.333×10-1。</p><p>b、考试口诀：<font color="red">e前e后必有数，e后必为整数。</font>请结合书上的例子。</p></br>(4) <font color="red">整型</font>一般是<font color="blue">4</font>个字节, <font color="red">字符型</font>是<font color="blue">1</font>个字节，<font color="red">双精度</font>一般是<font color="blue">8</font>个字节：<p>long int x; 表示x是长整型。<br>unsigned int x; 表示x是无符号整型。<br></font></p><h3 id="第六、七节：算术表达式和赋值表达式">第六、七节：算术表达式和赋值表达式</h3></br><font face="方正粗黑宋简体" >  <font color="red">核心：表达式一定有数值！</font>    </br>1、 算术表达式：+，-，*，/，%<p>考试一定要<b>注意:</b>“/” 两边<font color="blue">都是</font>整型的话，结果就是一个<font color="blue">整型</font>。 3/2的结果就是1.</p><p>“/” 如果<font color="blue">有一边</font>是小数，那么结果就是<font color="blue">小数</font>。 3/2.0的结果就是1.5</p><p>“%”符号请一定要注意是<font color="red">余数</font>，考试最容易算成了除号。）<font color="red">%符号两边要求是整数</font>。不是整数就错了。[注意!!!]<br></br><br>2、赋值表达式：表达式数值是最左边的数值，a=b=5;该表达式为5，常量不可以赋值。</p><ol><li><p>int x=y=10: 错啦，<font color="blue">定义时</font>，<font color="red">不可以</font>连续赋值。</p></li><li><p>int x,y;</p></li></ol><p>x=y=10;   对滴，<font color="blue">定义完成后</font>，<font color="red">可以</font>连续赋值。</p><ol start="3"><li><p><font color="blue">赋值的左边只能是</font><font color="red">一个变量</font>。</p></li><li><p>int x=7.7；对滴，x就是7</p></li><li><p>float y=7；对滴，x就是7.0<br></br></p></li></ol><p>3、复合的赋值表达式：</p><p>int a=2；<br>a*=2+3；运行完成后，a的值是12。</p><p>一定要注意，首先要在2+3的上面打上括号。变成（2+3）再运算。</p><p><font color="red">复合语句一定用｛｝；</font><br></br><br>4、自加表达式：</p><p>自加、自减表达式：假设a=5，++a（是为6）， a++（为5）；</p><p>运行的机理：++a 是先把变量的数值加上1，然后把得到的数值放到变量a中，然后再用这个++a表达式的数值为6，而a++是先用该表达式的数值为5，然后再把a的数值加上1为6，</p><p>再放到变量a中。 进行了++a和a++后在下面的程序中再用到a的话都是变量a中的6了。</p><p><font color="red">考试口诀：++在前先加后用，++在后先用后加。</font><br></br><br>5、逗号表达式：</p><p>优先级别<font color="red">最低</font>。表达式的数值逗号最右边的那个表达式的数值。</p><p>（2，3，4）的表达式的数值就是4。</p><p>z=（2，3，4）(整个是赋值表达式) 这个时候z的值为4。（有点难度哦！）</p><p>z=  2，3，4 （整个是逗号表达式）这个时候z的值为2。</p><p>补充：</p><ol><li><p>空语句<font color="red">不可以</font>随意执行，会导致逻辑错误。</p></li><li><p>注释是最近几年考试的重点，注释<font color="red">不是</font>C语言，<font color="red">不占</font>运行时间，<font color="red">没有</font>分号。<font color="red">不可以</font>嵌套！</p></li><li><p>强制类型转换：</p></li></ol><p>一定是 （int）a 不是  int（a），注意类型上一定有括号的。</p><p>注意（int）（a+b） 和（int）a+b 的区别。前是把a+b转型，后是把a转型再加b。</p><ol start="4"><li><strong>三种取整丢小数的情况：</strong></li></ol><pre><code>int a =1.6；(int)a；　　1/2； 3/2；不丢小数办法，在相应的格式中加前缀.2保留2位，四舍五入</code></pre></font><h3 id="第八节、字符">第八节、字符</h3></br><font face="方正粗黑宋简体" >  1、字符数据的合法形式:：<p>‘1’ 是字符占一个字节，&quot;1&quot;是字符串占两个字节(含有一个结束符号)。</p><p>‘0’ 的ASCII数值表示为48，‘a’ 的ASCII数值是97，'A’的ASCII数值是65。</p><p><font color="red">一般考试表示单个字符错误的形式：‘65’    “1”</p><p>字符是可以进行算术运算的，记住：　‘0’-0=48</p><p>大写字母和小写字母转换的方法：　‘A’+32=‘a’  </font>相互之间一般是相差32。</p><p></br>2、转义字符：</p><p>转义字符分为一般<font color="red">转义字符、八进制转义字符、十六进制转义字符。</font></p><p>一般转义字符：背诵\0、 \n、 \’、 \”、<code> \\</code>。</p><p>八进制转义字符：  ‘\141’ 是合法的， 前导的0是不能写的。</p><p>十六进制转义字符：’\x6d’ 才是合法的，前导的0不能写，并且x是小写。</p><p></br>3、字符型和整数是近亲：两个具有很大的相似之处</p><pre><code>　　        char a = 65 ;　            printf(“%c”,a);  得到的输出结果：aprintf(“%d”, a);　得到的输出结果：65                </code></pre></font><h3 id="第九节、位运算">第九节、位运算</h3><font face="方正粗黑宋简体" >  </br>(1)位运算的考查：会有一到二题考试题目。<p>总的处理方法：几乎所有的位运算的题目都要按这个流程来处理（<font color="red">先把十进制变成二进制再变成十进制</font>）。</p><p><font color="red"><strong>例1：</strong></font>　char a = 6,b;</p><p>b = a&lt;&lt;2;  这种题目的计算是先要把a的十进制6化成二进制，再做位运算。</p><p><font color="red"><strong>例2：</strong></font>　一定要记住，异或的位运算符号” ^ ”。0 异或 1得到1。</p><p>0 异或 0得到0。两个女的生不出来。</p><p>考试记忆方法：一男(1)一女(0)才可以生个小孩(1)。</p><p><font color="red">例3：</font>　在没有舍去数据的时候，&lt;&lt;左移一位表示乘以2；&gt;&gt;右移一位表示除以2。　　　<br></font></p><h2 id="center-第二章-center"><center>第二章</center></h2><h3 id="第一节：数据输出（一）（二）">第一节：数据输出（一）（二）</h3><font face="方正粗黑宋简体" >   <p>1、使用printf和scanf函数时，要在最前面加上#include“stdio.h”</p><p>2、printf可以只有一个参数，也可以有两个参数。（选择题考过一次）</p><p>3、printf（“ 第一部分 ”，第二部分  ）；把第二部分的变量、表达式、常量以第一部分的形式展现出来！</p><p>4、printf（“a=%d，b=%d”，12, 34） 考试重点！</p><p>一定要记住是将12和34以第一部分的形式现在在终端也就是黑色的屏幕上。考试核心为：<font color="red">一模一样</font>。在黑色屏幕上面显示为  a=12，b=34</p><p>printf（“a=%d，\n b=%d”，12, 34）那么输出的结果就是：a=12，</p><p>b=34</p><p><font color="red">提示输出错误解决办法（整形数组）</font></p><pre><code>  printf（i==n?”%d ”:”%d\n”,a[i]）;  (i&lt;n-1)printf(“%d ”,a[i]);  prinitf(“%d\n”,a[i]);</code></pre><p>5、int x=017；   一定要弄清楚为什么是这个结果！过程很重要</p><pre><code>printf（“%d”， x）；&lt;font color=&quot;red&quot;&gt; 15&lt;/font&gt;printf（“%o”， x）； &lt;font color=&quot;red&quot;&gt;17&lt;/font&gt;printf（“%#o”，x）；&lt;font color=&quot;red&quot;&gt; 017&lt;/font&gt;printf（“%x”， x）； &lt;font color=&quot;red&quot;&gt;11 &lt;/font&gt;printf（“%#x”，x）；&lt;font color=&quot;red&quot;&gt; 0x11&lt;/font&gt;</code></pre><p>6、int x=12，y=34； 注意这种题型</p><pre><code>      char z=‘a’；          printf（“%d ”，x，y）； 一个格式说明，两个输出变量，后面的y不输出      printf（“%c”，z）；      结果为：12a</code></pre><p>7、一定要背诵的</p><table><thead><tr><th style="text-align:center">格式说明</th><th style="text-align:center">表示内容</th><th style="text-align:center">格式说明</th><th style="text-align:center">表示内容</th></tr></thead><tbody><tr><td style="text-align:center">%d</td><td style="text-align:center">整型 int</td><td style="text-align:center">%c</td><td style="text-align:center">字符  char</td></tr><tr><td style="text-align:center">%ld</td><td style="text-align:center">长整型 long int</td><td style="text-align:center">%s</td><td style="text-align:center">字符串</td></tr><tr><td style="text-align:center">%f</td><td style="text-align:center">浮点型 float</td><td style="text-align:center">%o</td><td style="text-align:center">八进制</td></tr><tr><td style="text-align:center">%lf</td><td style="text-align:center">double</td><td style="text-align:center">%#o</td><td style="text-align:center">带前导的八进制</td></tr><tr><td style="text-align:center">%%</td><td style="text-align:center">输出一个百分号</td><td style="text-align:center">%x%X</td><td style="text-align:center">十六进制输出大写</td></tr><tr><td style="text-align:center">%5d</td><td style="text-align:center"></td><td style="text-align:center">%#x</td><td style="text-align:center">带前导的十六进制</td></tr></tbody></table><p><strong>举例说明：</strong></p><pre><code>printf（“%2d”，123 ）；  第二部分有三位，大于指定的两位，原样输出123printf（“%5d”，123 ）；  第二部分有三位，小于指定的五位，左边补两个空格  123printf（“%10f”，1.25 ）； 小数要求补足6位的，没有六位的补0,。结果为 1.250000printf（“%5.3f”，125 ）； 小数三位，整个五位，结果为1.250（小数点算一位）printf（“%3.1f”，1.25 ）；小数一位，整个三位，结果为1.3（要进行四舍五入）输出时间“%02d：%02d：%02d\n”</code></pre></font><h3 id="第三节-数据输入">第三节 数据输入</h3><font face="方正粗黑宋简体" >  防止非法输入while（~scanf（））｛｝<p>多重用例</p><pre><code>while（scanf（）!=EOF）while(scanf(“”,&amp;a),a!=-1){s[n]=a;n++}</code></pre><p>1、scanf（“a=%d，b=%d”，&amp;a，&amp;b）<font color="red"> 考试超级重点！</font></p><p>一定要记住是以<font color="red">第一部分的格式在终端输入数据</font>。考试核心为：一模一样。</p><p>在黑色屏幕上面输入的为  a=12，b=34才可以把12和34正确给a和b 。有一点不同也不行。        <br></br><br>2、scanf（“%d，%d”，x，y）；这种写法绝对错误，<font color="red">scanf的第二个部分一定要是地址！</font></p><p>scanf（“%d，%d”，&amp;x，&amp;y）；注意写成这样才可以！<font color="red">没地址一开始运行就会bug</font><br></br><br>3、特别注意指针在scanf的考察</p><pre><code>例如： int x=2；int *p=&amp;x；scanf（“%d”，x）；   错误          scanf（“%d”，p）；正确scanf（“%d”，&amp;p）；  错误         scanf（“%d”，*p）错误</code></pre><p>4、指定输入的长度 <font color="red">（考试重点）</font></p><p>终端输入：1234567</p><pre><code>scanf（“%2d%4d%d”，&amp;x，&amp;y，&amp;z）；x为12，y为3456，z为7</code></pre><p>终端输入：1 234567     由于1和2中间有空格，所以只有1位给x</p><pre><code>scanf（“%2d%4d%d”，&amp;x，&amp;y，&amp;z）；x为1，y为2345，z为67</code></pre><p>5、字符和整型是近亲：</p><pre><code>intx=97；printf（“%d”，x）；   结果为97printf（“%c”，x）；   结果为 a</code></pre><p>6、输入时候字符和整数的区别（考试<font color="red">超级重点</font>）</p><pre><code>scanf（“%d”，&amp;x）；这个时候输入1，特别注意表示的是整数1scanf（“%c”，&amp;x）；这个时候输入1，特别注意表示的是字符‘1’ASCII为整数48。</code></pre><p>补充说明：</p><p>(1)scanf函数的格式考察：</p><p>注意该函数的第二个部分是&amp;a 这样的地址，不是a；</p><p>scanf(“%d%d%*d%d”,&amp;a,&amp;b,&amp;c);跳过输入的第三个数据。</p></br>(2)putchar ,getchar 函数的考查：<p>char a = getchar() 是没有参数的，从键盘得到你输入的一个字符给变量a。</p><p>putchar(‘y’)把字符y输出到屏幕中。</p></br>(3)如何实现两个变量x ，y中数值的互换（要求背下来）<p>不可以把 x=y ,y=x; <font color="red">要用中间变量 t=x；x=y；y=t。</p><p>位运算a=a^b;b=b^a;a=a^b;</font></p><p></br>(4)如何实现保留三位小数，第四位四舍五入的程序，（要求背下来）</p><pre><code>y=（int）（x*100+0.5）/100.0   这个保留两位，对第三位四舍五入y=（int）（x*1000+0.5）/1000.0 这个保留三位，对第四位四舍五入y=（int）（x*10000+0.5）/10000.0 这个保留四位，对第五位四舍五入</code></pre><p><font color="red"> 这个有推广的意义，注意 x = （int）x </font>这样是把小数部分去掉。<br></font></p><h2 id="center-第三章-center"><center>第三章</center></h2><font face="方正粗黑宋简体" >  特别要注意：C语言中是用非0表示逻辑真的，用0表示逻辑假的。<p>C语言有构造类型，没有逻辑类型。</p><p>关系运算符号：注意&lt;=的写法，==和=的区别！（考试重点）</p><p>if只管后面一个语句，<font color="red">要管多个，请用大括号！</font></p><p>(1)关系表达式：</p><p>a、表达式的数值只能为1（表示为真），或0（表示假）。</p><p>如 9&gt;8这个关系表达式是真的，所以9&gt;8这个表达式的数值就是1。</p><p>如 7&lt;6这个关系表达式是假的，所以7&lt;6这个表达式的数值就是0</p><p></br>  b、考试最容易错的：就是int x=1,y=0,z=2;</p><p>x&lt;y&lt;z是真还是假？带入为1&lt;0&lt;2，从数学的角度出发肯定是</p><p>错的，但是如果是C语言那么就是正确的！因为要1&lt;0为假得到0，表达式就变成</p><p>了0&lt;2那么运算结果就是1，称为了真的了！</p><p></br> c、等号和赋值的区别！一定记住“=”就是赋值，“= =”才是等号。虽然很多人可以背</p><p>诵，但我依然要大家一定好好记住，否则，做错了，我一定会强烈的鄙视你！</p><p>(2)逻辑表达式：</p><p><font color="red">核心：表达式的数值只能为1（表示为真），或0（表示假）。</font></p><p>(a)  共有&amp;&amp;   ||   ！ 三种逻辑运算符号。</p><p>(b) ！&gt;&amp;&amp;&gt;||  优先的级别。</p><p>©  注意短路现象。考试比较喜欢考到。详细请见书上例子，一定要会做例1和例2</p><p>(d)  表示 x 小于0大于10的方法。</p><blockquote><p><code>0&lt;x&lt;10是不行的（一定记住）。是先计算0&lt;x 得到的结果为1或则0；再用0，或1与10比较得到的总是真（为1）。所以一定要用 (0&lt;x)&amp;&amp;(x&lt;10)表示比0大比10小.</code></p></blockquote><p>(3)if 语句</p><p>a、else 是与最接近的if且没有else的语句匹配。</p><p>b、交换的程序写法：t=x；x=y；y=t；</p><p>c、if（a&lt;b）t=a;a=b;b=t;</p><p>if（a&lt;b）{t=a;a=b;b=t;}两个的区别，考试多次考到了！</p><p>d、单独的if语句：if（a&lt;b）t=a；</p><p>标准的if语句：if（a&lt;b）min=a；</p><p>else  min=b；</p><p>嵌套的if语句：if（a&lt;b）</p><p>if（b&gt;c）printf(“ok!”)；</p><p>多选一的if语句if（a= =t）printf(“a”);</p><p>else if（b= =t）printf(“b”);</p><p>else if（c= =t）printf(“c”);</p><p>else pritnf(“d”);</p><p>通过习题，要熟悉以上几种if语句！</p><p>经典考题：结合上面四种if语句题型做题，答错了，请自行了断！预备，开始！</p><p>int  a=1，b=0；</p><p>if（！a）b++；</p><p>else if（a= =0）</p><p>if（a）b+=2；</p><p>else b+=3；请问b的值是多少？</p><p>如果没有看懂题目，你千万不要自行了断，这样看得懂不会做的人才会有理由的活着。</p><p>正确的是b为3。</p><p>int  a=1，b=0；</p><p>if（！a）b++；    是假的不执行</p><p>elseif（a= =0）    是假的执行</p><p>if（a）b+=2； 属于else if的嵌套if语句，不执行。</p><p>elseb+=3；        if-else-if语句没有一个正确的，就执行else的语句！</p><p></br>(4)条件表达式：</p><p>表达式1 ？表达式2 ：表达式3</p><p>a、考试口诀：<font color="red">真前假后</font>。</p><p>b、注意是当表达式1的数值是非0时，才采用表达式2的数值做为整个运算结果，当表达式1的数值为0时，就用表达式3的数值做为整个的结果。</p><p>c、int a=1，b=2，c=3，d=4，e=5；</p><p>k=a&gt;b？c：d&gt;e？d：e;求k的数值时多少？  答案为san</p><p></br>(5)switch语句：</p><p>(a) 执行的流程一定要弄懂！上课时候详细的过程讲了，请自己一定弄懂!</p><p>(b)注意有break 和没有break的差别，书上的两个例子，没有break时候，只要有一个case匹配了，剩下的都要执行，有break则是直接跳出了swiche语句。break在C语言中就是分手，一刀两断的意思。</p><p>© switch只可以和break一起用，不可以和continue用。</p><p><font color="red">(d) switch(x)   x：是整型常量，字符型常量，枚举型数据。</p><p>{case 1: ….     不可以是变量。</p><p>case 2: ….</p><p>}</font></p><p>(e)switch是必考题型，请大家一定要完成书上的课后的switch的习题。<br></font></p><p>## <center>第四章</center><br><font face="方正粗黑宋简体" ><br>(1)三种循环结构：</p><p>(a)for（） ； while()；  do- while()三种。</p><p>(b)for循环当中必须是两个分号，千万不要忘记。</p><p>©写程序的时候一定要注意，循环一定要有结束的条件，否则成了死循环。</p><p>d) do-while()循环的最后一个while();的分号一定不能够丢。（当心上机改错），<font color="red">do－while</font>循环是至少执行一次循环。</p><p></br>(2) break 和  continue的差别</p><p>记忆方法：</p><p>break：是<font color="red">打破</font>的意思，（破了整个循环）所以看见break就退出整个一层循环。</p><p>continue： 是继续的意思，（继续循环运算），但是要结束本次循环，就是循环体内剩下的语句不再执行，跳到循环开始，然后判断循环条件，进行新一轮的循环。</p><p></br>(3)嵌套循环</p><p>就是有循环里面还有循环，这种比较复杂，要一层一层一步一步耐心的计算，一般记住两层是处理二维数组的。</p><p></br>(4)while（（c=getchar()）!=’\n’） 和</p><p>while（c=getchar() !=’\n’）的差别</p><p>先看a = 3 != 2  和 （a=3）！=2 的区别：</p><p>（！=号的级别高于=号 所以第一个先计算 3！=2） 第一个a的数值是得到的1；第二个a的数值是3。</p><p>考试注意点: 括号在这里的重要性。</p><p></br>(5)每行输出五个的写法：</p><pre><code>for（i=0；i&lt;=100；i++）{printf（“%d”，i）； if(（i+1)%5==0)printf(“\n”); 如果i是从1开始的话，就是if(i%5==0)printf(“\n”);}</code></pre><p></br>(6)如何整除一个数：i%5==0表示整除5</p><p>I%2==0表示整除2，同时表示是偶数！</p><p></br>(7)输入123，输出<font color="red">321逆序输出</font>数据</p><pre><code>int i=123;       while（i！=0）{  printf（“%d”，i%10）；i=i/10;}</code></pre><p></br>(8)for只管后面一个语句：</p><pre><code>inti=3；for（i=3；i&lt;6;i++）：printf(“#”)：                请问最终打印几个#号？答案为一个！</code></pre><p></br>(9)不停的输入，直到输入# 停止输入！      不停的输入，直到输入$停止输入！</p><p>while( (x=getchar())!=’ # ’ )                 while( (x=getchar())!=’$ ’ )</p><p>不停的输入，直到遇到？停止输入！</p><p>while((x=getchar())!=’ ? ’)   解说：一定要注意这种给出了条件，然后如何去写的方法！</p><p></br>(10)for循环和switch语句的和在一起考题！</p><p></br>(11)<font color="red">多次出现的考题：</font></p><p>intk=1                       int k=1；</p><p>while（- -k）；                while（k–）；</p><p>printf（“%d”，k）；           printf（“%d”，k）；</p><p><font color="red">结果为0                     结果为-1</font><br></font></p><h2 id="center-第五章-center"><center>第五章</center></h2><font face="方正粗黑宋简体" >  1、函数：是具有一定功能的一个程序块，是C语言的基本组成单位。<p>2、函数不可以嵌套定义。但是可以嵌套调用。</p><p>3、函数名缺省返回值类型，默认为 int。</p><p>4、C语言由函数组成，但有且仅有一个main函数！是程序运行的开始！</p><p>5、如何判断a是否为质数：背诵这个程序！</p><pre><code>void  iszhishu（ int a ）{  for（i=2；i&lt;a/2；i++）    if(a%i==0) printf（“不是质数”）;   printf(“是质数！”)；}</code></pre><p>6、<font color="red">如何求阶层</font>：n! 背诵这个程序！</p><pre><code>   int fun(int n){  int p=1;for(i=1;i&lt;=n;i++) p=p*i;return p;}</code></pre><p>7、函数的参数可以是常量，变量，表达式，甚至是<font color="red">函数调用</font>。</p><pre><code>  add（int x，int y）{returnx+y；}  main（）{ int sum； sum=add（add（7,8），9）；请问sum的结果是多少？ 结果为24}</code></pre><p>8、 函数的参数，返回数值（示意图）：</p><p>9、一定要注意参数之间的传递</p><p>实参和形参之间 传数值，和传地址的差别。（考试的重点）</p><p>传<font color="red">数值</font>的话，形参的变化<font color="red">不会改变</font>实参的变化。</p><p>传<font color="red">地址</font>的话，形参的变化就会<font color="red">有可能改变</font>实参的变化。</p><p></br>10、函数声明的考查：</p><p>一定要有：函数名，函数的返回类型，函数的参数类型。<font color="red">不一定要有：形参的名称。</font></p><p>填空题也可能会考到！以下是终极难度的考题。打横线是函数声明怎么写！</p><pre><code>int*fun（int a[] , int b[]）             {…………..</code></pre><p>}已经知道函数是这样。这个函数的正确的函数声明怎么写？<br><u><br>int *fun（int *a , int *b）               这里是函数声明的写法，注意数组就是指针</p><p>int *fun（int a[] , int b[]）              这种写法也是正确的</p><p>int *fun（int b[] , int c[]）              这种写法也是正确的，参数的名称可以随便写</p><p>int *fun（int * , int *）                这种写法也是正确的，参数的名称可以不写 </u></p><p></br>11、要求掌握的库函数：</p><p>a、库函数是已经写好了函数，放在仓库中，我们只需要如何去使用就可以了！</p><p>b、以下这些库函数经常考到，所以要背诵下来。</p><p>abs()、 sqrt()、fabs()、pow()、sin()  其中pow(a，b)是重点。23是由pow(2，3)表示的。</p><p></font></p><h2 id="center-第六章-center"><center>第六章</center></h2><font face="方正粗黑宋简体" >  <font color="red">指针一定要初始化NULL<p>动态存储</font></p><pre><code>   #include&lt;malloc&gt;  int *pP=(int*)malloc(sizeof(int)*n)</code></pre><p><u>指针变量的本质</u>是用来放地址，<u>而一般的变量</u>是放数值的。</p><p>1、int *p 中   <em>p和p的差别：简单说</em>p是数值，p是地址！</p><p>*p可以当做变量来用；*的作用是取后面地址p里面的数值</p><p>p是当作地址来使用。可以用在scanf函数中：scanf（“%d”，p）；</p><p></p><p></br>2、*p++ 和 （*p）++的之间的差别：改错题目中很重要！考试超级重点</p><p>*p++是 地址会变化。      口诀：取当前值，然后再移动地址！</p><p>（*p）++ 是数值会要变化。 口诀：取当前值，然后再使数值增加1。</p><p><strong>例题：</strong></p><pre><code>int *p,a[]={1,3,5,7,9};      p=a;      请问*p++和（*p）++的数值分别为多少？</code></pre><p>*p++：  这个本身的数值为1。由于是地址会增加一，所以指针指向数值3了。</p><p>（*p）++ 这个本身的数值为1。由于有个++表示数值会增加，指针不移动，但数值1由于自加了一次变成了2。</p><p></br>3、二级指针：</p><p>*p：一级指针：存放变量的地址。</p><p>**q：二级指针：存放一级指针的地址。</p><p>常考题目：   int x=7；</p><p>int*p=&amp;x，**q=p；</p><p>问你：*p为多少？*q为多少？**q为多少？</p><p>7          p         7</p><p>再问你：**q=&amp;x的写法可以吗？</p><p>不可以，因为二级指针只能存放一级指针的地址。</p><p></br>4、三名主义：（考试的重点）</p><p>数组名：表示第一个元素的地址。数组名不可以自加，他是地址常量名。（考了很多次）</p><p>函数名：表示该函数的入口地址。</p><p>字符串常量名：表示第一个字符的地址。</p><p></br>5、移动指针（经常加入到考试中其他题目综合考试）</p><p>char *s=“meikanshu”</p><p>while（*s）{printf（“%c”，*s）；s++；}</p><p>这个s首先会指向第一个字母m然后通过循环会一次打印出一个字符，s++是地址移动，打印了一个字母后，就会移动到下一个字母！</p><p></br>6、<font color="red">指针变量两种初始化（一定要看懂）</font></p><p>方法一：int a=2，*p=&amp;a；(定义的同时初始化)</p><p>方法二：int a=2，*p；　 (定义之后初始化)</p><p>p=&amp;a；</p><p></br>7、<font color="red">传数值和传地址（每年必考好多题目）</font></p><pre><code>void fun（int a，intb）                    void fun（int *a，int *b）            { int t ；                                       { int t ；  t=a；a=b；b=t；                                  t=*a；*a=*b；*b=t；}                                               }main（）                                     main（）{ int x=1，y=3，                             { int x=1，y=3，  fun（x，y）；                                 fun（&amp;x，&amp;y）  printf（“%d，%d”，x，y）；                    printf（“%d，%d”，x，y）；}                                             }这个题目答案是1和3。                        这个题目的答案就是3和1。传数值，fun是用变量接受，所以fun中     传地址，fun用指针接受！这个时候fun的交换不会影响到main中的x和y 。        中的交换，就会影响到main中的x和y。传数值，形参的变化不会影响实参。          传地址形参的变化绝大多数会影响到实参！</code></pre><p></p><p>8、函数返回值是地址，一定注意这个*号（上机考试重点）</p><pre><code>int *fun（int*a，int *b）   可以发现函数前面有个*，这个就说明函数运算结果是地址                            { if（*a&gt;*b）returna；     return a 可以知道返回的是a地址。  else return b；                                                                        }main（）{ int x=7，y=8，*max；  max = fun（&amp;x，&amp;y）；      由于fun（&amp;x，&amp;y）的运算结果是地址，所以用max来接收。  printf（“%d，%d”，）   }                                             </code></pre><p>9、考试重要的话语：</p><p>指针变量是存放地址的。并且指向哪个就等价哪个，所有出现*p的地方都可以用它等价的代替。例如：int a=2，*p=&amp;a；</p><p>*p=*p+2;</p><p>(由于<em>p指向变量ａ,所以指向哪个就等价哪个，这里</em>p等价于ａ，可以相当于是a=a+2)</p><p></font></p><p></p><h2 id="center-第七章-center"><center>第七章</center></h2><font face="方正粗黑宋简体" >  数组： 存放的类型是一致的。多个数组元素的地址是连续的。<p>1、一维数组的初始化：</p><pre><code>inta[5]={1,2,3,4,5};  合法inta[5]={1,2,3, };    合法inta[]={1,2,3,4,5};   合法,常考，后面决定前面的大小！inta[5]={1,2,3,4,5,6};不合法，赋值的个数多余数组的个数了</code></pre><p>2、一维数组的定义；</p><pre><code>int a[5]；注意这个地方有一个重要考点，定义时数组的个数不是变量一定是常量。int a[5]                 合法，最正常的数组int a[1+1]               合法，个数是常量2，是个算术表达式int a[1/2+4]             合法，同样是算术表达式int x=5,int a[x];           不合法，因为个数是x，是个变量，非法的，define P 5  int a[P]       合法，define 后的的P是符号常量，只是长得像变量</code></pre><p>3、二维数组的初始化</p><pre><code>inta[2][3]={1,2,3,4,5,6};               合法，很标准的二维的赋值。inta[2][3]={1,2,3,4,5, };                合法，后面一个默认为0。inta[2][3]={{1,2,3,} {4,5,6}};           合法，每行三个。inta[2][3]={{1,2,}{3,4,5}};             合法，第一行最后一个默认为0。inta[2][3]={1,2,3,4,5,6,7};              不合法，赋值的个数多余数组的个数了。int a[2][]={1,2,3,4,5,6};                不合法，不可以缺省列的个数。int a[][3]={1,2,3,4,5,6};                合法，可以缺省行的个数。</code></pre><p><strong>补充：</strong></p><p>(1)一维数组的重要概念：</p><p>对<code>a[10]</code>这个数组的讨论。</p><p>１、a表示数组名，是第一个元素的地址，也就是元素<code>a[0]</code>的地址。（等价于&amp;a）</p><p>２、a是地址常量，所以只要出现a++，或者是a=a+2赋值的都是错误的。</p><p>３、a是一维数组名，所以它是列指针，也就是说a+1是跳一列。</p><p>对<code>a[3][3]</code>的讨论。</p><p>１、a表示数组名，是第一个元素的地址，也就是元素<code>a[0][0]</code>的地址。</p><p>２、a是地址常量，所以只要出现a++，或者是a=a+2赋值的都是错误的。</p><p>３、a是二维数组名，所以它是行指针，也就是说a+1是跳一行。</p><p>４、<code>a[0]、a[1]、a[2]</code>也都是地址常量，不可以对它进行赋值操作，同时它们都是列指针，<code>a[0]+1，a[1]+1，a[2]+1</code>都是跳一列。</p><p>５、注意a和<code>a[0] 、a[1]、a[2]</code>是不同的，它们的基类型是不同的。前者是一行元素，后三者是一列元素。</p><p></br>(2) 二维数组做题目的技巧：</p><p>如果有<code>a[3][3]={1,2,3,4,5,6,7,8,9}</code>这样的题目。</p><p>步骤一：把他们写成：　　　　　　第一列　第二列　第三列</p><pre><code>a[0]à　 1 　　 2  　　3   －&gt;第一行a[1]à   4   　　5  　　6　 —&gt;第二行a[2]à   7   　　8  　　9　 －&gt;第三行</code></pre><p>步骤二：这样作题目间很简单：</p><p><code>*(a[0]+1)</code>我们就知道是第一行的第一个元素往后面跳一列，那么这里就是<code>a[0][1]</code>元素，所以是１。</p><p><code>*(a[1]+2)</code>我们就知道是第二行的第一个元素往后面跳二列。那么这里就是<code>a[1][2]</code>元素，所以是6。</p><p>一定记住：只要是二维数组的题目，一定是写成如上的格式，再去做题目，这样会比较简单。</p><p></br>(3) 数组的初始化，一维和二维的，一维可以不写，二维第二个一定要写</p><pre><code>     int a[]={1，2} 合法。  int a[][4]={2，3，4}不合法。  但int a[4][]={2，3，4}合法。</code></pre><p>(4) 二维数组中的行指针</p><p>int a[1][2]；</p><p>其中a现在就是一个行指针，a+1跳一行数组元素。  搭配<code>（*）p[2]</code>指针</p><p>a[0]，a[1]现在就是一个列指针。a[0]+1 跳一个数组元素。搭配*p[2]指针数组使用</p><p></br>(5) 还有记住脱衣服法则：超级无敌重要</p><pre><code>   a[2]  变成   *（a+2）  a[2][3]变成 *（a+2）[3]再可以变成  *（*（a+2）+3）</code></pre><p>这个思想很重要！</p><p></p><center><b>其它考试重点</b></center><p>文件的复习方法：</p><p>把上课时候讲的文件这一章的题目要做一遍，一定要做，基本上考试的都会在练习当中。</p><p>(1)字符串的 strlen() 和 strcat（） 和strcmp（） 和strcpy（）的使用方法一定要记住。他们的参数都是地址。其中strcat（）和strcmp（）有两个参数。</p><p></p><p>(2)strlen 和 sizeof的区别也是考试的重点；</p><p></p><p>(3)define  f（x）（x<em>x）  和  define   f（x） x</em>x 之间的差别。一定要好好的注意这写容易错的地方，替换的时候有括号和没有括号是很大的区别。</p><pre><code>(4)int  *p；p= （int *）malloc（4）；p= （int *）malloc（sizeof（int））；以上两个等价</code></pre><p>当心填空题目，malloc的返回类型是 void *</p><p></p><p>(6)函数的递归调用一定要记得有结束的条件，并且要会算简单的递归题目。要会作递归的题目</p><p></p><p></br>(7)结构体和共用体以及链表要掌握最简单的。typedef考的很多，而且一定要知道如何引用结构体中的各个变量，链表中如何填加和删除节点，以及何如构成一个简单的链表，一定记住链表中的节点是有两个域，一个放数值，一个放指针。</p><pre><code>       &lt;font color=&quot;red&quot;&gt;   内存计算                  结构体                      共用体                     Int （4）char（1）double（8）     总内存 16 （最大内存为单位，存不下再开辟一个单元） 8（最大内存为单位，不停迭代） 结构体成员：结构体变量.成员 （*p）.成员  p-&gt;成员名成员为数组时输入不用&amp;其他都要只能对最低一级成员操作strcut 结构体｛成员类型成员名｝变量名列表 可以嵌套使用链表及动态链表  在成员中加个指针&lt;/font&gt;</code></pre><p>(8)函数指针的用法（*f）（）记住一个例子：</p><pre><code>　　　　　　int add(int x, int y){....} main(){ int  （*f）（）;  f=add; }</code></pre><p>赋值之后：合法的调用形式为１、add(2，3)；</p><pre><code>２、f(2，3)；３、（*f）（2，3）</code></pre><p>(9)两种重要的数组长度：</p><p>char a[]={‘a’,’b’,’c’};　　数组长度为３，字符串长度不定。sizeof(a)为３。</p><p>char <code>a[5]</code>={ ‘a’,’b’,’c’}　　数组长度为５，字符串长度３。sizeof(a)为５。</p><p>(10)scanf 和　gets的数据：</p><pre><code>如果输入的是　good  good study！那么scanf(“%s”,a); 只会接收　good.　考点：不可以接收空格。     gets(a); 会接收　good good study!　考点：可以接收空格。</code></pre><p>(11)共用体的考查：</p><pre><code>union TT{ int a;charch[2];}</code></pre><p>考点一：　sizeof (struct TT) = 4;</p><p>(12)<font color="red">“文件包含”的考查点：</font></p><pre><code>　　　    no1.c                  no2.c#include”no2.c”main(){ add(29 , 33);} int add(int a,int b){return a+b;}</code></pre><p></p><p>这里一个C语言程序是有两个文件组成，分别是no1.c， no2.c。那么no1.c中最开始有个<font color="red">#include”no2.c”他表示把第二个文件的内容给包含过来，那么no1.c中调用add()</font>函数的时候就可以了把数值传到no2.c中的被调用函数add()了。</p><p><font color="red">一个文件必须要有main</font>函数。　这句话错了。　例如：no2.c就没有。</p><p><font color="red">头文件一定是以.h结束</font>的。　这句话错了。例如：no1.c中就是<font color="red">#include”no2.c”以.c</font>结尾的。</p><p></br>(13)<font color="red">指针迷惑的考点：</font></p><pre><code>char ch[]=”iamhandsome”;char *p=ch;问你 *（p+2） 和 *p+2的结果是多少？      ‘m’       ‘k’  结果是这两个，想不通的同学请作死的想！想通为止！</code></pre><p>(14)数组中放数组一定要看懂:</p><pre><code>   int a[8]={1,2,3,4,4,3,2,2};   int b[5]={0};   b[a[3]]++   这个写法要看懂，结果要知道是什么？b[4]++,本身是0，运行完后，b[4]为1了。</code></pre><p>(15)字符串的赋值</p><p>C语言中没有字符串变量，所以用数组和指针存放字符串：</p><pre><code>char  ch[10]={“abcdefgh”};                       对char  ch[10]=“abcdefgh”;                         对char  ch[10]={‘a’,’b’,’c’,’d’,’e’,’f’,’g’,’h’};           对char  *p=“abcdefgh”;                            对char  *p;                                     对p=“abcdefgh”;char  ch[10];                    错了！数组名不可以赋值！          ch=“abcdefgh”;char  *p={“abcdefgh”};           错了！不能够出现大括号！</code></pre><p>(16)字符串赋值的函数背诵：一定要背诵，当心笔试填空题目。</p><p>把s指针中的字符串复制到t指针中的方法</p><p>1、while（ （*t=*s）！=null）{s++；t++；}  完整版本</p><p>2、while（ *t=*s ）{s++；t++；}           简单版本</p><p>3、while（ *t++=*s++）；                   高级版本</p><p></br>(17)typedef 是取别名，不会产生新的类型，他同时也是关键字</p><p>考点一：typedef int qq  那么 int x 就可以写成 qq x</p><p>考点二：typedef int *qq  那么 int *x就可以写成 qq x</p><p></br>(18)static 考点是一定会考的！复习相关的习题。</p><p>static int x；默认值为0。</p><p>int x：默认值为不定值。</p><p></br>(19)函数的递归调用一定会考！至少是2分。</p><p><font color="red">常用知识点补充</p><p>运算符</p><p>1.   优先级</p><p></p><p>2.   结合方向</p><p>自右向左：单目运算符，条件运算符，赋值运算符。</font><br></font></p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css基础知识总结</title>
      <link href="/2020/04/21/css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2020/04/21/css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><a href="http://css.cuishifeng.cn/" target="_blank" rel="noopener">css查询文档</a></p><h1>css简介</h1><ul><li>CSS 指层叠样式表 (Cascading Style Sheets)</li><li>样式定义如何显示 HTML 元素</li><li>样式通常存储在样式表中</li><li>把样式添加到 HTML 4.0 中，是为了解决内容与表现分离的问题</li><li>外部样式表可以极大提高工作效率</li><li>外部样式表通常存储在 CSS 文件中</li><li>多个样式定义可层叠为一</li></ul><blockquote><p><strong>注意</strong>：样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p></blockquote><h2 id="1-引用方式">1.引用方式</h2><h3 id="1-1-内联样式表">1.1 内联样式表</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;/head&gt;&lt;body style=&quot;background-color:#b0c4de;&quot;&gt;&lt;h1&gt;我的 CSS web 页!&lt;/h1&gt;&lt;p&gt;你好世界！这是来自 runoob 菜鸟教程的实例。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="1-2-内部样式表">1.2 内部样式表</h3><blockquote><p>内部样式，指的就是把CSS代码和HTML代码放在同一个文件中，其中CSS代码放在<code>&lt;style&gt;&lt;style/&gt;</code>标签对内。并且<code>&lt;style&gt;</code>标签是放在<code>&lt;head&gt;</code>标签内的。</p></blockquote><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;style&gt;body {background-color:#b0c4de;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;我的 CSS web 页!&lt;/h1&gt;&lt;p&gt;你好世界！这是来自 runoob 菜鸟教程的实例。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="1-3-外部样式">1.3 外部样式</h3><blockquote><p>所谓的“外部样式表”，就是把CSS代码和HTML代码都单独放在不同文件中，然后在HTML文档中使用link标签来引用CSS样式表。</p></blockquote><ul><li><strong>mystyle.css文件:</strong></li></ul><pre class=" language-language-body"><code class="language-language-body">background-color:#b0c4de;}</code></pre><ul><li><strong>html页面</strong></li></ul><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;!-- 在HTML页面中引用文件名为newfile的css文件 --&gt;&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;mystyle.css&quot;/&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;我的 CSS web 页!&lt;/h1&gt;&lt;p&gt;你好世界！这是来自 runoob 菜鸟教程的实例。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="1-4-多重样式优先级">1.4 多重样式优先级</h3><ul><li>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</li><li><strong>一般情况下，优先级如下：</strong><br>内联样式）Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式</li></ul><blockquote><p><strong>注意：</strong> 如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。</p></blockquote><h3 id="1-5-表单样式">1.5 表单样式</h3><pre><code>input[type=&quot;text&quot;]{    width:150px;    display:block;    margin-bottom:10px;    background-color:yellow;}input[type=&quot;button&quot;]{    width:120px;    margin-left:35px;    display:block;}</code></pre><h2 id="2-选择器">2.选择器</h2><p><strong>css规则</strong></p><pre><code>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:  选择器 {    样式属性1:取值1;    样式属性2:取值2;    …… </code></pre><p><strong>css 注释</strong></p><blockquote><p>以&quot; /<code>*</code>&quot; 开始, 以 &quot;<code>*</code>/ &quot;结束:</p></blockquote><pre><code>/*这是个注释*/p{text-align:center;/*这是另一个注释*/color:black;font-family:arial;}</code></pre><p><strong>css选择器</strong></p><table><thead><tr><th style="text-align:center">选择器</th><th style="text-align:center">HTML属性</th><th style="text-align:center">css</th></tr></thead><tbody><tr><td style="text-align:center">id选择器</td><td style="text-align:center">id</td><td style="text-align:center">#</td></tr><tr><td style="text-align:center">class选择器</td><td style="text-align:center">class</td><td style="text-align:center">.</td></tr></tbody></table><p><strong>id 选择器</strong></p><pre><code>&lt;body&gt;&lt;p id=&quot;para1&quot;&gt;Hello World!&lt;/p&gt;&lt;p&gt;这个段落不受该样式的影响。&lt;/p&gt;&lt;/body&gt;</code></pre><pre><code>#para1{    text-align:center;    color:red;}</code></pre><p><strong>class 选择器</strong></p><pre><code>/*所有拥有 center 类的 HTML 元素均为居中*/.center {text-align:center;}/*所有的 p 元素使用 class=&quot;center&quot; 让该元素的文本居中:*/p.center {text-align:center}</code></pre><p><strong>此外，需要注意一下：</strong></p><blockquote><p>一个标签可以同时定义多个class；<br>id也可以写成name，区别在于name是HTML中的标准，而id是XHTML中的标准，现在网页的标准都是使用id，所以大家尽量不要用name属性；</p></blockquote><h3 id="2-1-标签选择器">2.1 标签选择器</h3><pre><code>// 标签即HTML标签，比如body,div,p等div{text-align:center;}</code></pre><h3 id="2-2-属性选择器">2.2 属性选择器</h3><pre><code>/*把包含标题（title）的所有元素变为蓝色*/[title]{    color:blue;}</code></pre><h3 id="2-3-属性和值选择器">2.3 属性和值选择器</h3><p><strong>示例一：</strong></p><pre><code>/*标题title='runoob'元素的边框样式*/[title=runoob]{    border:5px solid green;}</code></pre><p><strong>示例二</strong>：</p><pre><code>/*匹配到下文中的第三个div元素*/div[title=&quot;height&quot;]{    width:100px;    height:100px;    margin-top:2px;    background:pink;&lt;br&gt;}</code></pre><pre><code>&lt;body&gt;    &lt;div title=&quot;width&quot;&gt;&lt;/div&gt;    &lt;div&gt;&lt;/div&gt;    &lt;div title=&quot;height&quot;&gt;&lt;/div&gt;&lt;/body&gt;</code></pre><h3 id="2-4-属性和值的选择器-多值">2.4 属性和值的选择器 - 多值</h3><pre><code>/*指定值的title属性的元素样式的例子，使用（~）分隔属性和值:*/[title~=hello] { color:blue; }/*适用如下：*/&lt;h1 title=&quot;hello world&quot;&gt;Hello world&lt;/h1&gt;&lt;p title=&quot;student hello&quot;&gt;Hello CSS students!&lt;/p&gt;/*指定值的lang属性的元素样式的例子，使用（|）分隔属性和值*/[lang|=en] { color:blue; }/*适用如下：*/&lt;p lang=&quot;en&quot;&gt;Hello!&lt;/p&gt;&lt;p lang=&quot;en-us&quot;&gt;Hi!&lt;/p&gt;&lt;p lang=&quot;en-gb&quot;&gt;Ello!&lt;/p&gt;</code></pre><h3 id="2-5-子选择器">2.5 子选择器</h3><blockquote><ul><li>子元素选择器，就是选中某个元素下的子元素(包括子、孙)，然后对该子元素设置CSS样式。<br><strong>说明：</strong><br>父元素与子元素必须用空格隔开，从而表示选中某个元素下的子元素。</li></ul></blockquote><p><strong>语法：</strong></p><pre><code>父选择器 子元素选择{    样式属性1:取值1;    样式属性2:取值2;    ……}</code></pre><h3 id="2-6-相邻选择器">2.6 相邻选择器</h3><blockquote><p>相邻选择器，就是选中该元素的下一个兄弟元素，在这里注意一点，相邻选择器的操作对象是该元素的同级元素。</p></blockquote><p><strong>语法：</strong></p><pre><code>元素A + 元素A相邻兄弟元素{    样式属性1:取值1;    样式属性2:取值2;    ……}</code></pre><p><strong>示例一：</strong></p><pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;    &lt;title&gt;&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        /*选择“id为lv的元素”的相邻的下一个兄弟元素div，也就是第3个div元素。*/        #lv+div{color:red;}    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;111&lt;/div&gt;    &lt;div id=&quot;lv&quot;&gt;        &lt;p&gt;222&lt;/p&gt;    &lt;/div&gt;    &lt;div&gt;333&lt;/div&gt;    &lt;div&gt;444&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>示例二：</strong></p><pre><code>/*这个只能选择到下面第二行的那个p元素  最后一个不满足紧接在div元素后面这个条件*/div+.box{width:100px; height:100px; background:pink;} 　&lt;div&gt;&lt;/div&gt;    &lt;p class=&quot;box&quot;&gt;&lt;/p&gt;    &lt;p class=&quot;box&quot;&gt;&lt;/p&gt;    &lt;div&gt;&lt;/div&gt;    &lt;p&gt;&lt;/p&gt;    &lt;p class=&quot;box&quot;&gt;&lt;/p&gt;</code></pre><h3 id="2-7-群组选取">2.7 群组选取</h3><blockquote><ul><li>群组选择器，就是同时对几个选择器进行相同的操作。<br><strong>说明：</strong><br>对于群组选择器，两个选择器之间必须用“,”（英文逗号）隔开，不然群组选择器无法生效。</li></ul></blockquote><p><strong>语法：</strong></p><pre><code>选择器A,选择器B,选择器C{    样式属性1:取值1;    样式属性2:取值2;    ……}</code></pre><p><strong>示例一：</strong></p><pre><code>/*同时匹配到下文中的div标签和id为box的p标签*/div,#box{width:100px; height:100px; background:#000;} &lt;div&gt;&lt;/div&gt;&lt;p id=&quot;box&quot;&gt;&lt;/p&gt;</code></pre><h3 id="2-8-伪类选择器-hover">2.8 伪类选择器(:hover)</h3><blockquote><p>:hover在鼠标移到链接上时添加的特殊样式。<br><strong>提示:</strong> :hover 选择器器可用于所有元素，不仅是链接。</p></blockquote><p><strong>示例一：</strong></p><pre><code>img:hover{border:1px solid gray;}</code></pre><h3 id="2-9-CSS-Background-背景">2.9 CSS Background(背景)</h3><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center">background-color</td><td style="text-align:center">背景颜色</td><td style="text-align:center">body {background-color:#b0c4de;}</td></tr><tr><td style="text-align:center">background-image</td><td style="text-align:center">背景图像</td><td style="text-align:center">body {background-image:url(‘paper.gif’);}</td></tr></tbody></table><blockquote><p><strong>background-image</strong> 属性描述了元素的背景图像.<br>默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体.</p></blockquote><p><strong>页面背景图片设置实例:</strong></p><pre><code>body {background-image:url('paper.gif');}</code></pre><blockquote><p>默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。<br>一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，</p></blockquote><pre><code>body{background-image:url('gradient2.png');}</code></pre><blockquote><p>如果图像只在水平方向平铺 (repeat-x), 页面背景会更好些:</p></blockquote><pre><code>body{background-image:url('gradient2.png');background-repeat:repeat-x;}</code></pre><blockquote><p>让背景图像不影响文本的排版（如果你不想让图像平铺，你可以使用</p></blockquote><pre><code>background-repeat属性）:body{background-image:url('img_tree.png');background-repeat:no-repeat;}</code></pre><blockquote><p>以上实例中，背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，我们可以改变图像的位置。<br>可以利用 background-position 属性改变图像在背景中的位置:</p></blockquote><pre><code>body{background-image:url('img_tree.png');background-repeat:no-repeat;background-position:right top;}</code></pre><h2 id="3-CSS-Text-文本">3.CSS Text(文本)</h2><h3 id="3-1-文本颜色">3.1 文本颜色</h3><pre><code>/*颜色的名称*/body {color: red;}/*十六进制值*/h1 {color: #00ff00;}/*一个RGB值*/h2 {color:rgb(255,0,0);}</code></pre><h3 id="3-2-字体颜色-color">3.2 字体颜色(color)</h3><pre><code>p {color:red;}</code></pre><h3 id="3-3-字体样式-Font">3.3 字体样式(Font)</h3><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">font-family</td><td style="text-align:center">字体类型</td></tr><tr><td style="text-align:center">font-size</td><td style="text-align:center">字体大小</td></tr><tr><td style="text-align:center">font-weight</td><td style="text-align:center">字体粗细</td></tr><tr><td style="text-align:center">font-style</td><td style="text-align:center">字体斜体</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">颜色</td></tr></tbody></table><h3 id="3-4-字体类型-font-family">3.4 字体类型(font-family)</h3><blockquote><p>默认情况下，浏览器的字体是宋体。中文字体常用的有宋体、微软雅黑，英文字体比较常用的是Times New Roman、Arial。</p></blockquote><h3 id="3-5-字体大小-font-size">3.5 字体大小(font-size)</h3><blockquote><p>font-size的属性值可以有两种方式，一种是使用关键字(实际开发中，比较少使用这种方式来表达字体大小，一般都是采用像素作为单位的数值)；二是使用像素做单位的数值。</p></blockquote><pre><code>p {font-size:15px;}</code></pre><blockquote><p>px全称“pixel”（像素）。px就是一张图片中最小的点，或者是计算机屏幕最小的点。</p></blockquote><h3 id="3-6-字体粗细-font-weight">3.6 字体粗细(font-weight)</h3><blockquote><p>字体粗细和字体大小（font-size）是不一样的，粗细指的是字体的“肥胖”，大小指的是高和宽。<br>粗细值可以取关键字（常用normal和bold）和100~900的数值（不建议使用数值）。</p></blockquote><table><thead><tr><th style="text-align:center">font-weight属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">normal</td><td style="text-align:center">默认值，正常体。相当于数值400</td></tr><tr><td style="text-align:center">lighter</td><td style="text-align:center">较细</td></tr><tr><td style="text-align:center">bold</td><td style="text-align:center">较粗。相当于数值700</td></tr><tr><td style="text-align:center">bolder</td><td style="text-align:center">很粗（其实效果跟bold差不多）</td></tr></tbody></table><h3 id="3-7-字体斜体-font-style">3.7 字体斜体(font-style)</h3><table><thead><tr><th style="text-align:center">font-style属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">normal</td><td style="text-align:center">默认值，正常体</td></tr><tr><td style="text-align:center">italic</td><td style="text-align:center">斜体，这是一个属性</td></tr><tr><td style="text-align:center">oblique</td><td style="text-align:center">将字体倾斜，将没有斜体变量（italic）的特殊字体，要应用oblique</td></tr></tbody></table><h2 id="4-文本样式-Text">4.文本样式(Text)</h2><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">text-decoration</td><td style="text-align:center">下划线、删除线、顶划线</td></tr><tr><td style="text-align:center">text-transform</td><td style="text-align:center">文本大小写</td></tr><tr><td style="text-align:center">font-varient</td><td style="text-align:center">将英文文本转换为“小型”大写字母</td></tr><tr><td style="text-align:center">text-indent</td><td style="text-align:center">段落首行缩进</td></tr><tr><td style="text-align:center">text-align</td><td style="text-align:center">文本水平对齐方式</td></tr><tr><td style="text-align:center">line-height</td><td style="text-align:center">行高</td></tr><tr><td style="text-align:center">letter-spacing</td><td style="text-align:center">字距</td></tr><tr><td style="text-align:center">word-spacing</td><td style="text-align:center">词距</td></tr></tbody></table><h3 id="4-1-下划线、删除线、顶划线-text-decoration">4.1 下划线、删除线、顶划线(text-decoration)</h3><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">none</td><td style="text-align:center">默认值，可以用这个属性值也可以去掉已经有下划线或删除线或顶划线的样式</td></tr><tr><td style="text-align:center">underline</td><td style="text-align:center">下划线，在HTML中使用<code>&lt;u&gt;</code>表示。一般用于文章的重点标明。</td></tr><tr><td style="text-align:center">line-through</td><td style="text-align:center">删除线，在HTML中使用<code>&lt;s&gt;</code>表示。一般出现在电子商务网站中用于促销。</td></tr><tr><td style="text-align:center">overline</td><td style="text-align:center">顶划线</td></tr></tbody></table><blockquote><p>text-decoration 属性用来设置或删除文本的装饰。<br>从设计的角度看 text-decoration属性主要是用来删除链接的下划线：</p></blockquote><pre><code>a {text-decoration:none;}/*眉题（上划线）*/h1 {text-decoration:overline;}/*贯穿线*/h1 {text-decoration:line-through;}/*下划线*/h1 {text-decoration:underline;}</code></pre><h3 id="4-2-文本大小写转换-text-transform">4.2 文本大小写转换(text-transform)</h3><blockquote><p>文本转换属性是用来指定在一个文本中的大写和小写字母。<br>可用于所有字句变成大写或小写字母，或每个单词的首字母大写。</p></blockquote><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">none</td><td style="text-align:center">默认值，无转换发生</td></tr><tr><td style="text-align:center">uppercase</td><td style="text-align:center">转换成大写</td></tr><tr><td style="text-align:center">lowercase</td><td style="text-align:center">转换成小写</td></tr><tr><td style="text-align:center">capitalize</td><td style="text-align:center">将每个英文单词的首字母转换成大写，其余无转换发生</td></tr></tbody></table><pre><code>/*大写字母*/p.uppercase {text-transform:uppercase;}/*小写字母*/p.lowercase {text-transform:lowercase;}/*大写字母:首字母大写 This is some text. -- &gt;This Is Some Text. */p.capitalize {text-transform:capitalize;}</code></pre><h3 id="4-3-文本首行缩进-text-indent">4.3 文本首行缩进(text-indent)</h3><blockquote><p>文本缩进属性是用来指定文本的第一行的缩进。text-indent的属性值应该是字体font-size属性值的两倍。</p></blockquote><pre><code>/*缩进*/p {text-indent: 50px}</code></pre><h3 id="4-4-文本水平对齐-text-align">4.4 文本水平对齐(text-align)</h3><pre><code>/*默认值，左对齐*/p.main {text-align:left;}/*居中对齐*/body {text-align:center;}/*右对齐*/p.date {text-align:right;}</code></pre><h3 id="4-5-文本行高-text-height">4.5 文本行高(text-height)</h3><blockquote><p>很多书本上称line-height为行间距，这是不严谨的叫法。行高，顾名思义就是“一行的高度”，而行间距指的是“两行文本之间的距离”，大家稍微想一下就知道这是两个不一样的概念。</p></blockquote><pre><code>/*行高度设置*/p {text-height: 20px}</code></pre><h3 id="4-6-字符间距-letter-spacing">4.6 字符间距(letter-spacing)</h3><blockquote><p>一个中文算一个字，一个英文字母也叫一个字。</p></blockquote><pre><code>&lt;style&gt;h1 {letter-spacing:2px;}h2 {letter-spacing:-3px;}&lt;/style&gt;</code></pre><h3 id="4-7字间距-word-spacing">4.7字间距(word-spacing)</h3><blockquote><p>定义词间距，以空格为基准进行调节，如果多个单词被连在一起，则被word-spacing视为一个单词；如果汉字被空格分隔，则分隔的多个汉字就被视为不同的单词，word-spacing属性此时有效。</p></blockquote><pre><code>p { word-spacing:30px;}</code></pre><h2 id="5-边框-Border">5.边框(Border)</h2><p><a href="https://www.runoob.com/css/css-border.html" target="_blank" rel="noopener">详见参考</a></p><p><strong>边框样式(border-style)</strong><br><a href="https://www.runoob.com/try/try.php?filename=trycss_border-style" target="_blank" rel="noopener">详见参考</a><br><strong>边框宽度(border-width)</strong><br><a href="https://www.runoob.com/try/try.php?filename=trycss_border-width" target="_blank" rel="noopener">详见参考</a><br><strong>边框颜色(border-color)</strong></p><pre><code>p.one {    border-style:solid;    border-color:red;}p.two {    border-style:solid;    border-color:#98bf21;}</code></pre><h3 id="5-1-边框简写-border">5.1 边框简写(border)</h3><pre><code>/*正常写法*/border-width:5px;border-style:solid;border-color:red;/*简写等效于如上*/border:5px solid red;</code></pre><blockquote><p>对于border:1px solid gray;这种简洁写法，第一个值指的是框的大小（border-width），第二个值指的是框的样式（border-style），第三个值指的是框的颜色（border-color）。</p></blockquote><h2 id="6-背景-background">6.背景(background)</h2><p><a href="https://www.runoob.com/css/css-background.html" target="_blank" rel="noopener">详见参考</a><br><a href="http://www.lvyestudy.com/les_cj/cj_6.3.aspx" target="_blank" rel="noopener">详见参考</a></p><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">background-color</td><td style="text-align:center">定义背景颜色</td></tr><tr><td style="text-align:center">background-image</td><td style="text-align:center">定义背景图像的路径</td></tr><tr><td style="text-align:center">background-repeat</td><td style="text-align:center">定义背景图像显示方式，例如纵向平铺、横向平铺</td></tr><tr><td style="text-align:center">background-position</td><td style="text-align:center">定义背景图像在元素哪个位置</td></tr><tr><td style="text-align:center">background-attachment</td><td style="text-align:center">定义背景图像是否随内容而滚动</td></tr></tbody></table><h3 id="6-1-背景颜色-background-color">6.1 背景颜色(background-color)</h3><pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;    &lt;title&gt;background-color属性&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        /*设置所有div元素的共同样式*/        div {width:100px;height:60px;        }        /*设置3个div元素的个别样式*/        #div1{background-color:red;}        #div2{background-color: #F3DE3F;}        #div3{background-color: #0AF7FB;}    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;div1&quot;&gt;背景颜色值为red&lt;/div&gt;    &lt;div id=&quot;div2&quot;&gt;背景颜色值为#F3DE3F &lt;/div&gt;    &lt;div id=&quot;div3&quot;&gt;背景颜色值为#0AF7FB &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="6-2-color和background-color区别">6.2 color和background-color区别</h3><pre><code>#p1 {    width:290px;    /*指文字颜色*/    color:white;    /*背景色*/    background-color:red;}</code></pre><h3 id="6-3-背景图像-background-image">6.3 背景图像(background-image)</h3><blockquote><p>默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体.<br>页面背景图片设置实例:</p></blockquote><pre><code>body {background-image:url('paper.gif');}</code></pre><blockquote><p>默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。<br>一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，</p></blockquote><pre><code>&lt;style type=&quot;text/css&quot;&gt;#div1 {    /*给某个元素设置背景图像，元素要有一定的宽度和高度，背景图片才会显示出来。*/    width:143px;    height:220px;    background-image:url(&quot;piece.jpg&quot;);}&lt;/style&gt;</code></pre><h3 id="6-4-图像显示方式-background-repeat">6.4 图像显示方式(background-repeat)</h3><p><a href="http://www.lvyestudy.com/les_cj/cj_6.5.aspx" target="_blank" rel="noopener">详见参考</a></p><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">no-repeat</td><td style="text-align:center">表示不平铺</td></tr><tr><td style="text-align:center">repeat</td><td style="text-align:center">默认值，表示在水平方向（x轴）和垂直方向（y轴）同时平铺</td></tr><tr><td style="text-align:center">repeat-x</td><td style="text-align:center">表示在水平方向（x轴）平铺</td></tr><tr><td style="text-align:center">repeat-y</td><td style="text-align:center">表示在垂直方向（y轴）平铺</td></tr></tbody></table><blockquote><p>如果图像只在水平方向平铺 (repeat-x), 页面背景会更好些:</p></blockquote><pre><code>body {background-image:url('gradient2.png');background-repeat:repeat-x;}</code></pre><blockquote><p>让背景图像不影响文本的排版（如果你不想让图像平铺，你可以使用background-repeat 属性）:</p></blockquote><pre><code>body{background-image:url('img_tree.png');background-repeat:no-repeat;}</code></pre><blockquote><p>以上实例中，背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，我们可以改变图像的位置。<br>可以利用 background-position 属性改变图像在背景中的位置:</p></blockquote><pre><code>body {background-image:url('img_tree.png');background-repeat:no-repeat;background-position:right top;}</code></pre><h3 id="6-5-背景图像位置-background-position">6.5 背景图像位置(background-position)</h3><blockquote><p>背景位置属性用于设置背景图像的位置，这个属性只能应用于块级元素和替换元素。其中替换元素包括img、input、textarea、select和object。</p></blockquote><pre><code>/**/background-positon:像素值/关键字;</code></pre><h3 id="6-6-像素值">6.6 像素值</h3><pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;    &lt;title&gt;background-position属性&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        #div1 {            width:400px;            height:300px;            border:1px solid gray;            background-image:url(&quot;../App_images/lesson/run_cj/one piece.jpg&quot;);            background-repeat:no-repeat;            background-position:80px 40px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="6-7-关键字">6.7 关键字</h3><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">top left</td><td style="text-align:center">左上</td></tr><tr><td style="text-align:center">top center</td><td style="text-align:center">靠上居中</td></tr><tr><td style="text-align:center">top right</td><td style="text-align:center">右上</td></tr><tr><td style="text-align:center">left center</td><td style="text-align:center">靠左居中</td></tr><tr><td style="text-align:center">center center</td><td style="text-align:center">正中</td></tr><tr><td style="text-align:center">right center</td><td style="text-align:center">靠右居中</td></tr><tr><td style="text-align:center">bottom left</td><td style="text-align:center">左下</td></tr><tr><td style="text-align:center">bottom center</td><td style="text-align:center">靠下居中</td></tr><tr><td style="text-align:center">bottom right</td><td style="text-align:center">右下</td></tr></tbody></table><h3 id="6-8-背景固定样式-background-attachment">6.8 背景固定样式(background-attachment)</h3><blockquote><p>设置背景图像是随对象滚动还是固定不动。</p></blockquote><pre><code>/*scroll表示背景图像随对象滚动而滚动，是默认选项；fixed表示背景图像固定在页面不动，只有其他的内容随滚动条滚动。*/background-attachment:scroll/fixed;</code></pre><h2 id="7-超链接-Link">7.超链接(Link)</h2><h3 id="7-1-链接样式">7.1 链接样式</h3><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">a:link</td><td style="text-align:center">定义a元素未访问时的样式</td></tr><tr><td style="text-align:center">a:visited</td><td style="text-align:center">定义a元素访问后的样式</td></tr><tr><td style="text-align:center">a:hover</td><td style="text-align:center">定义鼠标经过显示的样式</td></tr><tr><td style="text-align:center">a:active</td><td style="text-align:center">定义鼠标单击激活时的样式</td></tr></tbody></table><pre><code>a:link {color:#000000;}      /* 未访问链接*/a:visited {color:#00FF00;}  /* 已访问链接 */a:hover {color:#FF00FF;}  /* 鼠标移动到链接上 */a:active {color:#0000FF;}  /* 鼠标点击时 *//*注意： a:hover 必须在 a:link 和 a:visited 之后，需要严格按顺序才能看到效果。*//*注意： a:active 必须在 a:hover 之后。*/</code></pre><h3 id="7-2-文本修饰">7.2 文本修饰</h3><pre><code>/*text-decoration 属性主要用于删除链接中的下划线：*/a:link {text-decoration:none;}a:visited {text-decoration:none;}a:hover {text-decoration:underline;}a:active {text-decoration:underline;}</code></pre><h3 id="7-3-背景颜色">7.3 背景颜色</h3><pre><code>a:link {background-color:#B2FF99;}a:visited {background-color:#FFFF85;}a:hover {background-color:#FF704D;}a:active {background-color:#FF704D;}</code></pre><h2 id="8-图片样式">8.图片样式</h2><h3 id="8-1-图片大小">8.1 图片大小</h3><pre><code>/*语法*/width:像素值;height:像素值;</code></pre><h3 id="8-2-图片边框-border">8.2 图片边框(border)</h3><pre><code>/*语法*/border-width:像素值;border-style:属性值border-color:颜色值/*如上简写*/border:1px solid red;</code></pre><h3 id="8-3-图片水平对齐-text-align">8.3 图片水平对齐(text-align)</h3><blockquote><p>text-align一般只用在两个地方：文本水平对齐和图片水平对齐。也就是说，text-align只对文本和img标签有效，对其他标签无效。</p></blockquote><pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;    &lt;title&gt;图片水平对齐&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        div        {            width:300px;            height:80px;            border:1px solid gray;        }        .div_img1{text-align:left;}        .div_img2{text-align:center;}        .div_img3{text-align:right;}        img{width:60px;height:60px;}    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;div_img1&quot;&gt;        &lt;img src=&quot;../App_images/lesson/run_cj/cartoongirl.gif&quot; alt=&quot;&quot;/&gt;    &lt;/div&gt;    &lt;div class=&quot;div_img2&quot;&gt;        &lt;img src=&quot;../App_images/lesson/run_cj/cartoongirl.gif&quot; alt=&quot;&quot;/&gt;    &lt;/div&gt;    &lt;div class=&quot;div_img3&quot;&gt;        &lt;img src=&quot;../App_images/lesson/run_cj/cartoongirl.gif&quot; alt=&quot;&quot;/&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="8-4-图片垂直对齐-vertical-align">8.4 图片垂直对齐(vertical-align)</h3><table><thead><tr><th style="text-align:center">vertical-align属性取值</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:center">top</td><td style="text-align:left">顶部对齐</td></tr><tr><td style="text-align:center">middle</td><td style="text-align:left">中部对齐</td></tr><tr><td style="text-align:center">baseline</td><td style="text-align:left">基线对齐</td></tr><tr><td style="text-align:center">bottom</td><td style="text-align:left">底部对齐</td></tr></tbody></table><h3 id="8-5-文字环绕-float">8.5 文字环绕(float)</h3><table><thead><tr><th style="text-align:center">loat属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">left</td><td style="text-align:center">元素向左浮动</td></tr><tr><td style="text-align:center">right</td><td style="text-align:center">元素向右浮动</td></tr></tbody></table><h3 id="8-6-设置图片与文字的间距-margin">8.6 设置图片与文字的间距(margin)</h3><pre><code>/*上外边距*/margin-top:像素值;/*下外边距*/margin-bottom:像素值;/*左外边距*/margin-left:像素值;/*右外边距*/margin-right:像素值;</code></pre><h2 id="9-列表样式-list-style">9.列表样式(list style)</h2><h3 id="9-1-列表项符号-list-style-type">9.1 列表项符号(list-style-type)</h3><pre><code>/*语法*/list-style-type:属性值;/*去除列表项符号*/list-style-type:none;</code></pre><h3 id="9-2-有序列表-ul">9.2 有序列表(ul)</h3><table><thead><tr><th style="text-align:center">list-style-type属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">decimal</td><td style="text-align:center">默认值，数字1、2、3……</td></tr><tr><td style="text-align:center">lower-roman</td><td style="text-align:center">小写罗马数字i、ii、iii……</td></tr><tr><td style="text-align:center">upper-roman</td><td style="text-align:center">大写罗马数字I、II、III……</td></tr><tr><td style="text-align:center">lower-alpha</td><td style="text-align:center">小写英文字母a、b、c……</td></tr><tr><td style="text-align:center">upper-alpha</td><td style="text-align:center">大写英文字母A、B、C……</td></tr></tbody></table><h3 id="9-3-无序列表-ul">9.3 无序列表(ul)</h3><table><thead><tr><th style="text-align:center">list-style-type属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">disc</td><td style="text-align:center">默认值，实心圆“●”</td></tr><tr><td style="text-align:center">circle</td><td style="text-align:center">空心圆“○”</td></tr><tr><td style="text-align:center">square</td><td style="text-align:center">实心正方形“■”</td></tr></tbody></table><h3 id="9-4-自定义列表项符号-list-style-image">9.4 自定义列表项符号(list-style-image)</h3><blockquote><p>不管有序列表还是无序列表，都有他们自身的列表项符号。但默认的列表符号都比较丑。使用自定义列表项符号。</p></blockquote><pre><code>/*语法*/list-style-image:url(图像地址);</code></pre><h2 id="10-表格样式">10.表格样式()</h2><h3 id="10-1-表格边框合并-border-collapse">10.1 表格边框合并(border-collapse)</h3><blockquote><p>表格特有的属性。除了表格，其他地方用不上。<br>只需要在<code>&lt;table&gt;</code>元素中设置border-collapse属性值就行，没必要在<code>&lt;th&gt;、&lt;td&gt;</code>这些元素也设置，造成代码冗余。</p></blockquote><table><thead><tr><th style="text-align:center">border-collapse属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">separate</td><td style="text-align:center">默认值，边框分开，不合并</td></tr><tr><td style="text-align:center">collapse</td><td style="text-align:center">边框合并，如果相邻，则共用一个边框</td></tr></tbody></table><h3 id="10-2-表格边框间距-border-spacing">10.2 表格边框间距(border-spacing)</h3><pre><code>/*语法*/border-spacing:像素值;/*定义了单元格之间水平方向的间距为5px，垂直方向的间距为10px。*/{border-spacing:5px 10px}</code></pre><h3 id="10-3-表格标题位置-caption-side">10.3 表格标题位置(caption-side)</h3><table><thead><tr><th style="text-align:center">caption-side属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">top</td><td style="text-align:center">默认值，标题在顶部</td></tr><tr><td style="text-align:center">bottom</td><td style="text-align:center">标题在底部</td></tr></tbody></table><h3 id="10-4-盒子模型-Box-Model">10.4 盒子模型(Box Model)</h3><p><a href="https://www.runoob.com/css/css-boxmodel.html" target="_blank" rel="noopener">详见参考</a><br><a href="http://www.lvyestudy.com/les_cj/cj_11.1.aspx" target="_blank" rel="noopener">详见参考</a></p><blockquote><p>所有HTML元素可以看作盒子，在CSS中，&quot;box model&quot;这一术语是用来设计和布局时使用。<br>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。<br>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。</p></blockquote><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">border</td><td style="text-align:center">（边框）元素边框</td></tr><tr><td style="text-align:center">margin</td><td style="text-align:center">（外边距）用于定义页面中元素与元素之间的距离</td></tr><tr><td style="text-align:center">padding</td><td style="text-align:center">（内边距）用于定义内容与边框之间的距离</td></tr><tr><td style="text-align:center">content</td><td style="text-align:center">（内容）可以是文字或图片</td></tr></tbody></table><ul><li>Margin(外边距) - 清除边框外的区域，外边距是透明的。</li><li>Border(边框) - 围绕在内边距和内容外的边框。</li><li>Padding(内边距) - 清除内容周围的区域，内边距是透明的。</li><li>Content(内容) - 盒子的内容，显示文本和图像。</li></ul><h3 id="10-5-元素的宽度和高度">10.5 元素的宽度和高度</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;style&gt;div {    /*背景颜色*/    background-color: lightgrey;    /*宽*/    width: 300px;    /*边框：宽度25px;样式实线;颜色green;*/    border: 25px solid green;    /*内容与边框之间的距离*/    padding: 25px;    /*元素与元素之间的距离*/    margin: 25px;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;盒子模型演示&lt;/h2&gt;&lt;p&gt;CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。&lt;/p&gt;&lt;div&gt;这里是盒子内的实际内容。有 25px 内间距，25px 外间距、25px 绿色边框。&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="10-6-内边距-padding">10.6 内边距(padding)</h3><pre><code>/*语法*/padding-top:像素值;padding-right:像素值;padding-bottom:像素值;padding-left:像素值;/*简洁写法*/padding:像素值;padding:像素值1 像素值2;padding:像素值1 像素值2 像素值3 像素值4;/*表示四个方向的内边距都是20px*/padding:20px;/*表示padding-top和padding-bottom为20px，padding-right和padding-left为40px。*/padding:20px 40px;/*表示padding-top为20px，padding-right为40px，padding-bottom为60px，padding-left为80px。大家按照顺时针方向记忆就可以了。*/padding:20px 40px 60px 80px;</code></pre><h3 id="10-7-外边距-margin">10.7 外边距(margin)</h3><pre><code>/*语法*/margin-top:像素值;margin-right:像素值;margin-bottom:像素值;margin-left:像素值;/*简洁写法*/margin:像素值;margin:像素值1 像素值2;margin:像素值1 像素值2 像素值3 像素值4;/*表示四个方向的外边距都是20px*/margin:20px;/*表示margin-top和margin-bottom为20px，margin-right和margin-left为40px。*/margin:20px 40px;/*表示margin-top为20px，margin-right为40px，margin-bottom为60px，margin-left为80px。大家按照顺时针方向记忆就可以了。*/margin:20px 40px 60px 80px;</code></pre><h3 id="10-8-浮动布局">10.8 浮动布局</h3><h3 id="10-9-定位布局-Position">10.9 定位布局(Position)</h3><blockquote><p>浮动布局比较灵活，但是不容易控制。而定位布局的出现，使得用户精准定位页面中的任意元素成为可能，使得网页布局变得更加随心所欲。当然由于定位布局缺乏灵活性，也给空间大小和位置不确定的版面布局带来困惑。<br>定位的方法有很多种，它们分别是固定定位（fixed）、相对定位（relative）、绝对定位（absolute）和静态定位（static）。</p></blockquote><p><strong>position 属性的五个值：</strong></p><ul><li>static</li><li>相对定位(relative)</li><li>固定定位(fixed)</li><li>绝对定位(absolute)</li><li>sticky</li></ul><h3 id="11-固定定位-fixed">11.固定定位(fixed)</h3><pre><code>/*语法*/position:fixed;top:像素值;bottom;像素值;left:像素值;right:像素值;/*position:fixed;”是结合top、bottom、left和right这4个属性一起使用的，其中“position:fixed;”使得元素成为固定定位元素，接着使用top、bottom、left和right这4个属性来设置元素相对浏览器的位置。*/</code></pre><h3 id="11-1-相对定位-relative">11.1 相对定位(relative)</h3><pre><code>/*语法*/position:relative;top:像素值;bottom:像素值;left:像素值;right:像素值;/*“position:relative;”是结合top、bottom、left和right这4个属性一起使用的，其中“position:relative;”使得元素成为相对定位元素，接着使用top、bottom、left和right这4个属性来设置元素相对原始位置。相对定位的容器浮上来后，其所占的位置仍然留有空位，后面的无定位元素仍然不会“挤上来”。*/</code></pre><h3 id="11-2-绝对定位-absolute">11.2 绝对定位(absolute)</h3><blockquote><p>绝对定位在几种定位方法中使用最广泛，这种方法能够很精确地把元素移动到任意你想要的位置。<br>一个元素变成了绝对定位元素，这个元素就完全脱离正常文档流了，绝对定位元素的前面或者后面的元素会认为这个元素并不存在，即这个元素浮于其他元素上面，它是独立出来的。</p></blockquote><pre><code>/*语法*/position:absolute;top:像素值;bottom:像素值;left:像素值;right:像素值;</code></pre><h3 id="11-3-静态定位-static">11.3 静态定位(static)</h3><blockquote><p>如果没有指定元素的position属性值，也就是默认情况下，元素是静态定位。只要是支持position属性的html对象都是默认为static。static是position属性的默认值，它表示块保留在原本应该在的位置，不会重新定位。<br>说白了，平常我们根本就用不到“position:static”，不过呢，如果有时候我们使用javascript来控制元素定位的时候，如果想要使得其他定位方式的元素变成静态定位，就要使用“position:static;”来实现。<br>在CSS入门阶段，大家只需要深入学习固定定位（fixed）、相对定位（relative）和绝对定位（absolute）就已经可以走得很远了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html基础知识总结</title>
      <link href="/2020/04/20/html%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2020/04/20/html%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="一、HTML的历史">一、HTML的历史</h2><p>    HTML,超文本标记语言，英文全称是Hyper Text Markup Language，由Tim Berners-Lee在1982年提出，它是互联网上应用最广泛的标记语言。</p><h3 id="1-HTML发展过程">1.HTML发展过程</h3><ul><li>HTML（第一版）：1993年6月由互联网工程工作小组IETF(Interenet Engineering Task Force)发布的HTML工作草案。</li><li>HTML2.0 ：1995年11月作为RFC 1886发布，在RFC 2854于2000年6月发布之后被宣布已经过时。</li><li>HTML3…2 ：1996年1月14日由W3C组织发布，是HTML文档第一个被广泛使用的标准。</li><li>HTML4.0 ： 1997年12月18日由W3C组织发布，也是W3C推荐标准。</li><li>HTML4.01（微小改进）：1997年12月24日由W3C组织发布，是HTML文档另一个重要的、广泛使用的标准。</li><li>XHTML1.0 ：发布于2000年1月26日，是W3C组织推荐标准，后来经过修订于2002年8月1日重新发布。</li><li>在HTML的发展历史中，最为广为人知的是HTML3.2和HTML4.01</li></ul><h3 id="2-HTML4-01和XHTML">2.HTML4.01和XHTML</h3><p>    XHTML的全称是(eXtensible Hyper Text Markup Language，扩展的超文本标记语言)，XHTML和HTML4.01具有很好的兼容性，而且XHTML是更严格、更纯净的HTML代码。W3C组织制定XHTML，目标是逐步取代原有的HTML。简单地说，XHTML就是最新版本的HTML规范。</p><p>XHTML要求HTML文档首先必须是一份XML文档。XML文档是一种结构化文档，它有如下4条基本规则：</p><ul><li>整个文档有且有一个根元素。</li><li>每个元素都由开始标签和结束标签组成，例如<code>&lt;a&gt;&lt;/a&gt;</code>，就是一对标签。除非使用空元素语法，例如<code>&lt;br/&gt;</code>就是空元素语法。</li><li>元素与元素之间应该合理嵌套。例如<code>&lt;div&gt;&lt;span&gt;</code>疯狂<code>&lt;/span&gt;&lt;/div&gt;</code>，这可以明确的看出<code>&lt;/span&gt;</code>元素是<code>&lt;/div&gt;</code>的子元素，这就是合理嵌套。但<code>&lt;div&gt;&lt;span</code>&gt;疯狂<code>&lt;/div&gt;&lt;/span&gt;</code>这种写法就比较混乱，也就是所谓的不合理嵌套。</li><li>元素的属性必须有属性值，而且属性值应该用引号（单引号和双引号都可以）引起来。</li></ul><h3 id="3-HTML5的诞生">3.HTML5的诞生</h3><p>    HTML5是指万维网的核心语言、标准通用标记语言下的一个应用超文本标记语言的第五次重大修改。HTML5的设计目的是为了在移动设备上支持多媒体。新的语法特征被引进以支持这一点，如video、audio和canvas标记。还引进了新的功能，可以真正改变用户与文档的交互方式。</p><p>    HTML5草案的前身名为Web Application 1.0，于2004年被WHATWG提出，于2007年被W3C接纳，并成立了新的HTML工作团队。</p><p>    HTML5的第一份正式草案已于2008年1月22日公布。HTML5仍处于完善之中。2013年5月6日，HTML5.1正式草案公布。该规范定义了第五次重大版本，第一次要修订万维网的核心语言：超文本标记语言。在这个版本中，新功能不断推出，以帮助Web应用程序的作者，努力提高新元素互操作性。直到2014年10月29日，经过几乎8年的艰辛努力，HTML5标准规范终于制定完成了，并已公开发布。</p><p>    HTML5还在继续修改完善，增加新的功能，未来前景很广。</p><h2 id="二、常用标签">二、常用标签</h2><h3 id="1-基础标签">1.基础标签</h3><p><strong>一个网页大致构成是：</strong></p><pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;!-- 优先使用最新的ie版本 --&gt; &lt;title&gt;文档标题&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;资源所在路径&quot; type=&quot;规定被链接文档的MIME类型&quot;   media=&quot;&quot; target=&quot;&quot; charset=&quot;定义编码方式&quot;&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;!--主体内容 显示在网页上的，由许多的标签组成--&gt;  &lt;p&gt;&lt;/p&gt;  &lt;h1&gt;&lt;/h1&gt;   &lt;script src=&quot;引用文件地址&quot;&gt;&lt;/script&gt;    &lt;script type=&quot;text/javascript&quot;&gt;    &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre><ul><li><p><code>&lt;!DOCTYPE HTML&gt;</code> 定义文档类型为HTML，自从HTML5问世之后，就开始使用。这个在编写代码时必须要写上，这个是用来声明文档类型的，文档类型类似于连接，规定了HTML页面必须遵从的良好规则，能自动检测错误和其他有用的东西</p></li><li><p><code>&lt;head&gt;&lt;/head&gt;</code>定义文档的一些相关信息</p></li><li><p><code>&lt;title&gt;&lt;/title&gt;</code>定义文档的标题</p></li><li><p><code>&lt;meta&gt;</code> 定义关于 HTML 文档的元信息，比如对页面进行描述，关键词，作者等。不会显示在网页上。它的属性有charset，name，http-equiv，content属性等，后期再对这个标签进行详细的解释</p></li><li><p><code>&lt;link&gt;</code>用于链接样式表，定义文档与外部资源的关系。关于什么是MIME类型，可以参考MIME类型参考手册，有具体的讲解</p></li><li><p><code>&lt;!-- --&gt;</code>定义注释，注明一些信息，便于开发者阅读浏览</p></li><li><p><code>&lt;h1&gt;~&lt;h6&gt;</code>定义标题，字体的大小<code>&lt;h1&gt;</code>最大，<code>&lt;h6&gt;</code>最小</p></li><li><p><code>&lt;p&gt;&lt;/p&gt;</code>段落标签，是一个块级标签</p></li><li><p><code>&lt;span&gt;&lt;/span&gt;</code>和<code>&lt;div&gt;&lt;/div&gt;</code>定义文档的节</p></li><li><p><code>&lt;iframe&gt;&lt;/iframe&gt;</code>定义文档的内联框架</p></li></ul><h3 id="2-表格标签">2.表格标签</h3><ul><li><code>&lt;table&gt;&lt;/table&gt;</code>定义表格</li><li><code>&lt;th&gt;&lt;/th&gt;</code>定义表格的表头</li><li><code>&lt;tr&gt;&lt;/tr&gt;</code>定义表格的行</li><li><code>&lt;td&gt;&lt;/td&gt;</code>定义表格的单元</li><li><code>&lt;caption&gt;&lt;/caption&gt;</code> 定义表格标题</li><li><code>&lt;thead&gt;&lt;thead&gt;</code>定义表格中的表头内容</li><li><code>&lt;tbody&gt;&lt;/tbody&gt;</code> 定义表格中的主体内容</li><li><code>&lt;tfoot&gt;&lt;/tfood&gt;</code> 定义表格中的表注内容（脚注）</li></ul><h3 id="3-列表标签">3.列表标签</h3><ul><li><code>&lt;ul&gt;&lt;/ul&gt;</code>定义无序列表</li><li><code>&lt;ol&gt;&lt;/ol&gt;</code>定义有序列表</li><li><code>&lt;li&gt;&lt;/li&gt;</code>定义列表项</li><li><code>&lt;dl&gt;&lt;/dl&gt;</code> 定义列表</li><li><code>&lt;dt&gt;&lt;/dt&gt;</code> 自定义列表项目</li><li><code>&lt;dd&gt;&lt;/dd&gt;</code> 定义自定义列表的描述</li></ul><h3 id="4-表单标签">4.表单标签</h3><ul><li><code>&lt;form&gt;&lt;/form&gt;</code> 定义供用户输入的表单</li><li><code>&lt;input&gt;</code> 定义输入控件，如密码框，输入框，按钮等</li><li><code>&lt;textarea&gt;&lt;/textarea&gt;</code> 定义文本域 （一个多行的输入控件）</li><li><code>&lt;label&gt;&lt;/label&gt;</code> 定义了 <code>&lt;input&gt;</code> 元素的标签，一般为输入标题</li><li><code>&lt;filedset&gt;&lt;/filedset&gt;</code> 定义了一组相关的表单元素，并使用外框包含起来</li><li><code>&lt;legend&gt;&lt;/legend&gt;</code> 定义了 <code>&lt;fieldset&gt;</code>元素的标题</li><li><code>&lt;select&gt;&lt;/select&gt;</code> 定义了下拉选项列表</li><li><code>&lt;optgroup&gt;&lt;/optgroup&gt;</code> 定义了下拉选项组</li><li><code>&lt;option&gt;&lt;/option&gt;</code> 定义下拉列表中的选项</li><li><code>&lt;button&gt;&lt;/button&gt;</code>定义一个点击按钮</li></ul><h3 id="5-多媒体链接">5.多媒体链接</h3><ul><li><code>&lt;a&gt;&lt;/a&gt;</code>定义一个超链接</li><li><code>&lt;img&gt;</code>定义图像</li><li><code>&lt;embed&gt;&lt;/embed&gt;</code> 定义在页面中嵌入的内容，可插入音频视频等。</li></ul><h3 id="6-格式标签">6.格式标签</h3><ul><li><code>&lt;b&gt;&lt;/b&gt;</code>定义粗体文本</li><li><code>&lt;del&gt;&lt;/del&gt;</code>定义被删除文本</li><li><code>&lt;em&gt;&lt;/em&gt;</code>定义强调文本</li><li><code>&lt;i&gt;&lt;/i&gt;</code>定义斜体文本</li><li><code>&lt;sup&gt;&lt;/sup&gt;</code>定义上标文本</li><li><code>&lt;sub&gt;&lt;/sub&gt;</code> 定义下标文本</li><li><code>&lt;hr&gt;</code>定义水平线</li><li><code>&lt;br&gt;</code>定义简单的换行</li></ul>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器介绍</title>
      <link href="/2020/04/20/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%8B%E7%BB%8D/"/>
      <url>/2020/04/20/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1>浏览器介绍</h1><h2 id="1-介绍">1. 介绍</h2><p>     浏览器是指可以显示网页服务器或者文件系统的HTML文件的内容，并让用户与这些文件交互的一种软件。它用来显示在万维网或局域网等内的文字、图像及其他信息。这些文字或图像，可以是连接其他网址的超链接，用户可迅速及轻易地浏览各种信息。大部分网页为HTML格式。</p><h2 id="1-2-浏览器内核">1.2 浏览器内核</h2><p>     浏览器最重要或者说核心的部分是“Rendering Engine”，可大概译为“渲染引擎”，不过我们一般习惯将之称为“浏览器内核”。负责对网页语法的解释（如标准通用标记语言下的一个应用HTML、JavaScript）并渲染（显示）网页。 所以，通常所谓的浏览器内核也就是浏览器所采用的渲染引擎，渲染引擎决定了浏览器如何显示网页的内容以及页面的格式信息。不同的浏览器内核对网页编写语法的解释也有不同，因此同一网页在不同的内核的浏览器里的渲染（显示）效果也可能不同，这也是网页编写者需要在不同内核的浏览器中测试网页显示效果的原因。</p><h2 id="1-3-常用浏览器及其内核">1.3 常用浏览器及其内核</h2><p><strong>浏览器：                                   内核：</strong></p><p>IE浏览器、百度                            Trident（俗称的IE内核）<br>Firefox(火狐）                             Gecko<br>Google Chrome(谷歌)                  webkit/blink(前期与苹果共同使用webkit内核，后期使用自己的blink内核)<br>safari(苹果浏览器)                         webkit<br>opera(挪威某公司开发的浏览器)         Presto/webkit/blink(最先使用自己的presto,后改为wekit,现使用blink)<br>360、猎豹浏览器、2345浏览器           IE+Chrome（双内核）<br>搜狗、遨游、QQ浏览器内核               Trident+Webkit（兼容模式+高速模式）</p><h2 id="1-4-内核详细介绍">1.4 内核详细介绍</h2><ul><li><p>Trident（也称IE内核）<br>     Trident(又叫MSHTML)，是微软开发的一种排版引擎。<br>     Trident内核的常见浏览器有：IE6、IE7、IE8（Trident 4.0）、IE9（Trident 5.0）、IE10（Trident 6.0）；360安全浏览器（1.0-5.0为Trident，6.0为Trident+Webkit，7.0为Trident+Blink）猎豹极轻浏览器，360极速浏览器（7.5之前为Trident+Webkit，7.5为Trident+Blink）猎豹安全浏览器（1.0-4.2版本为Trident+Webkit，4.3及以后版本为Trident+Blink）猎豹极轻浏览器，傲游浏览器（傲游1.x、2.x为IE内核，3.x为IE与Webkit双核）、百度浏览器（早期版本）、世界之窗浏览器（最初为IE内核，2013年采用Chrome+IE内核）、2345浏览器、腾讯TT、淘宝浏览器、采编读浏览器、搜狗高速浏览器（1.x为Trident，2.0及以后版本为Trident+Webkit）、阿云浏览器（早期版本）、瑞星安全浏览器、Slim Browser、 GreenBrowser、爱帆浏览器（12 之前版本）、115浏览器、155浏览器、闪游浏览器、N氧化碳浏览器、糖果浏览器、彩虹浏览器、瑞影浏览器、勇者无疆浏览器、114浏览器、蚂蚁浏览器、飞腾浏览器、速达浏览器、佐罗浏览器、海豚浏览器（iPhone/iPad/Android）、UC浏览器（Webkit内核+Trident内核）等。<br>其中部分浏览器的新版本是“双核”甚至是“多核”，其中一个内核是Trident，然后再增加一个其他内核。国内的厂商一般把其他内核叫做“高速浏览模式”，而Trident则是“兼容浏览模式”，用户可以来回切换。</p></li><li><p>Webkit内核<br>      Webkit（Safari内核，Chrome内核原型，开源）:它是苹果公司自己的内核，也是苹果的Safari浏览器使用的内核。 Webkit引擎包含WebCore排版引擎及JavaScriptCore解析引擎，均是从KDE的KHTML及KJS引擎衍生而来，它们都是自由软件，在GPL条约下授权，同时支持BSD系统的开发。所以Webkit也是自由软件，同时开放源代码。在安全方面不受IE、Firefox的制约，所以Safari浏览器在国内还是很安全的。<br>WebKit内核常见的浏览器：傲游浏览器3、Apple Safari （Win/Mac/iPhone/iPad）、Symbian手机浏览器、Android 默认浏览器</p></li><li><p>Blink内核<br>      Blink是一个由Google和Opera Software开发的浏览器排版引擎，Google计划将这个渲染引擎作为Chromium计划的一部分，并且在2013年4月的时候公布了这一消息。这一渲染引擎是开源引擎WebKit中WebCore组件的一个分支，并且在Chrome（28及往后版本）、Opera（15及往后版本）和Yandex浏览器中使用。</p></li><li><p>Gecko内核<br>       Gecko（Firefox内核）：Netscape6开始采用的内核，后来的Mozilla FireFox（火狐浏览器） 也采用了该内核，Gecko的特点是代码完全公开，因此，其可开发程度很高，全世界的程序员都可以为其编写代码，增加功能。因为这是个开源内核，因此受到许多人的青睐，Gecko内核的浏览器也很多，这也是Gecko内核虽然年轻但市场占有率能够迅速提高的重要原因。<br>  Gecko内核常见的浏览器：Mozilla Firefox、Mozilla SeaMonkey、waterfox（Firefox的64位开源版）、Iceweasel、Epiphany（早期版本）、Flock（早期版本）、K-Meleon。</p></li><li><p>Presto内核<br>      这是一个动态内核，与前面几个内核的最大的区别就在脚本处理上，Presto有着天生的优势，页面的全部或者部分都能够在回应脚本事件时等情况下被重新解析。此外该内核在执行Javascrīpt的时候有着最快的速度，根据在同等条件下的测试，Presto内核执行同等Javascrīpt所需的时间仅有Trident和Gecko内核的约1/3（Trident内核最慢，不过两者相差没有多大），本文的其中一个修改者认为上述测试信息过于老旧且不完整，因为他曾做过的小测试显示Presto部分快部分慢，各内核总体相当。那次测试的时候因为Apple机的硬件条件和普通PC机不同所以没有测试WebCore内核。只可惜Presto是商业引擎，使用Presto的除开Opera以外，只剩下NDSBrowser、Wii Internet Channle、Nokia 770网络浏览器等，这很大程度上限制了Presto的发展。<br>  Opera现已改用Google Chrome的Blink内核。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
