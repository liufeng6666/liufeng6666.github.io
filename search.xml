<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言知识点</title>
      <link href="/2020/04/23/C%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2020/04/23/C%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="center-C语言知识点-center"><center>C语言知识点</center></h2><p><strong>总体上必须清楚的:</strong><br><font face="方正粗黑宋简体" ><br>(1)程序结构是三种:  <font color="greng">顺序结构 、选择结构(分支结构)、循环结构。</font></p><p>(2)读程序都要从main()入口, 然后从最上面顺序往下读(碰到循环做循环,碰到选择做选择)，有且只有一个main函数。</p><p>(3)计算机的数据在电脑中保存是以二进制的形式. 数据存放的位置就是 他的地址.</p><p>(4)bit是位 是指为0 或者1。 byte 是指字节, <font color="greng">一个字节 = 八个位.</font><br></font></p><p><strong>概念常考到的：</strong><br><font face="方正粗黑宋简体" ></p><ol><li><p>编译预处理不是C语言的一部分，不占运行时间，不要加分号。C语言编译的程序称为源程序，它以ASCII数值存放在文本文件中。</p></li><li><p>#define PI 3.1415926; 这个写法是错误的，一定不能出现分号。<br><b><font color="red"> define a 1+2          define a (1+2)<br>a=a<em>a=1+2</em>1+2=5       a=a<em>a=3</em>3=9 <br></font> </b></p></li><li><p>每个C语言程序中main函数是有且只有一个。</p></li><li><p>在函数中不可以再定义函数。</p></li><li><p>算法：可以没有输入，但是一定要有输出。</p></li><li><p>break可用于循环结构和switch语句。</p></li><li><p>逗号运算符的级别最低，赋值的级别倒数第二。<br></font></p></li></ol><h2 id="center-第一章C语言的基础知识-center"><center>第一章C语言的基础知识</center></h2><h3 id="第一节、对C语言的基础认识">第一节、对C语言的基础认识</h3></br><font face="方正粗黑宋简体" >  1、C语言编写的程序称为源程序，又称为编译单位。  <p>2、C语言书写格式是自由的，每行可以写多个语句，可以写多行。<br>3、一个C语言程序有且只有一个main函数，是程序运行的起点。<br></font></p><h3 id="第二节、熟悉vc">第二节、熟悉vc++</h3></br><font face="方正粗黑宋简体" >  1、VC是软件，用来运行写的C语言程序。<p>2、每个C语言程序写完后，都是先<font color="red">编译</font>，后<font color="red">链接</font>，最后<font color="red">运行</font>。（.c—à.obj—à.exe）这个过程中注意<font color="red">.c和.obj</font>文件时无法运行的，只有<font color="red">.exe文件才可以运行。<strong>（常考！）</strong></font><br></font></p><h3 id="第三节、标识符">第三节、标识符</h3></br><font face="方正粗黑宋简体" >  1、标识符<font color="red"><b>（必考内容）：</b></font>  </br><p><u>合法的要求是由字母，数字，下划线组成。有其它元素就错了。</p><p>并且第一个必须为字母或则是下划线。第一个为数字就错了<br></u><br>2、标识符分为关键字、预定义标识符、用户标识符。</p><p><b>关键字：</b>不可以作为用户标识符号。main define  scanf  printf 都不是关键字。迷惑你的地方If是可以做为用户标识符。因为If中的第一个字母大写了，所以不是关键字。</p><p><b>预定义标识符：</b><font color="red">背诵define scanf  printf  include。</font>记住预定义标识符可以做为用户标识符。</p><p><b>用户标识符：</b>基本上每年都考，详细请见书上习题。<br></font></p><h3 id="第四节：进制的转换">第四节：进制的转换</h3></br><font face="方正粗黑宋简体" >  十进制转换成二进制、八进制、十六进制。<p>二进制、八进制、十六进制转换成十进制。<br></font></p><h3 id="第五节：整数与实数">第五节：整数与实数</h3></br><font face="方正粗黑宋简体" >  (1)C语言只有<font color="red">八、十、十六</font>进制，没有二进制。<font color="red">但是运行时候，所有的进制都要转换成二进制来进行处理。</font>（考过两次）<p>a、C语言中的八进制规定要以0开头。018的数值是非法的，八进制是没有8的，逢8进1。 <br>b、C语言中的十六进制规定要以0x开头。</p></br>(2)小数的合法写法：C语言<font color="red">小数点两边有一个是零的话，可以不用写。</font><p>1.0在C语言中可写成1.<br>0.1在C语言中可以写成.1。</p></br>(3)实型数据的合法形式：<p>a、2.333e-1 就是合法的，且数据是2.333×10-1。</p><p>b、考试口诀：<font color="red">e前e后必有数，e后必为整数。</font>请结合书上的例子。</p></br>(4) <font color="red">整型</font>一般是<font color="blue">4</font>个字节, <font color="red">字符型</font>是<font color="blue">1</font>个字节，<font color="red">双精度</font>一般是<font color="blue">8</font>个字节：<p>long int x; 表示x是长整型。<br>unsigned int x; 表示x是无符号整型。<br></font></p><h3 id="第六、七节：算术表达式和赋值表达式">第六、七节：算术表达式和赋值表达式</h3></br><font face="方正粗黑宋简体" >  <font color="red">核心：表达式一定有数值！</font>    </br>1、 算术表达式：+，-，*，/，%<p>考试一定要<b>注意:</b>“/” 两边<font color="blue">都是</font>整型的话，结果就是一个<font color="blue">整型</font>。 3/2的结果就是1.</p><p>“/” 如果<font color="blue">有一边</font>是小数，那么结果就是<font color="blue">小数</font>。 3/2.0的结果就是1.5</p><p>“%”符号请一定要注意是<font color="red">余数</font>，考试最容易算成了除号。）<font color="red">%符号两边要求是整数</font>。不是整数就错了。[注意!!!]<br></br><br>2、赋值表达式：表达式数值是最左边的数值，a=b=5;该表达式为5，常量不可以赋值。</p><ol><li><p>int x=y=10: 错啦，<font color="blue">定义时</font>，<font color="red">不可以</font>连续赋值。</p></li><li><p>int x,y;</p></li></ol><p>x=y=10;   对滴，<font color="blue">定义完成后</font>，<font color="red">可以</font>连续赋值。</p><ol start="3"><li><p><font color="blue">赋值的左边只能是</font><font color="red">一个变量</font>。</p></li><li><p>int x=7.7；对滴，x就是7</p></li><li><p>float y=7；对滴，x就是7.0<br></br></p></li></ol><p>3、复合的赋值表达式：</p><p>int a=2；<br>a*=2+3；运行完成后，a的值是12。</p><p>一定要注意，首先要在2+3的上面打上括号。变成（2+3）再运算。</p><p><font color="red">复合语句一定用｛｝；</font><br></br><br>4、自加表达式：</p><p>自加、自减表达式：假设a=5，++a（是为6）， a++（为5）；</p><p>运行的机理：++a 是先把变量的数值加上1，然后把得到的数值放到变量a中，然后再用这个++a表达式的数值为6，而a++是先用该表达式的数值为5，然后再把a的数值加上1为6，</p><p>再放到变量a中。 进行了++a和a++后在下面的程序中再用到a的话都是变量a中的6了。</p><p><font color="red">考试口诀：++在前先加后用，++在后先用后加。</font><br></br><br>5、逗号表达式：</p><p>优先级别<font color="red">最低</font>。表达式的数值逗号最右边的那个表达式的数值。</p><p>（2，3，4）的表达式的数值就是4。</p><p>z=（2，3，4）(整个是赋值表达式) 这个时候z的值为4。（有点难度哦！）</p><p>z=  2，3，4 （整个是逗号表达式）这个时候z的值为2。</p><p>补充：</p><ol><li><p>空语句<font color="red">不可以</font>随意执行，会导致逻辑错误。</p></li><li><p>注释是最近几年考试的重点，注释<font color="red">不是</font>C语言，<font color="red">不占</font>运行时间，<font color="red">没有</font>分号。<font color="red">不可以</font>嵌套！</p></li><li><p>强制类型转换：</p></li></ol><p>一定是 （int）a 不是  int（a），注意类型上一定有括号的。</p><p>注意（int）（a+b） 和（int）a+b 的区别。前是把a+b转型，后是把a转型再加b。</p><ol start="4"><li><strong>三种取整丢小数的情况：</strong></li></ol><pre><code>int a =1.6；(int)a；　　1/2； 3/2；不丢小数办法，在相应的格式中加前缀.2保留2位，四舍五入</code></pre></font><h3 id="第八节、字符">第八节、字符</h3></br><font face="方正粗黑宋简体" >  1、字符数据的合法形式:：<p>‘1’ 是字符占一个字节，&quot;1&quot;是字符串占两个字节(含有一个结束符号)。</p><p>‘0’ 的ASCII数值表示为48，‘a’ 的ASCII数值是97，'A’的ASCII数值是65。</p><p><font color="red">一般考试表示单个字符错误的形式：‘65’    “1”</p><p>字符是可以进行算术运算的，记住：　‘0’-0=48</p><p>大写字母和小写字母转换的方法：　‘A’+32=‘a’  </font>相互之间一般是相差32。</p><p></br>2、转义字符：</p><p>转义字符分为一般<font color="red">转义字符、八进制转义字符、十六进制转义字符。</font></p><p>一般转义字符：背诵\0、 \n、 \’、 \”、<code> \\</code>。</p><p>八进制转义字符：  ‘\141’ 是合法的， 前导的0是不能写的。</p><p>十六进制转义字符：’\x6d’ 才是合法的，前导的0不能写，并且x是小写。</p><p></br>3、字符型和整数是近亲：两个具有很大的相似之处</p><pre><code>　　        char a = 65 ;　            printf(“%c”,a);  得到的输出结果：aprintf(“%d”, a);　得到的输出结果：65                </code></pre></font><h3 id="第九节、位运算">第九节、位运算</h3><font face="方正粗黑宋简体" >  </br>(1)位运算的考查：会有一到二题考试题目。<p>总的处理方法：几乎所有的位运算的题目都要按这个流程来处理（<font color="red">先把十进制变成二进制再变成十进制</font>）。</p><p><font color="red"><strong>例1：</strong></font>　char a = 6,b;</p><p>b = a&lt;&lt;2;  这种题目的计算是先要把a的十进制6化成二进制，再做位运算。</p><p><font color="red"><strong>例2：</strong></font>　一定要记住，异或的位运算符号” ^ ”。0 异或 1得到1。</p><p>0 异或 0得到0。两个女的生不出来。</p><p>考试记忆方法：一男(1)一女(0)才可以生个小孩(1)。</p><p><font color="red">例3：</font>　在没有舍去数据的时候，&lt;&lt;左移一位表示乘以2；&gt;&gt;右移一位表示除以2。　　　<br></font></p><h2 id="center-第二章-center"><center>第二章</center></h2><h3 id="第一节：数据输出（一）（二）">第一节：数据输出（一）（二）</h3><font face="方正粗黑宋简体" >   <p>1、使用printf和scanf函数时，要在最前面加上#include“stdio.h”</p><p>2、printf可以只有一个参数，也可以有两个参数。（选择题考过一次）</p><p>3、printf（“ 第一部分 ”，第二部分  ）；把第二部分的变量、表达式、常量以第一部分的形式展现出来！</p><p>4、printf（“a=%d，b=%d”，12, 34） 考试重点！</p><p>一定要记住是将12和34以第一部分的形式现在在终端也就是黑色的屏幕上。考试核心为：<font color="red">一模一样</font>。在黑色屏幕上面显示为  a=12，b=34</p><p>printf（“a=%d，\n b=%d”，12, 34）那么输出的结果就是：a=12，</p><p>b=34</p><p><font color="red">提示输出错误解决办法（整形数组）</font></p><pre><code>  printf（i==n?”%d ”:”%d\n”,a[i]）;  (i&lt;n-1)printf(“%d ”,a[i]);  prinitf(“%d\n”,a[i]);</code></pre><p>5、int x=017；   一定要弄清楚为什么是这个结果！过程很重要</p><pre><code>printf（“%d”， x）；&lt;font color=&quot;red&quot;&gt; 15&lt;/font&gt;printf（“%o”， x）； &lt;font color=&quot;red&quot;&gt;17&lt;/font&gt;printf（“%#o”，x）；&lt;font color=&quot;red&quot;&gt; 017&lt;/font&gt;printf（“%x”， x）； &lt;font color=&quot;red&quot;&gt;11 &lt;/font&gt;printf（“%#x”，x）；&lt;font color=&quot;red&quot;&gt; 0x11&lt;/font&gt;</code></pre><p>6、int x=12，y=34； 注意这种题型</p><pre><code>      char z=‘a’；          printf（“%d ”，x，y）； 一个格式说明，两个输出变量，后面的y不输出      printf（“%c”，z）；      结果为：12a</code></pre><p>7、一定要背诵的</p><table><thead><tr><th style="text-align:center">格式说明</th><th style="text-align:center">表示内容</th><th style="text-align:center">格式说明</th><th style="text-align:center">表示内容</th></tr></thead><tbody><tr><td style="text-align:center">%d</td><td style="text-align:center">整型 int</td><td style="text-align:center">%c</td><td style="text-align:center">字符  char</td></tr><tr><td style="text-align:center">%ld</td><td style="text-align:center">长整型 long int</td><td style="text-align:center">%s</td><td style="text-align:center">字符串</td></tr><tr><td style="text-align:center">%f</td><td style="text-align:center">浮点型 float</td><td style="text-align:center">%o</td><td style="text-align:center">八进制</td></tr><tr><td style="text-align:center">%lf</td><td style="text-align:center">double</td><td style="text-align:center">%#o</td><td style="text-align:center">带前导的八进制</td></tr><tr><td style="text-align:center">%%</td><td style="text-align:center">输出一个百分号</td><td style="text-align:center">%x%X</td><td style="text-align:center">十六进制输出大写</td></tr><tr><td style="text-align:center">%5d</td><td style="text-align:center"></td><td style="text-align:center">%#x</td><td style="text-align:center">带前导的十六进制</td></tr></tbody></table><p><strong>举例说明：</strong></p><pre><code>printf（“%2d”，123 ）；  第二部分有三位，大于指定的两位，原样输出123printf（“%5d”，123 ）；  第二部分有三位，小于指定的五位，左边补两个空格  123printf（“%10f”，1.25 ）； 小数要求补足6位的，没有六位的补0,。结果为 1.250000printf（“%5.3f”，125 ）； 小数三位，整个五位，结果为1.250（小数点算一位）printf（“%3.1f”，1.25 ）；小数一位，整个三位，结果为1.3（要进行四舍五入）输出时间“%02d：%02d：%02d\n”</code></pre></font><h3 id="第三节-数据输入">第三节 数据输入</h3><font face="方正粗黑宋简体" >  防止非法输入while（~scanf（））｛｝<p>多重用例</p><pre><code>while（scanf（）!=EOF）while(scanf(“”,&amp;a),a!=-1){s[n]=a;n++}</code></pre><p>1、scanf（“a=%d，b=%d”，&amp;a，&amp;b）<font color="red"> 考试超级重点！</font></p><p>一定要记住是以<font color="red">第一部分的格式在终端输入数据</font>。考试核心为：一模一样。</p><p>在黑色屏幕上面输入的为  a=12，b=34才可以把12和34正确给a和b 。有一点不同也不行。        <br></br><br>2、scanf（“%d，%d”，x，y）；这种写法绝对错误，<font color="red">scanf的第二个部分一定要是地址！</font></p><p>scanf（“%d，%d”，&amp;x，&amp;y）；注意写成这样才可以！<font color="red">没地址一开始运行就会bug</font><br></br><br>3、特别注意指针在scanf的考察</p><pre><code>例如： int x=2；int *p=&amp;x；scanf（“%d”，x）；   错误          scanf（“%d”，p）；正确scanf（“%d”，&amp;p）；  错误         scanf（“%d”，*p）错误</code></pre><p>4、指定输入的长度 <font color="red">（考试重点）</font></p><p>终端输入：1234567</p><pre><code>scanf（“%2d%4d%d”，&amp;x，&amp;y，&amp;z）；x为12，y为3456，z为7</code></pre><p>终端输入：1 234567     由于1和2中间有空格，所以只有1位给x</p><pre><code>scanf（“%2d%4d%d”，&amp;x，&amp;y，&amp;z）；x为1，y为2345，z为67</code></pre><p>5、字符和整型是近亲：</p><pre><code>intx=97；printf（“%d”，x）；   结果为97printf（“%c”，x）；   结果为 a</code></pre><p>6、输入时候字符和整数的区别（考试<font color="red">超级重点</font>）</p><pre><code>scanf（“%d”，&amp;x）；这个时候输入1，特别注意表示的是整数1scanf（“%c”，&amp;x）；这个时候输入1，特别注意表示的是字符‘1’ASCII为整数48。</code></pre><p>补充说明：</p><p>(1)scanf函数的格式考察：</p><p>注意该函数的第二个部分是&amp;a 这样的地址，不是a；</p><p>scanf(“%d%d%*d%d”,&amp;a,&amp;b,&amp;c);跳过输入的第三个数据。</p></br>(2)putchar ,getchar 函数的考查：<p>char a = getchar() 是没有参数的，从键盘得到你输入的一个字符给变量a。</p><p>putchar(‘y’)把字符y输出到屏幕中。</p></br>(3)如何实现两个变量x ，y中数值的互换（要求背下来）<p>不可以把 x=y ,y=x; <font color="red">要用中间变量 t=x；x=y；y=t。</p><p>位运算a=a^b;b=b^a;a=a^b;</font></p><p></br>(4)如何实现保留三位小数，第四位四舍五入的程序，（要求背下来）</p><pre><code>y=（int）（x*100+0.5）/100.0   这个保留两位，对第三位四舍五入y=（int）（x*1000+0.5）/1000.0 这个保留三位，对第四位四舍五入y=（int）（x*10000+0.5）/10000.0 这个保留四位，对第五位四舍五入</code></pre><p><font color="red"> 这个有推广的意义，注意 x = （int）x </font>这样是把小数部分去掉。<br></font></p><h2 id="center-第三章-center"><center>第三章</center></h2><font face="方正粗黑宋简体" >  特别要注意：C语言中是用非0表示逻辑真的，用0表示逻辑假的。<p>C语言有构造类型，没有逻辑类型。</p><p>关系运算符号：注意&lt;=的写法，==和=的区别！（考试重点）</p><p>if只管后面一个语句，<font color="red">要管多个，请用大括号！</font></p><p>(1)关系表达式：</p><p>a、表达式的数值只能为1（表示为真），或0（表示假）。</p><p>如 9&gt;8这个关系表达式是真的，所以9&gt;8这个表达式的数值就是1。</p><p>如 7&lt;6这个关系表达式是假的，所以7&lt;6这个表达式的数值就是0</p><p></br>  b、考试最容易错的：就是int x=1,y=0,z=2;</p><p>x&lt;y&lt;z是真还是假？带入为1&lt;0&lt;2，从数学的角度出发肯定是</p><p>错的，但是如果是C语言那么就是正确的！因为要1&lt;0为假得到0，表达式就变成</p><p>了0&lt;2那么运算结果就是1，称为了真的了！</p><p></br> c、等号和赋值的区别！一定记住“=”就是赋值，“= =”才是等号。虽然很多人可以背</p><p>诵，但我依然要大家一定好好记住，否则，做错了，我一定会强烈的鄙视你！</p><p>(2)逻辑表达式：</p><p><font color="red">核心：表达式的数值只能为1（表示为真），或0（表示假）。</font></p><p>(a)  共有&amp;&amp;   ||   ！ 三种逻辑运算符号。</p><p>(b) ！&gt;&amp;&amp;&gt;||  优先的级别。</p><p>©  注意短路现象。考试比较喜欢考到。详细请见书上例子，一定要会做例1和例2</p><p>(d)  表示 x 小于0大于10的方法。</p><blockquote><p><code>0&lt;x&lt;10是不行的（一定记住）。是先计算0&lt;x 得到的结果为1或则0；再用0，或1与10比较得到的总是真（为1）。所以一定要用 (0&lt;x)&amp;&amp;(x&lt;10)表示比0大比10小.</code></p></blockquote><p>(3)if 语句</p><p>a、else 是与最接近的if且没有else的语句匹配。</p><p>b、交换的程序写法：t=x；x=y；y=t；</p><p>c、if（a&lt;b）t=a;a=b;b=t;</p><p>if（a&lt;b）{t=a;a=b;b=t;}两个的区别，考试多次考到了！</p><p>d、单独的if语句：if（a&lt;b）t=a；</p><p>标准的if语句：if（a&lt;b）min=a；</p><p>else  min=b；</p><p>嵌套的if语句：if（a&lt;b）</p><p>if（b&gt;c）printf(“ok!”)；</p><p>多选一的if语句if（a= =t）printf(“a”);</p><p>else if（b= =t）printf(“b”);</p><p>else if（c= =t）printf(“c”);</p><p>else pritnf(“d”);</p><p>通过习题，要熟悉以上几种if语句！</p><p>经典考题：结合上面四种if语句题型做题，答错了，请自行了断！预备，开始！</p><p>int  a=1，b=0；</p><p>if（！a）b++；</p><p>else if（a= =0）</p><p>if（a）b+=2；</p><p>else b+=3；请问b的值是多少？</p><p>如果没有看懂题目，你千万不要自行了断，这样看得懂不会做的人才会有理由的活着。</p><p>正确的是b为3。</p><p>int  a=1，b=0；</p><p>if（！a）b++；    是假的不执行</p><p>elseif（a= =0）    是假的执行</p><p>if（a）b+=2； 属于else if的嵌套if语句，不执行。</p><p>elseb+=3；        if-else-if语句没有一个正确的，就执行else的语句！</p><p></br>(4)条件表达式：</p><p>表达式1 ？表达式2 ：表达式3</p><p>a、考试口诀：<font color="red">真前假后</font>。</p><p>b、注意是当表达式1的数值是非0时，才采用表达式2的数值做为整个运算结果，当表达式1的数值为0时，就用表达式3的数值做为整个的结果。</p><p>c、int a=1，b=2，c=3，d=4，e=5；</p><p>k=a&gt;b？c：d&gt;e？d：e;求k的数值时多少？  答案为san</p><p></br>(5)switch语句：</p><p>(a) 执行的流程一定要弄懂！上课时候详细的过程讲了，请自己一定弄懂!</p><p>(b)注意有break 和没有break的差别，书上的两个例子，没有break时候，只要有一个case匹配了，剩下的都要执行，有break则是直接跳出了swiche语句。break在C语言中就是分手，一刀两断的意思。</p><p>© switch只可以和break一起用，不可以和continue用。</p><p><font color="red">(d) switch(x)   x：是整型常量，字符型常量，枚举型数据。</p><p>{case 1: ….     不可以是变量。</p><p>case 2: ….</p><p>}</font></p><p>(e)switch是必考题型，请大家一定要完成书上的课后的switch的习题。<br></font></p><p>## <center>第四章</center><br><font face="方正粗黑宋简体" ><br>(1)三种循环结构：</p><p>(a)for（） ； while()；  do- while()三种。</p><p>(b)for循环当中必须是两个分号，千万不要忘记。</p><p>©写程序的时候一定要注意，循环一定要有结束的条件，否则成了死循环。</p><p>d) do-while()循环的最后一个while();的分号一定不能够丢。（当心上机改错），<font color="red">do－while</font>循环是至少执行一次循环。</p><p></br>(2) break 和  continue的差别</p><p>记忆方法：</p><p>break：是<font color="red">打破</font>的意思，（破了整个循环）所以看见break就退出整个一层循环。</p><p>continue： 是继续的意思，（继续循环运算），但是要结束本次循环，就是循环体内剩下的语句不再执行，跳到循环开始，然后判断循环条件，进行新一轮的循环。</p><p></br>(3)嵌套循环</p><p>就是有循环里面还有循环，这种比较复杂，要一层一层一步一步耐心的计算，一般记住两层是处理二维数组的。</p><p></br>(4)while（（c=getchar()）!=’\n’） 和</p><p>while（c=getchar() !=’\n’）的差别</p><p>先看a = 3 != 2  和 （a=3）！=2 的区别：</p><p>（！=号的级别高于=号 所以第一个先计算 3！=2） 第一个a的数值是得到的1；第二个a的数值是3。</p><p>考试注意点: 括号在这里的重要性。</p><p></br>(5)每行输出五个的写法：</p><pre><code>for（i=0；i&lt;=100；i++）{printf（“%d”，i）； if(（i+1)%5==0)printf(“\n”); 如果i是从1开始的话，就是if(i%5==0)printf(“\n”);}</code></pre><p></br>(6)如何整除一个数：i%5==0表示整除5</p><p>I%2==0表示整除2，同时表示是偶数！</p><p></br>(7)输入123，输出<font color="red">321逆序输出</font>数据</p><pre><code>int i=123;       while（i！=0）{  printf（“%d”，i%10）；i=i/10;}</code></pre><p></br>(8)for只管后面一个语句：</p><pre><code>inti=3；for（i=3；i&lt;6;i++）：printf(“#”)：                请问最终打印几个#号？答案为一个！</code></pre><p></br>(9)不停的输入，直到输入# 停止输入！      不停的输入，直到输入$停止输入！</p><p>while( (x=getchar())!=’ # ’ )                 while( (x=getchar())!=’$ ’ )</p><p>不停的输入，直到遇到？停止输入！</p><p>while((x=getchar())!=’ ? ’)   解说：一定要注意这种给出了条件，然后如何去写的方法！</p><p></br>(10)for循环和switch语句的和在一起考题！</p><p></br>(11)<font color="red">多次出现的考题：</font></p><p>intk=1                       int k=1；</p><p>while（- -k）；                while（k–）；</p><p>printf（“%d”，k）；           printf（“%d”，k）；</p><p><font color="red">结果为0                     结果为-1</font><br></font></p><h2 id="center-第五章-center"><center>第五章</center></h2><font face="方正粗黑宋简体" >  1、函数：是具有一定功能的一个程序块，是C语言的基本组成单位。<p>2、函数不可以嵌套定义。但是可以嵌套调用。</p><p>3、函数名缺省返回值类型，默认为 int。</p><p>4、C语言由函数组成，但有且仅有一个main函数！是程序运行的开始！</p><p>5、如何判断a是否为质数：背诵这个程序！</p><pre><code>void  iszhishu（ int a ）{  for（i=2；i&lt;a/2；i++）    if(a%i==0) printf（“不是质数”）;   printf(“是质数！”)；}</code></pre><p>6、<font color="red">如何求阶层</font>：n! 背诵这个程序！</p><pre><code>   int fun(int n){  int p=1;for(i=1;i&lt;=n;i++) p=p*i;return p;}</code></pre><p>7、函数的参数可以是常量，变量，表达式，甚至是<font color="red">函数调用</font>。</p><pre><code>  add（int x，int y）{returnx+y；}  main（）{ int sum； sum=add（add（7,8），9）；请问sum的结果是多少？ 结果为24}</code></pre><p>8、 函数的参数，返回数值（示意图）：</p><p>9、一定要注意参数之间的传递</p><p>实参和形参之间 传数值，和传地址的差别。（考试的重点）</p><p>传<font color="red">数值</font>的话，形参的变化<font color="red">不会改变</font>实参的变化。</p><p>传<font color="red">地址</font>的话，形参的变化就会<font color="red">有可能改变</font>实参的变化。</p><p></br>10、函数声明的考查：</p><p>一定要有：函数名，函数的返回类型，函数的参数类型。<font color="red">不一定要有：形参的名称。</font></p><p>填空题也可能会考到！以下是终极难度的考题。打横线是函数声明怎么写！</p><pre><code>int*fun（int a[] , int b[]）             {…………..</code></pre><p>}已经知道函数是这样。这个函数的正确的函数声明怎么写？<br><u><br>int *fun（int *a , int *b）               这里是函数声明的写法，注意数组就是指针</p><p>int *fun（int a[] , int b[]）              这种写法也是正确的</p><p>int *fun（int b[] , int c[]）              这种写法也是正确的，参数的名称可以随便写</p><p>int *fun（int * , int *）                这种写法也是正确的，参数的名称可以不写 </u></p><p></br>11、要求掌握的库函数：</p><p>a、库函数是已经写好了函数，放在仓库中，我们只需要如何去使用就可以了！</p><p>b、以下这些库函数经常考到，所以要背诵下来。</p><p>abs()、 sqrt()、fabs()、pow()、sin()  其中pow(a，b)是重点。23是由pow(2，3)表示的。</p><p></font></p><h2 id="center-第六章-center"><center>第六章</center></h2><font face="方正粗黑宋简体" >  <font color="red">指针一定要初始化NULL<p>动态存储</font></p><pre><code>   #include&lt;malloc&gt;  int *pP=(int*)malloc(sizeof(int)*n)</code></pre><p><u>指针变量的本质</u>是用来放地址，<u>而一般的变量</u>是放数值的。</p><p>1、int *p 中   <em>p和p的差别：简单说</em>p是数值，p是地址！</p><p>*p可以当做变量来用；*的作用是取后面地址p里面的数值</p><p>p是当作地址来使用。可以用在scanf函数中：scanf（“%d”，p）；</p><p></p><p></br>2、*p++ 和 （*p）++的之间的差别：改错题目中很重要！考试超级重点</p><p>*p++是 地址会变化。      口诀：取当前值，然后再移动地址！</p><p>（*p）++ 是数值会要变化。 口诀：取当前值，然后再使数值增加1。</p><p><strong>例题：</strong></p><pre><code>int *p,a[]={1,3,5,7,9};      p=a;      请问*p++和（*p）++的数值分别为多少？</code></pre><p>*p++：  这个本身的数值为1。由于是地址会增加一，所以指针指向数值3了。</p><p>（*p）++ 这个本身的数值为1。由于有个++表示数值会增加，指针不移动，但数值1由于自加了一次变成了2。</p><p></br>3、二级指针：</p><p>*p：一级指针：存放变量的地址。</p><p>**q：二级指针：存放一级指针的地址。</p><p>常考题目：   int x=7；</p><p>int*p=&amp;x，**q=p；</p><p>问你：*p为多少？*q为多少？**q为多少？</p><p>7          p         7</p><p>再问你：**q=&amp;x的写法可以吗？</p><p>不可以，因为二级指针只能存放一级指针的地址。</p><p></br>4、三名主义：（考试的重点）</p><p>数组名：表示第一个元素的地址。数组名不可以自加，他是地址常量名。（考了很多次）</p><p>函数名：表示该函数的入口地址。</p><p>字符串常量名：表示第一个字符的地址。</p><p></br>5、移动指针（经常加入到考试中其他题目综合考试）</p><p>char *s=“meikanshu”</p><p>while（*s）{printf（“%c”，*s）；s++；}</p><p>这个s首先会指向第一个字母m然后通过循环会一次打印出一个字符，s++是地址移动，打印了一个字母后，就会移动到下一个字母！</p><p></br>6、<font color="red">指针变量两种初始化（一定要看懂）</font></p><p>方法一：int a=2，*p=&amp;a；(定义的同时初始化)</p><p>方法二：int a=2，*p；　 (定义之后初始化)</p><p>p=&amp;a；</p><p></br>7、<font color="red">传数值和传地址（每年必考好多题目）</font></p><pre><code>void fun（int a，intb）                    void fun（int *a，int *b）            { int t ；                                       { int t ；  t=a；a=b；b=t；                                  t=*a；*a=*b；*b=t；}                                               }main（）                                     main（）{ int x=1，y=3，                             { int x=1，y=3，  fun（x，y）；                                 fun（&amp;x，&amp;y）  printf（“%d，%d”，x，y）；                    printf（“%d，%d”，x，y）；}                                             }这个题目答案是1和3。                        这个题目的答案就是3和1。传数值，fun是用变量接受，所以fun中     传地址，fun用指针接受！这个时候fun的交换不会影响到main中的x和y 。        中的交换，就会影响到main中的x和y。传数值，形参的变化不会影响实参。          传地址形参的变化绝大多数会影响到实参！</code></pre><p></p><p>8、函数返回值是地址，一定注意这个*号（上机考试重点）</p><pre><code>int *fun（int*a，int *b）   可以发现函数前面有个*，这个就说明函数运算结果是地址                            { if（*a&gt;*b）returna；     return a 可以知道返回的是a地址。  else return b；                                                                        }main（）{ int x=7，y=8，*max；  max = fun（&amp;x，&amp;y）；      由于fun（&amp;x，&amp;y）的运算结果是地址，所以用max来接收。  printf（“%d，%d”，）   }                                             </code></pre><p>9、考试重要的话语：</p><p>指针变量是存放地址的。并且指向哪个就等价哪个，所有出现*p的地方都可以用它等价的代替。例如：int a=2，*p=&amp;a；</p><p>*p=*p+2;</p><p>(由于<em>p指向变量ａ,所以指向哪个就等价哪个，这里</em>p等价于ａ，可以相当于是a=a+2)</p><p></font></p><p></p><h2 id="center-第七章-center"><center>第七章</center></h2><font face="方正粗黑宋简体" >  数组： 存放的类型是一致的。多个数组元素的地址是连续的。<p>1、一维数组的初始化：</p><pre><code>inta[5]={1,2,3,4,5};  合法inta[5]={1,2,3, };    合法inta[]={1,2,3,4,5};   合法,常考，后面决定前面的大小！inta[5]={1,2,3,4,5,6};不合法，赋值的个数多余数组的个数了</code></pre><p>2、一维数组的定义；</p><pre><code>int a[5]；注意这个地方有一个重要考点，定义时数组的个数不是变量一定是常量。int a[5]                 合法，最正常的数组int a[1+1]               合法，个数是常量2，是个算术表达式int a[1/2+4]             合法，同样是算术表达式int x=5,int a[x];           不合法，因为个数是x，是个变量，非法的，define P 5  int a[P]       合法，define 后的的P是符号常量，只是长得像变量</code></pre><p>3、二维数组的初始化</p><pre><code>inta[2][3]={1,2,3,4,5,6};               合法，很标准的二维的赋值。inta[2][3]={1,2,3,4,5, };                合法，后面一个默认为0。inta[2][3]={{1,2,3,} {4,5,6}};           合法，每行三个。inta[2][3]={{1,2,}{3,4,5}};             合法，第一行最后一个默认为0。inta[2][3]={1,2,3,4,5,6,7};              不合法，赋值的个数多余数组的个数了。int a[2][]={1,2,3,4,5,6};                不合法，不可以缺省列的个数。int a[][3]={1,2,3,4,5,6};                合法，可以缺省行的个数。</code></pre><p><strong>补充：</strong></p><p>(1)一维数组的重要概念：</p><p>对<code>a[10]</code>这个数组的讨论。</p><p>１、a表示数组名，是第一个元素的地址，也就是元素<code>a[0]</code>的地址。（等价于&amp;a）</p><p>２、a是地址常量，所以只要出现a++，或者是a=a+2赋值的都是错误的。</p><p>３、a是一维数组名，所以它是列指针，也就是说a+1是跳一列。</p><p>对<code>a[3][3]</code>的讨论。</p><p>１、a表示数组名，是第一个元素的地址，也就是元素<code>a[0][0]</code>的地址。</p><p>２、a是地址常量，所以只要出现a++，或者是a=a+2赋值的都是错误的。</p><p>３、a是二维数组名，所以它是行指针，也就是说a+1是跳一行。</p><p>４、<code>a[0]、a[1]、a[2]</code>也都是地址常量，不可以对它进行赋值操作，同时它们都是列指针，<code>a[0]+1，a[1]+1，a[2]+1</code>都是跳一列。</p><p>５、注意a和<code>a[0] 、a[1]、a[2]</code>是不同的，它们的基类型是不同的。前者是一行元素，后三者是一列元素。</p><p></br>(2) 二维数组做题目的技巧：</p><p>如果有<code>a[3][3]={1,2,3,4,5,6,7,8,9}</code>这样的题目。</p><p>步骤一：把他们写成：　　　　　　第一列　第二列　第三列</p><pre><code>a[0]à　 1 　　 2  　　3   －&gt;第一行a[1]à   4   　　5  　　6　 —&gt;第二行a[2]à   7   　　8  　　9　 －&gt;第三行</code></pre><p>步骤二：这样作题目间很简单：</p><p><code>*(a[0]+1)</code>我们就知道是第一行的第一个元素往后面跳一列，那么这里就是<code>a[0][1]</code>元素，所以是１。</p><p><code>*(a[1]+2)</code>我们就知道是第二行的第一个元素往后面跳二列。那么这里就是<code>a[1][2]</code>元素，所以是6。</p><p>一定记住：只要是二维数组的题目，一定是写成如上的格式，再去做题目，这样会比较简单。</p><p></br>(3) 数组的初始化，一维和二维的，一维可以不写，二维第二个一定要写</p><pre><code>     int a[]={1，2} 合法。  int a[][4]={2，3，4}不合法。  但int a[4][]={2，3，4}合法。</code></pre><p>(4) 二维数组中的行指针</p><p>int a[1][2]；</p><p>其中a现在就是一个行指针，a+1跳一行数组元素。  搭配<code>（*）p[2]</code>指针</p><p>a[0]，a[1]现在就是一个列指针。a[0]+1 跳一个数组元素。搭配*p[2]指针数组使用</p><p></br>(5) 还有记住脱衣服法则：超级无敌重要</p><pre><code>   a[2]  变成   *（a+2）  a[2][3]变成 *（a+2）[3]再可以变成  *（*（a+2）+3）</code></pre><p>这个思想很重要！</p><p></p><center><b>其它考试重点</b></center><p>文件的复习方法：</p><p>把上课时候讲的文件这一章的题目要做一遍，一定要做，基本上考试的都会在练习当中。</p><p>(1)字符串的 strlen() 和 strcat（） 和strcmp（） 和strcpy（）的使用方法一定要记住。他们的参数都是地址。其中strcat（）和strcmp（）有两个参数。</p><p></p><p>(2)strlen 和 sizeof的区别也是考试的重点；</p><p></p><p>(3)define  f（x）（x<em>x）  和  define   f（x） x</em>x 之间的差别。一定要好好的注意这写容易错的地方，替换的时候有括号和没有括号是很大的区别。</p><pre><code>(4)int  *p；p= （int *）malloc（4）；p= （int *）malloc（sizeof（int））；以上两个等价</code></pre><p>当心填空题目，malloc的返回类型是 void *</p><p></p><p>(6)函数的递归调用一定要记得有结束的条件，并且要会算简单的递归题目。要会作递归的题目</p><p></p><p></br>(7)结构体和共用体以及链表要掌握最简单的。typedef考的很多，而且一定要知道如何引用结构体中的各个变量，链表中如何填加和删除节点，以及何如构成一个简单的链表，一定记住链表中的节点是有两个域，一个放数值，一个放指针。</p><pre><code>       &lt;font color=&quot;red&quot;&gt;   内存计算                  结构体                      共用体                     Int （4）char（1）double（8）     总内存 16 （最大内存为单位，存不下再开辟一个单元） 8（最大内存为单位，不停迭代） 结构体成员：结构体变量.成员 （*p）.成员  p-&gt;成员名成员为数组时输入不用&amp;其他都要只能对最低一级成员操作strcut 结构体｛成员类型成员名｝变量名列表 可以嵌套使用链表及动态链表  在成员中加个指针&lt;/font&gt;</code></pre><p>(8)函数指针的用法（*f）（）记住一个例子：</p><pre><code>　　　　　　int add(int x, int y){....} main(){ int  （*f）（）;  f=add; }</code></pre><p>赋值之后：合法的调用形式为１、add(2，3)；</p><pre><code>２、f(2，3)；３、（*f）（2，3）</code></pre><p>(9)两种重要的数组长度：</p><p>char a[]={‘a’,’b’,’c’};　　数组长度为３，字符串长度不定。sizeof(a)为３。</p><p>char <code>a[5]</code>={ ‘a’,’b’,’c’}　　数组长度为５，字符串长度３。sizeof(a)为５。</p><p>(10)scanf 和　gets的数据：</p><pre><code>如果输入的是　good  good study！那么scanf(“%s”,a); 只会接收　good.　考点：不可以接收空格。     gets(a); 会接收　good good study!　考点：可以接收空格。</code></pre><p>(11)共用体的考查：</p><pre><code>union TT{ int a;charch[2];}</code></pre><p>考点一：　sizeof (struct TT) = 4;</p><p>(12)<font color="red">“文件包含”的考查点：</font></p><pre><code>　　　    no1.c                  no2.c#include”no2.c”main(){ add(29 , 33);} int add(int a,int b){return a+b;}</code></pre><p></p><p>这里一个C语言程序是有两个文件组成，分别是no1.c， no2.c。那么no1.c中最开始有个<font color="red">#include”no2.c”他表示把第二个文件的内容给包含过来，那么no1.c中调用add()</font>函数的时候就可以了把数值传到no2.c中的被调用函数add()了。</p><p><font color="red">一个文件必须要有main</font>函数。　这句话错了。　例如：no2.c就没有。</p><p><font color="red">头文件一定是以.h结束</font>的。　这句话错了。例如：no1.c中就是<font color="red">#include”no2.c”以.c</font>结尾的。</p><p></br>(13)<font color="red">指针迷惑的考点：</font></p><pre><code>char ch[]=”iamhandsome”;char *p=ch;问你 *（p+2） 和 *p+2的结果是多少？      ‘m’       ‘k’  结果是这两个，想不通的同学请作死的想！想通为止！</code></pre><p>(14)数组中放数组一定要看懂:</p><pre><code>   int a[8]={1,2,3,4,4,3,2,2};   int b[5]={0};   b[a[3]]++   这个写法要看懂，结果要知道是什么？b[4]++,本身是0，运行完后，b[4]为1了。</code></pre><p>(15)字符串的赋值</p><p>C语言中没有字符串变量，所以用数组和指针存放字符串：</p><pre><code>char  ch[10]={“abcdefgh”};                       对char  ch[10]=“abcdefgh”;                         对char  ch[10]={‘a’,’b’,’c’,’d’,’e’,’f’,’g’,’h’};           对char  *p=“abcdefgh”;                            对char  *p;                                     对p=“abcdefgh”;char  ch[10];                    错了！数组名不可以赋值！          ch=“abcdefgh”;char  *p={“abcdefgh”};           错了！不能够出现大括号！</code></pre><p>(16)字符串赋值的函数背诵：一定要背诵，当心笔试填空题目。</p><p>把s指针中的字符串复制到t指针中的方法</p><p>1、while（ （*t=*s）！=null）{s++；t++；}  完整版本</p><p>2、while（ *t=*s ）{s++；t++；}           简单版本</p><p>3、while（ *t++=*s++）；                   高级版本</p><p></br>(17)typedef 是取别名，不会产生新的类型，他同时也是关键字</p><p>考点一：typedef int qq  那么 int x 就可以写成 qq x</p><p>考点二：typedef int *qq  那么 int *x就可以写成 qq x</p><p></br>(18)static 考点是一定会考的！复习相关的习题。</p><p>static int x；默认值为0。</p><p>int x：默认值为不定值。</p><p></br>(19)函数的递归调用一定会考！至少是2分。</p><p><font color="red">常用知识点补充</p><p>运算符</p><p>1.   优先级</p><p></p><p>2.   结合方向</p><p>自右向左：单目运算符，条件运算符，赋值运算符。</font><br></font></p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css基础知识总结</title>
      <link href="/2020/04/21/css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2020/04/21/css%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><a href="http://css.cuishifeng.cn/" target="_blank" rel="noopener">css查询文档</a></p><h1>css简介</h1><ul><li>CSS 指层叠样式表 (Cascading Style Sheets)</li><li>样式定义如何显示 HTML 元素</li><li>样式通常存储在样式表中</li><li>把样式添加到 HTML 4.0 中，是为了解决内容与表现分离的问题</li><li>外部样式表可以极大提高工作效率</li><li>外部样式表通常存储在 CSS 文件中</li><li>多个样式定义可层叠为一</li></ul><blockquote><p><strong>注意</strong>：样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p></blockquote><h2 id="1-引用方式">1.引用方式</h2><h3 id="1-1-内联样式表">1.1 内联样式表</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;/head&gt;&lt;body style=&quot;background-color:#b0c4de;&quot;&gt;&lt;h1&gt;我的 CSS web 页!&lt;/h1&gt;&lt;p&gt;你好世界！这是来自 runoob 菜鸟教程的实例。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="1-2-内部样式表">1.2 内部样式表</h3><blockquote><p>内部样式，指的就是把CSS代码和HTML代码放在同一个文件中，其中CSS代码放在<code>&lt;style&gt;&lt;style/&gt;</code>标签对内。并且<code>&lt;style&gt;</code>标签是放在<code>&lt;head&gt;</code>标签内的。</p></blockquote><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;style&gt;body {background-color:#b0c4de;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;我的 CSS web 页!&lt;/h1&gt;&lt;p&gt;你好世界！这是来自 runoob 菜鸟教程的实例。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="1-3-外部样式">1.3 外部样式</h3><blockquote><p>所谓的“外部样式表”，就是把CSS代码和HTML代码都单独放在不同文件中，然后在HTML文档中使用link标签来引用CSS样式表。</p></blockquote><ul><li><strong>mystyle.css文件:</strong></li></ul><pre class=" language-language-body"><code class="language-language-body">background-color:#b0c4de;}</code></pre><ul><li><strong>html页面</strong></li></ul><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;!-- 在HTML页面中引用文件名为newfile的css文件 --&gt;&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;mystyle.css&quot;/&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;我的 CSS web 页!&lt;/h1&gt;&lt;p&gt;你好世界！这是来自 runoob 菜鸟教程的实例。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="1-4-多重样式优先级">1.4 多重样式优先级</h3><ul><li>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</li><li><strong>一般情况下，优先级如下：</strong><br>内联样式）Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式</li></ul><blockquote><p><strong>注意：</strong> 如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。</p></blockquote><h3 id="1-5-表单样式">1.5 表单样式</h3><pre><code>input[type=&quot;text&quot;]{    width:150px;    display:block;    margin-bottom:10px;    background-color:yellow;}input[type=&quot;button&quot;]{    width:120px;    margin-left:35px;    display:block;}</code></pre><h2 id="2-选择器">2.选择器</h2><p><strong>css规则</strong></p><pre><code>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:  选择器 {    样式属性1:取值1;    样式属性2:取值2;    …… </code></pre><p><strong>css 注释</strong></p><blockquote><p>以&quot; /<code>*</code>&quot; 开始, 以 &quot;<code>*</code>/ &quot;结束:</p></blockquote><pre><code>/*这是个注释*/p{text-align:center;/*这是另一个注释*/color:black;font-family:arial;}</code></pre><p><strong>css选择器</strong></p><table><thead><tr><th style="text-align:center">选择器</th><th style="text-align:center">HTML属性</th><th style="text-align:center">css</th></tr></thead><tbody><tr><td style="text-align:center">id选择器</td><td style="text-align:center">id</td><td style="text-align:center">#</td></tr><tr><td style="text-align:center">class选择器</td><td style="text-align:center">class</td><td style="text-align:center">.</td></tr></tbody></table><p><strong>id 选择器</strong></p><pre><code>&lt;body&gt;&lt;p id=&quot;para1&quot;&gt;Hello World!&lt;/p&gt;&lt;p&gt;这个段落不受该样式的影响。&lt;/p&gt;&lt;/body&gt;</code></pre><pre><code>#para1{    text-align:center;    color:red;}</code></pre><p><strong>class 选择器</strong></p><pre><code>/*所有拥有 center 类的 HTML 元素均为居中*/.center {text-align:center;}/*所有的 p 元素使用 class=&quot;center&quot; 让该元素的文本居中:*/p.center {text-align:center}</code></pre><p><strong>此外，需要注意一下：</strong></p><blockquote><p>一个标签可以同时定义多个class；<br>id也可以写成name，区别在于name是HTML中的标准，而id是XHTML中的标准，现在网页的标准都是使用id，所以大家尽量不要用name属性；</p></blockquote><h3 id="2-1-标签选择器">2.1 标签选择器</h3><pre><code>// 标签即HTML标签，比如body,div,p等div{text-align:center;}</code></pre><h3 id="2-2-属性选择器">2.2 属性选择器</h3><pre><code>/*把包含标题（title）的所有元素变为蓝色*/[title]{    color:blue;}</code></pre><h3 id="2-3-属性和值选择器">2.3 属性和值选择器</h3><p><strong>示例一：</strong></p><pre><code>/*标题title='runoob'元素的边框样式*/[title=runoob]{    border:5px solid green;}</code></pre><p><strong>示例二</strong>：</p><pre><code>/*匹配到下文中的第三个div元素*/div[title=&quot;height&quot;]{    width:100px;    height:100px;    margin-top:2px;    background:pink;&lt;br&gt;}</code></pre><pre><code>&lt;body&gt;    &lt;div title=&quot;width&quot;&gt;&lt;/div&gt;    &lt;div&gt;&lt;/div&gt;    &lt;div title=&quot;height&quot;&gt;&lt;/div&gt;&lt;/body&gt;</code></pre><h3 id="2-4-属性和值的选择器-多值">2.4 属性和值的选择器 - 多值</h3><pre><code>/*指定值的title属性的元素样式的例子，使用（~）分隔属性和值:*/[title~=hello] { color:blue; }/*适用如下：*/&lt;h1 title=&quot;hello world&quot;&gt;Hello world&lt;/h1&gt;&lt;p title=&quot;student hello&quot;&gt;Hello CSS students!&lt;/p&gt;/*指定值的lang属性的元素样式的例子，使用（|）分隔属性和值*/[lang|=en] { color:blue; }/*适用如下：*/&lt;p lang=&quot;en&quot;&gt;Hello!&lt;/p&gt;&lt;p lang=&quot;en-us&quot;&gt;Hi!&lt;/p&gt;&lt;p lang=&quot;en-gb&quot;&gt;Ello!&lt;/p&gt;</code></pre><h3 id="2-5-子选择器">2.5 子选择器</h3><blockquote><ul><li>子元素选择器，就是选中某个元素下的子元素(包括子、孙)，然后对该子元素设置CSS样式。<br><strong>说明：</strong><br>父元素与子元素必须用空格隔开，从而表示选中某个元素下的子元素。</li></ul></blockquote><p><strong>语法：</strong></p><pre><code>父选择器 子元素选择{    样式属性1:取值1;    样式属性2:取值2;    ……}</code></pre><h3 id="2-6-相邻选择器">2.6 相邻选择器</h3><blockquote><p>相邻选择器，就是选中该元素的下一个兄弟元素，在这里注意一点，相邻选择器的操作对象是该元素的同级元素。</p></blockquote><p><strong>语法：</strong></p><pre><code>元素A + 元素A相邻兄弟元素{    样式属性1:取值1;    样式属性2:取值2;    ……}</code></pre><p><strong>示例一：</strong></p><pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;    &lt;title&gt;&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        /*选择“id为lv的元素”的相邻的下一个兄弟元素div，也就是第3个div元素。*/        #lv+div{color:red;}    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;111&lt;/div&gt;    &lt;div id=&quot;lv&quot;&gt;        &lt;p&gt;222&lt;/p&gt;    &lt;/div&gt;    &lt;div&gt;333&lt;/div&gt;    &lt;div&gt;444&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>示例二：</strong></p><pre><code>/*这个只能选择到下面第二行的那个p元素  最后一个不满足紧接在div元素后面这个条件*/div+.box{width:100px; height:100px; background:pink;} 　&lt;div&gt;&lt;/div&gt;    &lt;p class=&quot;box&quot;&gt;&lt;/p&gt;    &lt;p class=&quot;box&quot;&gt;&lt;/p&gt;    &lt;div&gt;&lt;/div&gt;    &lt;p&gt;&lt;/p&gt;    &lt;p class=&quot;box&quot;&gt;&lt;/p&gt;</code></pre><h3 id="2-7-群组选取">2.7 群组选取</h3><blockquote><ul><li>群组选择器，就是同时对几个选择器进行相同的操作。<br><strong>说明：</strong><br>对于群组选择器，两个选择器之间必须用“,”（英文逗号）隔开，不然群组选择器无法生效。</li></ul></blockquote><p><strong>语法：</strong></p><pre><code>选择器A,选择器B,选择器C{    样式属性1:取值1;    样式属性2:取值2;    ……}</code></pre><p><strong>示例一：</strong></p><pre><code>/*同时匹配到下文中的div标签和id为box的p标签*/div,#box{width:100px; height:100px; background:#000;} &lt;div&gt;&lt;/div&gt;&lt;p id=&quot;box&quot;&gt;&lt;/p&gt;</code></pre><h3 id="2-8-伪类选择器-hover">2.8 伪类选择器(:hover)</h3><blockquote><p>:hover在鼠标移到链接上时添加的特殊样式。<br><strong>提示:</strong> :hover 选择器器可用于所有元素，不仅是链接。</p></blockquote><p><strong>示例一：</strong></p><pre><code>img:hover{border:1px solid gray;}</code></pre><h3 id="2-9-CSS-Background-背景">2.9 CSS Background(背景)</h3><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th><th style="text-align:center">示例</th></tr></thead><tbody><tr><td style="text-align:center">background-color</td><td style="text-align:center">背景颜色</td><td style="text-align:center">body {background-color:#b0c4de;}</td></tr><tr><td style="text-align:center">background-image</td><td style="text-align:center">背景图像</td><td style="text-align:center">body {background-image:url(‘paper.gif’);}</td></tr></tbody></table><blockquote><p><strong>background-image</strong> 属性描述了元素的背景图像.<br>默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体.</p></blockquote><p><strong>页面背景图片设置实例:</strong></p><pre><code>body {background-image:url('paper.gif');}</code></pre><blockquote><p>默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。<br>一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，</p></blockquote><pre><code>body{background-image:url('gradient2.png');}</code></pre><blockquote><p>如果图像只在水平方向平铺 (repeat-x), 页面背景会更好些:</p></blockquote><pre><code>body{background-image:url('gradient2.png');background-repeat:repeat-x;}</code></pre><blockquote><p>让背景图像不影响文本的排版（如果你不想让图像平铺，你可以使用</p></blockquote><pre><code>background-repeat属性）:body{background-image:url('img_tree.png');background-repeat:no-repeat;}</code></pre><blockquote><p>以上实例中，背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，我们可以改变图像的位置。<br>可以利用 background-position 属性改变图像在背景中的位置:</p></blockquote><pre><code>body{background-image:url('img_tree.png');background-repeat:no-repeat;background-position:right top;}</code></pre><h2 id="3-CSS-Text-文本">3.CSS Text(文本)</h2><h3 id="3-1-文本颜色">3.1 文本颜色</h3><pre><code>/*颜色的名称*/body {color: red;}/*十六进制值*/h1 {color: #00ff00;}/*一个RGB值*/h2 {color:rgb(255,0,0);}</code></pre><h3 id="3-2-字体颜色-color">3.2 字体颜色(color)</h3><pre><code>p {color:red;}</code></pre><h3 id="3-3-字体样式-Font">3.3 字体样式(Font)</h3><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">font-family</td><td style="text-align:center">字体类型</td></tr><tr><td style="text-align:center">font-size</td><td style="text-align:center">字体大小</td></tr><tr><td style="text-align:center">font-weight</td><td style="text-align:center">字体粗细</td></tr><tr><td style="text-align:center">font-style</td><td style="text-align:center">字体斜体</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">颜色</td></tr></tbody></table><h3 id="3-4-字体类型-font-family">3.4 字体类型(font-family)</h3><blockquote><p>默认情况下，浏览器的字体是宋体。中文字体常用的有宋体、微软雅黑，英文字体比较常用的是Times New Roman、Arial。</p></blockquote><h3 id="3-5-字体大小-font-size">3.5 字体大小(font-size)</h3><blockquote><p>font-size的属性值可以有两种方式，一种是使用关键字(实际开发中，比较少使用这种方式来表达字体大小，一般都是采用像素作为单位的数值)；二是使用像素做单位的数值。</p></blockquote><pre><code>p {font-size:15px;}</code></pre><blockquote><p>px全称“pixel”（像素）。px就是一张图片中最小的点，或者是计算机屏幕最小的点。</p></blockquote><h3 id="3-6-字体粗细-font-weight">3.6 字体粗细(font-weight)</h3><blockquote><p>字体粗细和字体大小（font-size）是不一样的，粗细指的是字体的“肥胖”，大小指的是高和宽。<br>粗细值可以取关键字（常用normal和bold）和100~900的数值（不建议使用数值）。</p></blockquote><table><thead><tr><th style="text-align:center">font-weight属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">normal</td><td style="text-align:center">默认值，正常体。相当于数值400</td></tr><tr><td style="text-align:center">lighter</td><td style="text-align:center">较细</td></tr><tr><td style="text-align:center">bold</td><td style="text-align:center">较粗。相当于数值700</td></tr><tr><td style="text-align:center">bolder</td><td style="text-align:center">很粗（其实效果跟bold差不多）</td></tr></tbody></table><h3 id="3-7-字体斜体-font-style">3.7 字体斜体(font-style)</h3><table><thead><tr><th style="text-align:center">font-style属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">normal</td><td style="text-align:center">默认值，正常体</td></tr><tr><td style="text-align:center">italic</td><td style="text-align:center">斜体，这是一个属性</td></tr><tr><td style="text-align:center">oblique</td><td style="text-align:center">将字体倾斜，将没有斜体变量（italic）的特殊字体，要应用oblique</td></tr></tbody></table><h2 id="4-文本样式-Text">4.文本样式(Text)</h2><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">text-decoration</td><td style="text-align:center">下划线、删除线、顶划线</td></tr><tr><td style="text-align:center">text-transform</td><td style="text-align:center">文本大小写</td></tr><tr><td style="text-align:center">font-varient</td><td style="text-align:center">将英文文本转换为“小型”大写字母</td></tr><tr><td style="text-align:center">text-indent</td><td style="text-align:center">段落首行缩进</td></tr><tr><td style="text-align:center">text-align</td><td style="text-align:center">文本水平对齐方式</td></tr><tr><td style="text-align:center">line-height</td><td style="text-align:center">行高</td></tr><tr><td style="text-align:center">letter-spacing</td><td style="text-align:center">字距</td></tr><tr><td style="text-align:center">word-spacing</td><td style="text-align:center">词距</td></tr></tbody></table><h3 id="4-1-下划线、删除线、顶划线-text-decoration">4.1 下划线、删除线、顶划线(text-decoration)</h3><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">none</td><td style="text-align:center">默认值，可以用这个属性值也可以去掉已经有下划线或删除线或顶划线的样式</td></tr><tr><td style="text-align:center">underline</td><td style="text-align:center">下划线，在HTML中使用<code>&lt;u&gt;</code>表示。一般用于文章的重点标明。</td></tr><tr><td style="text-align:center">line-through</td><td style="text-align:center">删除线，在HTML中使用<code>&lt;s&gt;</code>表示。一般出现在电子商务网站中用于促销。</td></tr><tr><td style="text-align:center">overline</td><td style="text-align:center">顶划线</td></tr></tbody></table><blockquote><p>text-decoration 属性用来设置或删除文本的装饰。<br>从设计的角度看 text-decoration属性主要是用来删除链接的下划线：</p></blockquote><pre><code>a {text-decoration:none;}/*眉题（上划线）*/h1 {text-decoration:overline;}/*贯穿线*/h1 {text-decoration:line-through;}/*下划线*/h1 {text-decoration:underline;}</code></pre><h3 id="4-2-文本大小写转换-text-transform">4.2 文本大小写转换(text-transform)</h3><blockquote><p>文本转换属性是用来指定在一个文本中的大写和小写字母。<br>可用于所有字句变成大写或小写字母，或每个单词的首字母大写。</p></blockquote><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">none</td><td style="text-align:center">默认值，无转换发生</td></tr><tr><td style="text-align:center">uppercase</td><td style="text-align:center">转换成大写</td></tr><tr><td style="text-align:center">lowercase</td><td style="text-align:center">转换成小写</td></tr><tr><td style="text-align:center">capitalize</td><td style="text-align:center">将每个英文单词的首字母转换成大写，其余无转换发生</td></tr></tbody></table><pre><code>/*大写字母*/p.uppercase {text-transform:uppercase;}/*小写字母*/p.lowercase {text-transform:lowercase;}/*大写字母:首字母大写 This is some text. -- &gt;This Is Some Text. */p.capitalize {text-transform:capitalize;}</code></pre><h3 id="4-3-文本首行缩进-text-indent">4.3 文本首行缩进(text-indent)</h3><blockquote><p>文本缩进属性是用来指定文本的第一行的缩进。text-indent的属性值应该是字体font-size属性值的两倍。</p></blockquote><pre><code>/*缩进*/p {text-indent: 50px}</code></pre><h3 id="4-4-文本水平对齐-text-align">4.4 文本水平对齐(text-align)</h3><pre><code>/*默认值，左对齐*/p.main {text-align:left;}/*居中对齐*/body {text-align:center;}/*右对齐*/p.date {text-align:right;}</code></pre><h3 id="4-5-文本行高-text-height">4.5 文本行高(text-height)</h3><blockquote><p>很多书本上称line-height为行间距，这是不严谨的叫法。行高，顾名思义就是“一行的高度”，而行间距指的是“两行文本之间的距离”，大家稍微想一下就知道这是两个不一样的概念。</p></blockquote><pre><code>/*行高度设置*/p {text-height: 20px}</code></pre><h3 id="4-6-字符间距-letter-spacing">4.6 字符间距(letter-spacing)</h3><blockquote><p>一个中文算一个字，一个英文字母也叫一个字。</p></blockquote><pre><code>&lt;style&gt;h1 {letter-spacing:2px;}h2 {letter-spacing:-3px;}&lt;/style&gt;</code></pre><h3 id="4-7字间距-word-spacing">4.7字间距(word-spacing)</h3><blockquote><p>定义词间距，以空格为基准进行调节，如果多个单词被连在一起，则被word-spacing视为一个单词；如果汉字被空格分隔，则分隔的多个汉字就被视为不同的单词，word-spacing属性此时有效。</p></blockquote><pre><code>p { word-spacing:30px;}</code></pre><h2 id="5-边框-Border">5.边框(Border)</h2><p><a href="https://www.runoob.com/css/css-border.html" target="_blank" rel="noopener">详见参考</a></p><p><strong>边框样式(border-style)</strong><br><a href="https://www.runoob.com/try/try.php?filename=trycss_border-style" target="_blank" rel="noopener">详见参考</a><br><strong>边框宽度(border-width)</strong><br><a href="https://www.runoob.com/try/try.php?filename=trycss_border-width" target="_blank" rel="noopener">详见参考</a><br><strong>边框颜色(border-color)</strong></p><pre><code>p.one {    border-style:solid;    border-color:red;}p.two {    border-style:solid;    border-color:#98bf21;}</code></pre><h3 id="5-1-边框简写-border">5.1 边框简写(border)</h3><pre><code>/*正常写法*/border-width:5px;border-style:solid;border-color:red;/*简写等效于如上*/border:5px solid red;</code></pre><blockquote><p>对于border:1px solid gray;这种简洁写法，第一个值指的是框的大小（border-width），第二个值指的是框的样式（border-style），第三个值指的是框的颜色（border-color）。</p></blockquote><h2 id="6-背景-background">6.背景(background)</h2><p><a href="https://www.runoob.com/css/css-background.html" target="_blank" rel="noopener">详见参考</a><br><a href="http://www.lvyestudy.com/les_cj/cj_6.3.aspx" target="_blank" rel="noopener">详见参考</a></p><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">background-color</td><td style="text-align:center">定义背景颜色</td></tr><tr><td style="text-align:center">background-image</td><td style="text-align:center">定义背景图像的路径</td></tr><tr><td style="text-align:center">background-repeat</td><td style="text-align:center">定义背景图像显示方式，例如纵向平铺、横向平铺</td></tr><tr><td style="text-align:center">background-position</td><td style="text-align:center">定义背景图像在元素哪个位置</td></tr><tr><td style="text-align:center">background-attachment</td><td style="text-align:center">定义背景图像是否随内容而滚动</td></tr></tbody></table><h3 id="6-1-背景颜色-background-color">6.1 背景颜色(background-color)</h3><pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;    &lt;title&gt;background-color属性&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        /*设置所有div元素的共同样式*/        div {width:100px;height:60px;        }        /*设置3个div元素的个别样式*/        #div1{background-color:red;}        #div2{background-color: #F3DE3F;}        #div3{background-color: #0AF7FB;}    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;div1&quot;&gt;背景颜色值为red&lt;/div&gt;    &lt;div id=&quot;div2&quot;&gt;背景颜色值为#F3DE3F &lt;/div&gt;    &lt;div id=&quot;div3&quot;&gt;背景颜色值为#0AF7FB &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="6-2-color和background-color区别">6.2 color和background-color区别</h3><pre><code>#p1 {    width:290px;    /*指文字颜色*/    color:white;    /*背景色*/    background-color:red;}</code></pre><h3 id="6-3-背景图像-background-image">6.3 背景图像(background-image)</h3><blockquote><p>默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体.<br>页面背景图片设置实例:</p></blockquote><pre><code>body {background-image:url('paper.gif');}</code></pre><blockquote><p>默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。<br>一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，</p></blockquote><pre><code>&lt;style type=&quot;text/css&quot;&gt;#div1 {    /*给某个元素设置背景图像，元素要有一定的宽度和高度，背景图片才会显示出来。*/    width:143px;    height:220px;    background-image:url(&quot;piece.jpg&quot;);}&lt;/style&gt;</code></pre><h3 id="6-4-图像显示方式-background-repeat">6.4 图像显示方式(background-repeat)</h3><p><a href="http://www.lvyestudy.com/les_cj/cj_6.5.aspx" target="_blank" rel="noopener">详见参考</a></p><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">no-repeat</td><td style="text-align:center">表示不平铺</td></tr><tr><td style="text-align:center">repeat</td><td style="text-align:center">默认值，表示在水平方向（x轴）和垂直方向（y轴）同时平铺</td></tr><tr><td style="text-align:center">repeat-x</td><td style="text-align:center">表示在水平方向（x轴）平铺</td></tr><tr><td style="text-align:center">repeat-y</td><td style="text-align:center">表示在垂直方向（y轴）平铺</td></tr></tbody></table><blockquote><p>如果图像只在水平方向平铺 (repeat-x), 页面背景会更好些:</p></blockquote><pre><code>body {background-image:url('gradient2.png');background-repeat:repeat-x;}</code></pre><blockquote><p>让背景图像不影响文本的排版（如果你不想让图像平铺，你可以使用background-repeat 属性）:</p></blockquote><pre><code>body{background-image:url('img_tree.png');background-repeat:no-repeat;}</code></pre><blockquote><p>以上实例中，背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，我们可以改变图像的位置。<br>可以利用 background-position 属性改变图像在背景中的位置:</p></blockquote><pre><code>body {background-image:url('img_tree.png');background-repeat:no-repeat;background-position:right top;}</code></pre><h3 id="6-5-背景图像位置-background-position">6.5 背景图像位置(background-position)</h3><blockquote><p>背景位置属性用于设置背景图像的位置，这个属性只能应用于块级元素和替换元素。其中替换元素包括img、input、textarea、select和object。</p></blockquote><pre><code>/**/background-positon:像素值/关键字;</code></pre><h3 id="6-6-像素值">6.6 像素值</h3><pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;    &lt;title&gt;background-position属性&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        #div1 {            width:400px;            height:300px;            border:1px solid gray;            background-image:url(&quot;../App_images/lesson/run_cj/one piece.jpg&quot;);            background-repeat:no-repeat;            background-position:80px 40px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="6-7-关键字">6.7 关键字</h3><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">top left</td><td style="text-align:center">左上</td></tr><tr><td style="text-align:center">top center</td><td style="text-align:center">靠上居中</td></tr><tr><td style="text-align:center">top right</td><td style="text-align:center">右上</td></tr><tr><td style="text-align:center">left center</td><td style="text-align:center">靠左居中</td></tr><tr><td style="text-align:center">center center</td><td style="text-align:center">正中</td></tr><tr><td style="text-align:center">right center</td><td style="text-align:center">靠右居中</td></tr><tr><td style="text-align:center">bottom left</td><td style="text-align:center">左下</td></tr><tr><td style="text-align:center">bottom center</td><td style="text-align:center">靠下居中</td></tr><tr><td style="text-align:center">bottom right</td><td style="text-align:center">右下</td></tr></tbody></table><h3 id="6-8-背景固定样式-background-attachment">6.8 背景固定样式(background-attachment)</h3><blockquote><p>设置背景图像是随对象滚动还是固定不动。</p></blockquote><pre><code>/*scroll表示背景图像随对象滚动而滚动，是默认选项；fixed表示背景图像固定在页面不动，只有其他的内容随滚动条滚动。*/background-attachment:scroll/fixed;</code></pre><h2 id="7-超链接-Link">7.超链接(Link)</h2><h3 id="7-1-链接样式">7.1 链接样式</h3><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">a:link</td><td style="text-align:center">定义a元素未访问时的样式</td></tr><tr><td style="text-align:center">a:visited</td><td style="text-align:center">定义a元素访问后的样式</td></tr><tr><td style="text-align:center">a:hover</td><td style="text-align:center">定义鼠标经过显示的样式</td></tr><tr><td style="text-align:center">a:active</td><td style="text-align:center">定义鼠标单击激活时的样式</td></tr></tbody></table><pre><code>a:link {color:#000000;}      /* 未访问链接*/a:visited {color:#00FF00;}  /* 已访问链接 */a:hover {color:#FF00FF;}  /* 鼠标移动到链接上 */a:active {color:#0000FF;}  /* 鼠标点击时 *//*注意： a:hover 必须在 a:link 和 a:visited 之后，需要严格按顺序才能看到效果。*//*注意： a:active 必须在 a:hover 之后。*/</code></pre><h3 id="7-2-文本修饰">7.2 文本修饰</h3><pre><code>/*text-decoration 属性主要用于删除链接中的下划线：*/a:link {text-decoration:none;}a:visited {text-decoration:none;}a:hover {text-decoration:underline;}a:active {text-decoration:underline;}</code></pre><h3 id="7-3-背景颜色">7.3 背景颜色</h3><pre><code>a:link {background-color:#B2FF99;}a:visited {background-color:#FFFF85;}a:hover {background-color:#FF704D;}a:active {background-color:#FF704D;}</code></pre><h2 id="8-图片样式">8.图片样式</h2><h3 id="8-1-图片大小">8.1 图片大小</h3><pre><code>/*语法*/width:像素值;height:像素值;</code></pre><h3 id="8-2-图片边框-border">8.2 图片边框(border)</h3><pre><code>/*语法*/border-width:像素值;border-style:属性值border-color:颜色值/*如上简写*/border:1px solid red;</code></pre><h3 id="8-3-图片水平对齐-text-align">8.3 图片水平对齐(text-align)</h3><blockquote><p>text-align一般只用在两个地方：文本水平对齐和图片水平对齐。也就是说，text-align只对文本和img标签有效，对其他标签无效。</p></blockquote><pre><code>&lt;!DOCTYPE html&gt; &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;head&gt;    &lt;title&gt;图片水平对齐&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        div        {            width:300px;            height:80px;            border:1px solid gray;        }        .div_img1{text-align:left;}        .div_img2{text-align:center;}        .div_img3{text-align:right;}        img{width:60px;height:60px;}    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;div_img1&quot;&gt;        &lt;img src=&quot;../App_images/lesson/run_cj/cartoongirl.gif&quot; alt=&quot;&quot;/&gt;    &lt;/div&gt;    &lt;div class=&quot;div_img2&quot;&gt;        &lt;img src=&quot;../App_images/lesson/run_cj/cartoongirl.gif&quot; alt=&quot;&quot;/&gt;    &lt;/div&gt;    &lt;div class=&quot;div_img3&quot;&gt;        &lt;img src=&quot;../App_images/lesson/run_cj/cartoongirl.gif&quot; alt=&quot;&quot;/&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="8-4-图片垂直对齐-vertical-align">8.4 图片垂直对齐(vertical-align)</h3><table><thead><tr><th style="text-align:center">vertical-align属性取值</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:center">top</td><td style="text-align:left">顶部对齐</td></tr><tr><td style="text-align:center">middle</td><td style="text-align:left">中部对齐</td></tr><tr><td style="text-align:center">baseline</td><td style="text-align:left">基线对齐</td></tr><tr><td style="text-align:center">bottom</td><td style="text-align:left">底部对齐</td></tr></tbody></table><h3 id="8-5-文字环绕-float">8.5 文字环绕(float)</h3><table><thead><tr><th style="text-align:center">loat属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">left</td><td style="text-align:center">元素向左浮动</td></tr><tr><td style="text-align:center">right</td><td style="text-align:center">元素向右浮动</td></tr></tbody></table><h3 id="8-6-设置图片与文字的间距-margin">8.6 设置图片与文字的间距(margin)</h3><pre><code>/*上外边距*/margin-top:像素值;/*下外边距*/margin-bottom:像素值;/*左外边距*/margin-left:像素值;/*右外边距*/margin-right:像素值;</code></pre><h2 id="9-列表样式-list-style">9.列表样式(list style)</h2><h3 id="9-1-列表项符号-list-style-type">9.1 列表项符号(list-style-type)</h3><pre><code>/*语法*/list-style-type:属性值;/*去除列表项符号*/list-style-type:none;</code></pre><h3 id="9-2-有序列表-ul">9.2 有序列表(ul)</h3><table><thead><tr><th style="text-align:center">list-style-type属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">decimal</td><td style="text-align:center">默认值，数字1、2、3……</td></tr><tr><td style="text-align:center">lower-roman</td><td style="text-align:center">小写罗马数字i、ii、iii……</td></tr><tr><td style="text-align:center">upper-roman</td><td style="text-align:center">大写罗马数字I、II、III……</td></tr><tr><td style="text-align:center">lower-alpha</td><td style="text-align:center">小写英文字母a、b、c……</td></tr><tr><td style="text-align:center">upper-alpha</td><td style="text-align:center">大写英文字母A、B、C……</td></tr></tbody></table><h3 id="9-3-无序列表-ul">9.3 无序列表(ul)</h3><table><thead><tr><th style="text-align:center">list-style-type属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">disc</td><td style="text-align:center">默认值，实心圆“●”</td></tr><tr><td style="text-align:center">circle</td><td style="text-align:center">空心圆“○”</td></tr><tr><td style="text-align:center">square</td><td style="text-align:center">实心正方形“■”</td></tr></tbody></table><h3 id="9-4-自定义列表项符号-list-style-image">9.4 自定义列表项符号(list-style-image)</h3><blockquote><p>不管有序列表还是无序列表，都有他们自身的列表项符号。但默认的列表符号都比较丑。使用自定义列表项符号。</p></blockquote><pre><code>/*语法*/list-style-image:url(图像地址);</code></pre><h2 id="10-表格样式">10.表格样式()</h2><h3 id="10-1-表格边框合并-border-collapse">10.1 表格边框合并(border-collapse)</h3><blockquote><p>表格特有的属性。除了表格，其他地方用不上。<br>只需要在<code>&lt;table&gt;</code>元素中设置border-collapse属性值就行，没必要在<code>&lt;th&gt;、&lt;td&gt;</code>这些元素也设置，造成代码冗余。</p></blockquote><table><thead><tr><th style="text-align:center">border-collapse属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">separate</td><td style="text-align:center">默认值，边框分开，不合并</td></tr><tr><td style="text-align:center">collapse</td><td style="text-align:center">边框合并，如果相邻，则共用一个边框</td></tr></tbody></table><h3 id="10-2-表格边框间距-border-spacing">10.2 表格边框间距(border-spacing)</h3><pre><code>/*语法*/border-spacing:像素值;/*定义了单元格之间水平方向的间距为5px，垂直方向的间距为10px。*/{border-spacing:5px 10px}</code></pre><h3 id="10-3-表格标题位置-caption-side">10.3 表格标题位置(caption-side)</h3><table><thead><tr><th style="text-align:center">caption-side属性值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">top</td><td style="text-align:center">默认值，标题在顶部</td></tr><tr><td style="text-align:center">bottom</td><td style="text-align:center">标题在底部</td></tr></tbody></table><h3 id="10-4-盒子模型-Box-Model">10.4 盒子模型(Box Model)</h3><p><a href="https://www.runoob.com/css/css-boxmodel.html" target="_blank" rel="noopener">详见参考</a><br><a href="http://www.lvyestudy.com/les_cj/cj_11.1.aspx" target="_blank" rel="noopener">详见参考</a></p><blockquote><p>所有HTML元素可以看作盒子，在CSS中，&quot;box model&quot;这一术语是用来设计和布局时使用。<br>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。<br>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。</p></blockquote><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">border</td><td style="text-align:center">（边框）元素边框</td></tr><tr><td style="text-align:center">margin</td><td style="text-align:center">（外边距）用于定义页面中元素与元素之间的距离</td></tr><tr><td style="text-align:center">padding</td><td style="text-align:center">（内边距）用于定义内容与边框之间的距离</td></tr><tr><td style="text-align:center">content</td><td style="text-align:center">（内容）可以是文字或图片</td></tr></tbody></table><ul><li>Margin(外边距) - 清除边框外的区域，外边距是透明的。</li><li>Border(边框) - 围绕在内边距和内容外的边框。</li><li>Padding(内边距) - 清除内容周围的区域，内边距是透明的。</li><li>Content(内容) - 盒子的内容，显示文本和图像。</li></ul><h3 id="10-5-元素的宽度和高度">10.5 元素的宽度和高度</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;style&gt;div {    /*背景颜色*/    background-color: lightgrey;    /*宽*/    width: 300px;    /*边框：宽度25px;样式实线;颜色green;*/    border: 25px solid green;    /*内容与边框之间的距离*/    padding: 25px;    /*元素与元素之间的距离*/    margin: 25px;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;盒子模型演示&lt;/h2&gt;&lt;p&gt;CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。&lt;/p&gt;&lt;div&gt;这里是盒子内的实际内容。有 25px 内间距，25px 外间距、25px 绿色边框。&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="10-6-内边距-padding">10.6 内边距(padding)</h3><pre><code>/*语法*/padding-top:像素值;padding-right:像素值;padding-bottom:像素值;padding-left:像素值;/*简洁写法*/padding:像素值;padding:像素值1 像素值2;padding:像素值1 像素值2 像素值3 像素值4;/*表示四个方向的内边距都是20px*/padding:20px;/*表示padding-top和padding-bottom为20px，padding-right和padding-left为40px。*/padding:20px 40px;/*表示padding-top为20px，padding-right为40px，padding-bottom为60px，padding-left为80px。大家按照顺时针方向记忆就可以了。*/padding:20px 40px 60px 80px;</code></pre><h3 id="10-7-外边距-margin">10.7 外边距(margin)</h3><pre><code>/*语法*/margin-top:像素值;margin-right:像素值;margin-bottom:像素值;margin-left:像素值;/*简洁写法*/margin:像素值;margin:像素值1 像素值2;margin:像素值1 像素值2 像素值3 像素值4;/*表示四个方向的外边距都是20px*/margin:20px;/*表示margin-top和margin-bottom为20px，margin-right和margin-left为40px。*/margin:20px 40px;/*表示margin-top为20px，margin-right为40px，margin-bottom为60px，margin-left为80px。大家按照顺时针方向记忆就可以了。*/margin:20px 40px 60px 80px;</code></pre><h3 id="10-8-浮动布局">10.8 浮动布局</h3><h3 id="10-9-定位布局-Position">10.9 定位布局(Position)</h3><blockquote><p>浮动布局比较灵活，但是不容易控制。而定位布局的出现，使得用户精准定位页面中的任意元素成为可能，使得网页布局变得更加随心所欲。当然由于定位布局缺乏灵活性，也给空间大小和位置不确定的版面布局带来困惑。<br>定位的方法有很多种，它们分别是固定定位（fixed）、相对定位（relative）、绝对定位（absolute）和静态定位（static）。</p></blockquote><p><strong>position 属性的五个值：</strong></p><ul><li>static</li><li>相对定位(relative)</li><li>固定定位(fixed)</li><li>绝对定位(absolute)</li><li>sticky</li></ul><h3 id="11-固定定位-fixed">11.固定定位(fixed)</h3><pre><code>/*语法*/position:fixed;top:像素值;bottom;像素值;left:像素值;right:像素值;/*position:fixed;”是结合top、bottom、left和right这4个属性一起使用的，其中“position:fixed;”使得元素成为固定定位元素，接着使用top、bottom、left和right这4个属性来设置元素相对浏览器的位置。*/</code></pre><h3 id="11-1-相对定位-relative">11.1 相对定位(relative)</h3><pre><code>/*语法*/position:relative;top:像素值;bottom:像素值;left:像素值;right:像素值;/*“position:relative;”是结合top、bottom、left和right这4个属性一起使用的，其中“position:relative;”使得元素成为相对定位元素，接着使用top、bottom、left和right这4个属性来设置元素相对原始位置。相对定位的容器浮上来后，其所占的位置仍然留有空位，后面的无定位元素仍然不会“挤上来”。*/</code></pre><h3 id="11-2-绝对定位-absolute">11.2 绝对定位(absolute)</h3><blockquote><p>绝对定位在几种定位方法中使用最广泛，这种方法能够很精确地把元素移动到任意你想要的位置。<br>一个元素变成了绝对定位元素，这个元素就完全脱离正常文档流了，绝对定位元素的前面或者后面的元素会认为这个元素并不存在，即这个元素浮于其他元素上面，它是独立出来的。</p></blockquote><pre><code>/*语法*/position:absolute;top:像素值;bottom:像素值;left:像素值;right:像素值;</code></pre><h3 id="11-3-静态定位-static">11.3 静态定位(static)</h3><blockquote><p>如果没有指定元素的position属性值，也就是默认情况下，元素是静态定位。只要是支持position属性的html对象都是默认为static。static是position属性的默认值，它表示块保留在原本应该在的位置，不会重新定位。<br>说白了，平常我们根本就用不到“position:static”，不过呢，如果有时候我们使用javascript来控制元素定位的时候，如果想要使得其他定位方式的元素变成静态定位，就要使用“position:static;”来实现。<br>在CSS入门阶段，大家只需要深入学习固定定位（fixed）、相对定位（relative）和绝对定位（absolute）就已经可以走得很远了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html基础知识总结</title>
      <link href="/2020/04/20/html%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2020/04/20/html%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="一、HTML的历史">一、HTML的历史</h2><p>    HTML,超文本标记语言，英文全称是Hyper Text Markup Language，由Tim Berners-Lee在1982年提出，它是互联网上应用最广泛的标记语言。</p><h3 id="1-HTML发展过程">1.HTML发展过程</h3><ul><li>HTML（第一版）：1993年6月由互联网工程工作小组IETF(Interenet Engineering Task Force)发布的HTML工作草案。</li><li>HTML2.0 ：1995年11月作为RFC 1886发布，在RFC 2854于2000年6月发布之后被宣布已经过时。</li><li>HTML3…2 ：1996年1月14日由W3C组织发布，是HTML文档第一个被广泛使用的标准。</li><li>HTML4.0 ： 1997年12月18日由W3C组织发布，也是W3C推荐标准。</li><li>HTML4.01（微小改进）：1997年12月24日由W3C组织发布，是HTML文档另一个重要的、广泛使用的标准。</li><li>XHTML1.0 ：发布于2000年1月26日，是W3C组织推荐标准，后来经过修订于2002年8月1日重新发布。</li><li>在HTML的发展历史中，最为广为人知的是HTML3.2和HTML4.01</li></ul><h3 id="2-HTML4-01和XHTML">2.HTML4.01和XHTML</h3><p>    XHTML的全称是(eXtensible Hyper Text Markup Language，扩展的超文本标记语言)，XHTML和HTML4.01具有很好的兼容性，而且XHTML是更严格、更纯净的HTML代码。W3C组织制定XHTML，目标是逐步取代原有的HTML。简单地说，XHTML就是最新版本的HTML规范。</p><p>XHTML要求HTML文档首先必须是一份XML文档。XML文档是一种结构化文档，它有如下4条基本规则：</p><ul><li>整个文档有且有一个根元素。</li><li>每个元素都由开始标签和结束标签组成，例如<code>&lt;a&gt;&lt;/a&gt;</code>，就是一对标签。除非使用空元素语法，例如<code>&lt;br/&gt;</code>就是空元素语法。</li><li>元素与元素之间应该合理嵌套。例如<code>&lt;div&gt;&lt;span&gt;</code>疯狂<code>&lt;/span&gt;&lt;/div&gt;</code>，这可以明确的看出<code>&lt;/span&gt;</code>元素是<code>&lt;/div&gt;</code>的子元素，这就是合理嵌套。但<code>&lt;div&gt;&lt;span</code>&gt;疯狂<code>&lt;/div&gt;&lt;/span&gt;</code>这种写法就比较混乱，也就是所谓的不合理嵌套。</li><li>元素的属性必须有属性值，而且属性值应该用引号（单引号和双引号都可以）引起来。</li></ul><h3 id="3-HTML5的诞生">3.HTML5的诞生</h3><p>    HTML5是指万维网的核心语言、标准通用标记语言下的一个应用超文本标记语言的第五次重大修改。HTML5的设计目的是为了在移动设备上支持多媒体。新的语法特征被引进以支持这一点，如video、audio和canvas标记。还引进了新的功能，可以真正改变用户与文档的交互方式。</p><p>    HTML5草案的前身名为Web Application 1.0，于2004年被WHATWG提出，于2007年被W3C接纳，并成立了新的HTML工作团队。</p><p>    HTML5的第一份正式草案已于2008年1月22日公布。HTML5仍处于完善之中。2013年5月6日，HTML5.1正式草案公布。该规范定义了第五次重大版本，第一次要修订万维网的核心语言：超文本标记语言。在这个版本中，新功能不断推出，以帮助Web应用程序的作者，努力提高新元素互操作性。直到2014年10月29日，经过几乎8年的艰辛努力，HTML5标准规范终于制定完成了，并已公开发布。</p><p>    HTML5还在继续修改完善，增加新的功能，未来前景很广。</p><h2 id="二、常用标签">二、常用标签</h2><h3 id="1-基础标签">1.基础标签</h3><p><strong>一个网页大致构成是：</strong></p><pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;!-- 优先使用最新的ie版本 --&gt; &lt;title&gt;文档标题&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;资源所在路径&quot; type=&quot;规定被链接文档的MIME类型&quot;   media=&quot;&quot; target=&quot;&quot; charset=&quot;定义编码方式&quot;&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;!--主体内容 显示在网页上的，由许多的标签组成--&gt;  &lt;p&gt;&lt;/p&gt;  &lt;h1&gt;&lt;/h1&gt;   &lt;script src=&quot;引用文件地址&quot;&gt;&lt;/script&gt;    &lt;script type=&quot;text/javascript&quot;&gt;    &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; </code></pre><ul><li><p><code>&lt;!DOCTYPE HTML&gt;</code> 定义文档类型为HTML，自从HTML5问世之后，就开始使用。这个在编写代码时必须要写上，这个是用来声明文档类型的，文档类型类似于连接，规定了HTML页面必须遵从的良好规则，能自动检测错误和其他有用的东西</p></li><li><p><code>&lt;head&gt;&lt;/head&gt;</code>定义文档的一些相关信息</p></li><li><p><code>&lt;title&gt;&lt;/title&gt;</code>定义文档的标题</p></li><li><p><code>&lt;meta&gt;</code> 定义关于 HTML 文档的元信息，比如对页面进行描述，关键词，作者等。不会显示在网页上。它的属性有charset，name，http-equiv，content属性等，后期再对这个标签进行详细的解释</p></li><li><p><code>&lt;link&gt;</code>用于链接样式表，定义文档与外部资源的关系。关于什么是MIME类型，可以参考MIME类型参考手册，有具体的讲解</p></li><li><p><code>&lt;!-- --&gt;</code>定义注释，注明一些信息，便于开发者阅读浏览</p></li><li><p><code>&lt;h1&gt;~&lt;h6&gt;</code>定义标题，字体的大小<code>&lt;h1&gt;</code>最大，<code>&lt;h6&gt;</code>最小</p></li><li><p><code>&lt;p&gt;&lt;/p&gt;</code>段落标签，是一个块级标签</p></li><li><p><code>&lt;span&gt;&lt;/span&gt;</code>和<code>&lt;div&gt;&lt;/div&gt;</code>定义文档的节</p></li><li><p><code>&lt;iframe&gt;&lt;/iframe&gt;</code>定义文档的内联框架</p></li></ul><h3 id="2-表格标签">2.表格标签</h3><ul><li><code>&lt;table&gt;&lt;/table&gt;</code>定义表格</li><li><code>&lt;th&gt;&lt;/th&gt;</code>定义表格的表头</li><li><code>&lt;tr&gt;&lt;/tr&gt;</code>定义表格的行</li><li><code>&lt;td&gt;&lt;/td&gt;</code>定义表格的单元</li><li><code>&lt;caption&gt;&lt;/caption&gt;</code> 定义表格标题</li><li><code>&lt;thead&gt;&lt;thead&gt;</code>定义表格中的表头内容</li><li><code>&lt;tbody&gt;&lt;/tbody&gt;</code> 定义表格中的主体内容</li><li><code>&lt;tfoot&gt;&lt;/tfood&gt;</code> 定义表格中的表注内容（脚注）</li></ul><h3 id="3-列表标签">3.列表标签</h3><ul><li><code>&lt;ul&gt;&lt;/ul&gt;</code>定义无序列表</li><li><code>&lt;ol&gt;&lt;/ol&gt;</code>定义有序列表</li><li><code>&lt;li&gt;&lt;/li&gt;</code>定义列表项</li><li><code>&lt;dl&gt;&lt;/dl&gt;</code> 定义列表</li><li><code>&lt;dt&gt;&lt;/dt&gt;</code> 自定义列表项目</li><li><code>&lt;dd&gt;&lt;/dd&gt;</code> 定义自定义列表的描述</li></ul><h3 id="4-表单标签">4.表单标签</h3><ul><li><code>&lt;form&gt;&lt;/form&gt;</code> 定义供用户输入的表单</li><li><code>&lt;input&gt;</code> 定义输入控件，如密码框，输入框，按钮等</li><li><code>&lt;textarea&gt;&lt;/textarea&gt;</code> 定义文本域 （一个多行的输入控件）</li><li><code>&lt;label&gt;&lt;/label&gt;</code> 定义了 <code>&lt;input&gt;</code> 元素的标签，一般为输入标题</li><li><code>&lt;filedset&gt;&lt;/filedset&gt;</code> 定义了一组相关的表单元素，并使用外框包含起来</li><li><code>&lt;legend&gt;&lt;/legend&gt;</code> 定义了 <code>&lt;fieldset&gt;</code>元素的标题</li><li><code>&lt;select&gt;&lt;/select&gt;</code> 定义了下拉选项列表</li><li><code>&lt;optgroup&gt;&lt;/optgroup&gt;</code> 定义了下拉选项组</li><li><code>&lt;option&gt;&lt;/option&gt;</code> 定义下拉列表中的选项</li><li><code>&lt;button&gt;&lt;/button&gt;</code>定义一个点击按钮</li></ul><h3 id="5-多媒体链接">5.多媒体链接</h3><ul><li><code>&lt;a&gt;&lt;/a&gt;</code>定义一个超链接</li><li><code>&lt;img&gt;</code>定义图像</li><li><code>&lt;embed&gt;&lt;/embed&gt;</code> 定义在页面中嵌入的内容，可插入音频视频等。</li></ul><h3 id="6-格式标签">6.格式标签</h3><ul><li><code>&lt;b&gt;&lt;/b&gt;</code>定义粗体文本</li><li><code>&lt;del&gt;&lt;/del&gt;</code>定义被删除文本</li><li><code>&lt;em&gt;&lt;/em&gt;</code>定义强调文本</li><li><code>&lt;i&gt;&lt;/i&gt;</code>定义斜体文本</li><li><code>&lt;sup&gt;&lt;/sup&gt;</code>定义上标文本</li><li><code>&lt;sub&gt;&lt;/sub&gt;</code> 定义下标文本</li><li><code>&lt;hr&gt;</code>定义水平线</li><li><code>&lt;br&gt;</code>定义简单的换行</li></ul>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器介绍</title>
      <link href="/2020/04/20/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%8B%E7%BB%8D/"/>
      <url>/2020/04/20/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1>浏览器介绍</h1><h2 id="1-介绍">1. 介绍</h2><p>     浏览器是指可以显示网页服务器或者文件系统的HTML文件的内容，并让用户与这些文件交互的一种软件。它用来显示在万维网或局域网等内的文字、图像及其他信息。这些文字或图像，可以是连接其他网址的超链接，用户可迅速及轻易地浏览各种信息。大部分网页为HTML格式。</p><h2 id="1-2-浏览器内核">1.2 浏览器内核</h2><p>     浏览器最重要或者说核心的部分是“Rendering Engine”，可大概译为“渲染引擎”，不过我们一般习惯将之称为“浏览器内核”。负责对网页语法的解释（如标准通用标记语言下的一个应用HTML、JavaScript）并渲染（显示）网页。 所以，通常所谓的浏览器内核也就是浏览器所采用的渲染引擎，渲染引擎决定了浏览器如何显示网页的内容以及页面的格式信息。不同的浏览器内核对网页编写语法的解释也有不同，因此同一网页在不同的内核的浏览器里的渲染（显示）效果也可能不同，这也是网页编写者需要在不同内核的浏览器中测试网页显示效果的原因。</p><h2 id="1-3-常用浏览器及其内核">1.3 常用浏览器及其内核</h2><p><strong>浏览器：                                   内核：</strong></p><p>IE浏览器、百度                            Trident（俗称的IE内核）<br>Firefox(火狐）                             Gecko<br>Google Chrome(谷歌)                  webkit/blink(前期与苹果共同使用webkit内核，后期使用自己的blink内核)<br>safari(苹果浏览器)                         webkit<br>opera(挪威某公司开发的浏览器)         Presto/webkit/blink(最先使用自己的presto,后改为wekit,现使用blink)<br>360、猎豹浏览器、2345浏览器           IE+Chrome（双内核）<br>搜狗、遨游、QQ浏览器内核               Trident+Webkit（兼容模式+高速模式）</p><h2 id="1-4-内核详细介绍">1.4 内核详细介绍</h2><ul><li><p>Trident（也称IE内核）<br>     Trident(又叫MSHTML)，是微软开发的一种排版引擎。<br>     Trident内核的常见浏览器有：IE6、IE7、IE8（Trident 4.0）、IE9（Trident 5.0）、IE10（Trident 6.0）；360安全浏览器（1.0-5.0为Trident，6.0为Trident+Webkit，7.0为Trident+Blink）猎豹极轻浏览器，360极速浏览器（7.5之前为Trident+Webkit，7.5为Trident+Blink）猎豹安全浏览器（1.0-4.2版本为Trident+Webkit，4.3及以后版本为Trident+Blink）猎豹极轻浏览器，傲游浏览器（傲游1.x、2.x为IE内核，3.x为IE与Webkit双核）、百度浏览器（早期版本）、世界之窗浏览器（最初为IE内核，2013年采用Chrome+IE内核）、2345浏览器、腾讯TT、淘宝浏览器、采编读浏览器、搜狗高速浏览器（1.x为Trident，2.0及以后版本为Trident+Webkit）、阿云浏览器（早期版本）、瑞星安全浏览器、Slim Browser、 GreenBrowser、爱帆浏览器（12 之前版本）、115浏览器、155浏览器、闪游浏览器、N氧化碳浏览器、糖果浏览器、彩虹浏览器、瑞影浏览器、勇者无疆浏览器、114浏览器、蚂蚁浏览器、飞腾浏览器、速达浏览器、佐罗浏览器、海豚浏览器（iPhone/iPad/Android）、UC浏览器（Webkit内核+Trident内核）等。<br>其中部分浏览器的新版本是“双核”甚至是“多核”，其中一个内核是Trident，然后再增加一个其他内核。国内的厂商一般把其他内核叫做“高速浏览模式”，而Trident则是“兼容浏览模式”，用户可以来回切换。</p></li><li><p>Webkit内核<br>      Webkit（Safari内核，Chrome内核原型，开源）:它是苹果公司自己的内核，也是苹果的Safari浏览器使用的内核。 Webkit引擎包含WebCore排版引擎及JavaScriptCore解析引擎，均是从KDE的KHTML及KJS引擎衍生而来，它们都是自由软件，在GPL条约下授权，同时支持BSD系统的开发。所以Webkit也是自由软件，同时开放源代码。在安全方面不受IE、Firefox的制约，所以Safari浏览器在国内还是很安全的。<br>WebKit内核常见的浏览器：傲游浏览器3、Apple Safari （Win/Mac/iPhone/iPad）、Symbian手机浏览器、Android 默认浏览器</p></li><li><p>Blink内核<br>      Blink是一个由Google和Opera Software开发的浏览器排版引擎，Google计划将这个渲染引擎作为Chromium计划的一部分，并且在2013年4月的时候公布了这一消息。这一渲染引擎是开源引擎WebKit中WebCore组件的一个分支，并且在Chrome（28及往后版本）、Opera（15及往后版本）和Yandex浏览器中使用。</p></li><li><p>Gecko内核<br>       Gecko（Firefox内核）：Netscape6开始采用的内核，后来的Mozilla FireFox（火狐浏览器） 也采用了该内核，Gecko的特点是代码完全公开，因此，其可开发程度很高，全世界的程序员都可以为其编写代码，增加功能。因为这是个开源内核，因此受到许多人的青睐，Gecko内核的浏览器也很多，这也是Gecko内核虽然年轻但市场占有率能够迅速提高的重要原因。<br>  Gecko内核常见的浏览器：Mozilla Firefox、Mozilla SeaMonkey、waterfox（Firefox的64位开源版）、Iceweasel、Epiphany（早期版本）、Flock（早期版本）、K-Meleon。</p></li><li><p>Presto内核<br>      这是一个动态内核，与前面几个内核的最大的区别就在脚本处理上，Presto有着天生的优势，页面的全部或者部分都能够在回应脚本事件时等情况下被重新解析。此外该内核在执行Javascrīpt的时候有着最快的速度，根据在同等条件下的测试，Presto内核执行同等Javascrīpt所需的时间仅有Trident和Gecko内核的约1/3（Trident内核最慢，不过两者相差没有多大），本文的其中一个修改者认为上述测试信息过于老旧且不完整，因为他曾做过的小测试显示Presto部分快部分慢，各内核总体相当。那次测试的时候因为Apple机的硬件条件和普通PC机不同所以没有测试WebCore内核。只可惜Presto是商业引擎，使用Presto的除开Opera以外，只剩下NDSBrowser、Wii Internet Channle、Nokia 770网络浏览器等，这很大程度上限制了Presto的发展。<br>  Opera现已改用Google Chrome的Blink内核。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
